{"version":3,"sources":["reactnode_modules/@babel/runtime/helpers/arrayLikeToArray.js","reactnode_modules/@babel/runtime/helpers/arrayWithHoles.js","reactnode_modules/@babel/runtime/helpers/arrayWithoutHoles.js","reactnode_modules/@babel/runtime/helpers/extends.js","reactnode_modules/@babel/runtime/helpers/interopRequireDefault.js","reactnode_modules/@babel/runtime/helpers/iterableToArray.js","reactnode_modules/@babel/runtime/helpers/iterableToArrayLimit.js","reactnode_modules/@babel/runtime/helpers/nonIterableRest.js","reactnode_modules/@babel/runtime/helpers/nonIterableSpread.js","reactnode_modules/@babel/runtime/helpers/slicedToArray.js","reactnode_modules/@babel/runtime/helpers/toConsumableArray.js","reactnode_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","react-native-countdown-circle-timer/src/components/CountdownCircleTimer.jsx","react-native-countdown-circle-timer/src/components/TimeWrapper.jsx","react-native-countdown-circle-timer/src/components/index.js","react-native-countdown-circle-timer/src/hooks/index.js","react-native-countdown-circle-timer/src/hooks/useCountdown.js","react-native-countdown-circle-timer/src/utils/getStroke.js","react-native-countdown-circle-timer/src/utils/index.js","reactshared/components/DefsLinearGradient.jsx","reactshared/components/index.js","reactshared/index.js","reactshared/utils/colorsValidator.js","reactshared/utils/countdownCircleTimerDefaultProps.js","reactshared/utils/countdownCircleTimerProps.js","reactshared/utils/getGradientId.js","reactshared/utils/getPathProps.js","reactshared/utils/getStartAt.js","reactshared/utils/index.js","reactshared/utils/styles.js","reactshared/utils/uuid.js","reactnode_modules/prop-types/factoryWithThrowingShims.js","reactnode_modules/prop-types/index.js","reactnode_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:/react-native-countdown-circle-timer/external \"react\"","webpack:/react-native-countdown-circle-timer/external \"react-native\"","webpack:/react-native-countdown-circle-timer/external \"react-native-svg\"","react-native-countdown-circle-timer/webpack/bootstrap","react-native-countdown-circle-timer/src/index.js","index.ts","ReactNativeSVG.web.ts","SvgTouchableMixin.ts","resolve.ts"],"names":["module","exports","arr","len","length","i","arr2","Array","isArray","arrayLikeToArray","r","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","obj","__esModule","iter","Symbol","iterator","from","_arr","_n","_d","_e","_s","_i","next","done","push","value","err","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","AnimatedPath","Animated","createAnimatedComponent","Path","CountdownCircleTimer","props","size","strokeWidth","trailColor","trailStrokeWidth","duration","isPlaying","colors","strokeLinecap","children","isLinearGradient","gradientUniqueKey","onComplete","ariaLabel","renderAriaTime","initialRemainingTime","rotation","useCountdown","Math","max","path","pathLength","styles","gradientId","animatedElapsedTime","animatedStroke","strokeDashoffset","durationMilliseconds","isProgressPathVisible","View","style","wrapper","accessible","accessibilityLabel","width","height","DefsLinearGradient","defs","Defs","linearGradient","LinearGradient","stop","Stop","fill","stroke","d","strokeDasharray","TimeWrapper","animatedColor","propTypes","countdownCircleTimerProps","defaultProps","countdownCircleTimerDefaultProps","displayName","StyleSheet","create","time","timeStyle","ariaTime","opacity","useState","remainingTime","elapsedTime","timeProps","setTimeProps","useEffect","animatedListenerId","addListener","ceil","removeListener","accessibilityElementsHidden","importantForAccessibility","React","isValidElement","cloneElement","Children","only","Text","accessibilityRole","accessibilityLiveRegion","PropTypes","number","isRequired","object","oneOfType","string","useRef","isInFinishedState","setIsInFinishedState","startAt","getStartAt","current","repeatTimeoutRef","isMountedRef","Value","totalElapsedTime","getPathProps","useMemo","getGradientId","getWrapperStyle","getStroke","interpolate","inputRange","outputRange","setValue","stopAnimation","removeAllListeners","clearTimeout","animateTime","timing","toValue","easing","Easing","linear","useNativeDriver","start","finished","isDurationReached","shouldRepeat","c","delay","setTimeout","resetAnimation","colorsLength","colorsTotalDuration","map","index","colorEndTimeTemp","colorEndTime","id","x1","y1","x2","y2","isColorsString","offset","stopColor","currentDuration","gradient","TagType","func","isHexColor","color","match","getErrorInProp","propName","componentName","getHexColorError","type","Error","colorsValidator","node","bool","oneOf","uuid","halfSize","halfStrokeWith","arcRadius","arcDiameter","rotationIndicator","PI","position","display","justifyContent","alignItems","left","top","random","substring","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","location","propFullName","secret","getShim","ReactPropTypes","array","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","shape","exact","checkPropTypes","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","createElement","cE","ucE","prepare","self","translate","scale","skewX","skewY","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","forwardedRef","onPress","onPressIn","onPressOut","onLongPress","rest","hasTouchableProperty","clean","onStartShouldSetResponder","onResponderTerminationRequest","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","transform","resolve","getBoundingClientRect","remeasure","tag","state","touchable","measureLayout","relativeNode","relativeRect","x","y","callback","WebShape","Component","Circle","ClipPath","Ellipse","G","Image","Line","Polygon","Polyline","RadialGradient","Rect","Svg","TSpan","TextPath","Use","Mask","ForeignObject","Marker","Pattern","PRESS_RETENTION_OFFSET","right","bottom","Mixin","Touchable","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableGetInitialState","SvgTouchableMixin","touchableHandlePress","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandleLongPress","touchableGetPressRectOffset","touchableGetHitSlop","touchableGetHighlightDelayMS","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","touchKeys","touchVals","numTouchKeys","val","styleProp","cleanedProps"],"mappings":"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","file":"static/js/1.82f3f561.chunk.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","import React from 'react'\nimport { View, Animated } from 'react-native'\nimport Svg, { Path, Defs, LinearGradient, Stop } from 'react-native-svg'\nimport {\n  DefsLinearGradient,\n  countdownCircleTimerProps,\n  countdownCircleTimerDefaultProps,\n} from '@countdown-circle-timer/shared'\nimport { TimeWrapper } from '.'\nimport { useCountdown } from '../hooks'\n\nconst AnimatedPath = Animated.createAnimatedComponent(Path)\n\nconst CountdownCircleTimer = (props) => {\n  const {\n    size,\n    strokeWidth,\n    trailColor,\n    trailStrokeWidth,\n    duration,\n    isPlaying,\n    colors,\n    strokeLinecap,\n    children,\n    isLinearGradient,\n    gradientUniqueKey,\n    onComplete,\n    ariaLabel,\n    renderAriaTime,\n    initialRemainingTime,\n    rotation,\n  } = props\n\n  const {\n    path,\n    pathLength,\n    styles,\n    gradientId,\n    animatedElapsedTime,\n    animatedStroke,\n    strokeDashoffset,\n    durationMilliseconds,\n    isProgressPathVisible,\n  } = useCountdown({\n    isPlaying,\n    duration,\n    size,\n    // https://github.com/vydimitrov/react-countdown-circle-timer/pull/82#issuecomment-774961578\n    // Find the larger strokeWidth and calculate the path.\n    strokeWidth: Math.max(strokeWidth, trailStrokeWidth ?? 0),\n    colors,\n    initialRemainingTime,\n    onComplete,\n    gradientUniqueKey,\n    rotation,\n  })\n\n  return (\n    <View\n      style={styles.wrapper}\n      accessible={true}\n      accessibilityLabel={ariaLabel}\n    >\n      <Svg width={size} height={size}>\n        {isLinearGradient && (\n          <DefsLinearGradient\n            colors={colors}\n            gradientId={gradientId}\n            defs={Defs}\n            linearGradient={LinearGradient}\n            stop={Stop}\n          />\n        )}\n        <Path\n          fill=\"none\"\n          strokeWidth={trailStrokeWidth ?? strokeWidth}\n          stroke={trailColor}\n          d={path}\n        />\n        {isProgressPathVisible && (\n          <AnimatedPath\n            fill=\"none\"\n            stroke={isLinearGradient ? `url(#${gradientId})` : animatedStroke}\n            d={path}\n            strokeLinecap={strokeLinecap}\n            strokeWidth={strokeWidth}\n            strokeDasharray={pathLength}\n            strokeDashoffset={strokeDashoffset}\n          />\n        )}\n      </Svg>\n      {(children !== null || typeof renderAriaTime === 'function') && (\n        <TimeWrapper\n          animatedColor={animatedStroke}\n          animatedElapsedTime={animatedElapsedTime}\n          duration={durationMilliseconds / 1000} // durationMilliseconds is locked version of the duration\n          renderAriaTime={renderAriaTime}\n        >\n          {children}\n        </TimeWrapper>\n      )}\n    </View>\n  )\n}\n\nCountdownCircleTimer.propTypes = countdownCircleTimerProps\nCountdownCircleTimer.defaultProps = countdownCircleTimerDefaultProps\nCountdownCircleTimer.displayName = 'CountdownCircleTimer'\n\nexport { CountdownCircleTimer }\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, Animated, StyleSheet } from 'react-native'\nimport {\n  countdownCircleTimerProps,\n  timeStyle,\n} from '@countdown-circle-timer/shared'\n\nconst styles = StyleSheet.create({\n  time: timeStyle,\n  ariaTime: { height: 0, opacity: 0 },\n})\n\nconst TimeWrapper = (props) => {\n  const {\n    children,\n    animatedElapsedTime,\n    duration,\n    renderAriaTime,\n    animatedColor,\n  } = props\n\n  const [timeProps, setTimeProps] = useState({\n    remainingTime: duration,\n    elapsedTime: 0,\n    animatedColor,\n  })\n\n  useEffect(() => {\n    const animatedListenerId = animatedElapsedTime.addListener(({ value }) => {\n      const elapsedTime = value / 1000\n      setTimeProps({\n        remainingTime: Math.ceil(duration - elapsedTime),\n        elapsedTime,\n        animatedColor,\n      })\n    })\n\n    return () => {\n      animatedElapsedTime.removeListener(animatedListenerId)\n    }\n  }, [animatedElapsedTime, animatedColor, duration])\n\n  return (\n    <>\n      {children !== null && (\n        <Animated.View\n          accessibilityElementsHidden={true}\n          importantForAccessibility=\"no-hide-descendants\"\n          style={styles.time}\n        >\n          {React.isValidElement(children)\n            ? React.cloneElement(React.Children.only(children), timeProps)\n            : children(timeProps)}\n        </Animated.View>\n      )}\n      {typeof renderAriaTime === 'function' && (\n        <Text\n          accessibilityRole=\"timer\"\n          accessibilityLiveRegion=\"assertive\"\n          importantForAccessibility=\"yes\"\n          style={styles.ariaTime}\n        >\n          {renderAriaTime(timeProps)}\n        </Text>\n      )}\n    </>\n  )\n}\n\nTimeWrapper.propTypes = {\n  duration: PropTypes.number.isRequired,\n  animatedElapsedTime: PropTypes.object.isRequired,\n  // when there is a single color we just past the color string\n  // when there are more colors it is an interpolate object\n  animatedColor: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  children: countdownCircleTimerProps.children,\n  renderAriaTime: countdownCircleTimerProps.renderAriaTime,\n}\n\nexport { TimeWrapper }\n","export { CountdownCircleTimer } from './CountdownCircleTimer'\nexport { TimeWrapper } from './TimeWrapper'\n","export { useCountdown } from './useCountdown'\n","import { useRef, useState, useEffect, useMemo } from 'react'\nimport { Animated, Easing, StyleSheet } from 'react-native'\nimport {\n  getPathProps,\n  getStartAt,\n  getGradientId,\n  getWrapperStyle,\n} from '@countdown-circle-timer/shared'\nimport { getStroke } from '../utils'\n\nexport const useCountdown = ({\n  isPlaying,\n  duration,\n  size,\n  strokeWidth,\n  colors,\n  initialRemainingTime,\n  onComplete,\n  gradientUniqueKey,\n  rotation,\n}) => {\n  const elapsedTime = useRef(0)\n  const [isInFinishedState, setIsInFinishedState] = useState(false)\n  // time related props can NOT be changed once the component is mounted because animation relays on elapsed time since the timer is running\n  // to change them pass a new value to the \"key\" prop of the component, which will reinitialize/restart the timer and use the new props\n  const { durationMilliseconds, startAt } = useRef({\n    durationMilliseconds: duration * 1000,\n    startAt: getStartAt(initialRemainingTime, duration) * 1000, // in milliseconds\n  }).current\n  const repeatTimeoutRef = useRef(null)\n  const isMountedRef = useRef(false)\n  const animatedElapsedTime = useRef(new Animated.Value(0)).current\n  const totalElapsedTime = useRef((startAt / 1000) * -1) // in seconds\n  const { path, pathLength } = getPathProps(size, strokeWidth, rotation)\n  const gradientId = useMemo(() => getGradientId(gradientUniqueKey), [\n    gradientUniqueKey,\n  ])\n  const styles = StyleSheet.create({ wrapper: getWrapperStyle(size) })\n  const animatedStroke = getStroke({\n    colors,\n    animatedElapsedTime,\n    durationMilliseconds,\n  })\n  const strokeDashoffset = animatedElapsedTime.interpolate({\n    inputRange: [0, durationMilliseconds],\n    outputRange: [0, pathLength],\n  })\n\n  useEffect(() => {\n    // set isMounted prop to true when the component is mounted\n    isMountedRef.current = true\n\n    // set initial remaining time if it is provided\n    if (startAt) {\n      elapsedTime.current = startAt\n      animatedElapsedTime.setValue(startAt)\n    }\n\n    // keep track of the elapsed time\n    animatedElapsedTime.addListener(({ value }) => {\n      elapsedTime.current = value\n    })\n\n    // final cleanup\n    return () => {\n      isMountedRef.current = false\n      animatedElapsedTime.stopAnimation()\n      animatedElapsedTime.removeAllListeners()\n      clearTimeout(repeatTimeoutRef.current)\n    }\n  }, [animatedElapsedTime, startAt])\n\n  // toggle playing effect\n  useEffect(() => {\n    const animateTime = () => {\n      Animated.timing(animatedElapsedTime, {\n        toValue: durationMilliseconds,\n        easing: Easing.linear,\n        duration: durationMilliseconds - elapsedTime.current,\n        useNativeDriver: false,\n      }).start(({ finished }) => {\n        const isDurationReached = elapsedTime.current === durationMilliseconds\n\n        // finished - React Native state, it is set to true even when paused\n        // isInFinishedState - keeps track if animation is currently in finished state and prevents running onComplete callback again if in finished state\n        // isDurationReached - tells us that we can fire the onComplete callback\n        if (finished && !isInFinishedState && isDurationReached) {\n          setIsInFinishedState(true)\n\n          if (typeof onComplete === 'function') {\n            totalElapsedTime.current += durationMilliseconds / 1000\n\n            const [shouldRepeat = false, delay = 0] =\n              onComplete(totalElapsedTime.current) || []\n\n            if (shouldRepeat && isMountedRef.current) {\n              repeatTimeoutRef.current = setTimeout(() => {\n                // reset animation and start over\n                elapsedTime.current = 0\n                animatedElapsedTime.resetAnimation()\n                setIsInFinishedState(false)\n                animateTime()\n              }, delay)\n            }\n          }\n        }\n      })\n    }\n\n    if (isPlaying) {\n      animateTime()\n\n      return () => {\n        animatedElapsedTime.stopAnimation()\n      }\n    }\n  }, [\n    isPlaying,\n    animatedElapsedTime,\n    durationMilliseconds,\n    onComplete,\n    isInFinishedState,\n  ])\n\n  return {\n    path,\n    pathLength,\n    styles,\n    gradientId,\n    animatedElapsedTime,\n    animatedStroke,\n    strokeDashoffset,\n    durationMilliseconds,\n    isProgressPathVisible: !isInFinishedState,\n  }\n}\n","export const getStroke = ({\n  colors,\n  animatedElapsedTime,\n  durationMilliseconds,\n}) => {\n  if (typeof colors === 'string') {\n    return colors\n  }\n\n  const colorsLength = colors.length\n  if (colorsLength === 1) {\n    return colors[0][0]\n  }\n\n  let colorsTotalDuration = 0\n\n  const inputRange = colors.map(([_, duration], index) => {\n    const isLastColor = colorsLength === index + 1\n    if (colorsTotalDuration >= durationMilliseconds || isLastColor) {\n      return durationMilliseconds\n    }\n\n    const colorEndTimeTemp =\n      duration !== undefined\n        ? colorsTotalDuration + duration * durationMilliseconds\n        : durationMilliseconds - colorsTotalDuration\n    const colorEndTime =\n      colorEndTimeTemp >= durationMilliseconds\n        ? durationMilliseconds\n        : colorEndTimeTemp\n\n    colorsTotalDuration = colorEndTime\n\n    return colorEndTime\n  })\n\n  const outputRange = colors.map(([color]) => color)\n\n  return animatedElapsedTime.interpolate({\n    inputRange: [0, ...inputRange],\n    outputRange: [...outputRange, colors[colorsLength - 1][0]],\n  })\n}\n","export { getStroke } from './getStroke'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { countdownCircleTimerProps } from '..'\n\nconst getStopProps = (colors) => {\n  const isColorsString = typeof colors === 'string'\n  if (isColorsString || colors.length === 1) {\n    const stopColor = isColorsString ? colors : colors[0][0]\n    return [{ offset: 1, stopColor, key: 0 }]\n  }\n\n  const colorsLength = colors.length\n  let currentDuration = 0\n  return [\n    { offset: 0, stopColor: colors[0][0], key: 0 },\n    ...colors.map(([stopColor, duration], index) => {\n      const isLastColor = colorsLength === index + 1\n      currentDuration += duration\n\n      return {\n        offset: isLastColor ? 1 : currentDuration,\n        stopColor,\n        key: index + 1,\n      }\n    }),\n  ]\n}\n\nconst DefsLinearGradient = ({\n  gradientId,\n  colors,\n  defs: Defs = 'defs',\n  linearGradient: LinearGradient = 'linearGradient',\n  stop: Stop = 'stop',\n}) => (\n  <Defs>\n    <LinearGradient id={gradientId} x1=\"1\" y1=\"0\" x2=\"0\" y2=\"0\">\n      {getStopProps(colors).map((gradient) => (\n        <Stop {...gradient} key={gradient.key} />\n      ))}\n    </LinearGradient>\n  </Defs>\n)\n\nconst TagType = PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\nDefsLinearGradient.propTypes = {\n  gradientId: PropTypes.string.isRequired,\n  colors: countdownCircleTimerProps.colors,\n  defs: TagType,\n  linearGradient: TagType,\n  stop: TagType,\n}\n\nexport { DefsLinearGradient }\n","export { DefsLinearGradient } from './DefsLinearGradient'\n","export {\n  getWrapperStyle,\n  getPathProps,\n  getStartAt,\n  getGradientId,\n  timeStyle,\n  countdownCircleTimerProps,\n  countdownCircleTimerDefaultProps,\n} from './utils'\nexport { DefsLinearGradient } from './components'\n","const isHexColor = (color) => color.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)\nconst getErrorInProp = (propName, componentName) =>\n  `Invalid prop '${propName}' supplied to '${componentName}'`\nconst getHexColorError = (propName, componentName, type = 'array') =>\n  new Error(\n    `${getErrorInProp(propName, componentName)}. Expect ${\n      type === 'array' ? 'an array of tuples where the first element is a' : ''\n    } HEX color code string.\n .`\n  )\n\nconst validateColorsAsString = (colors, propName, componentName) => {\n  if (!isHexColor(colors)) {\n    return getHexColorError(propName, componentName, 'string')\n  }\n}\n\nconst validateColorsAsArray = (colors, propName, componentName) => {\n  for (let index = 0; index < colors.length; index += 1) {\n    const color = colors[index][0]\n    const duration = colors[index][1]\n\n    if (!isHexColor(color)) {\n      return getHexColorError(propName, componentName)\n    }\n\n    if (!(duration === undefined || (duration >= 0 && duration <= 1))) {\n      return new Error(\n        `${getErrorInProp(propName, componentName)}.\n        Expect an array of tuples where the second element is a number between 0 and 1 representing color transition duration.`\n      )\n    }\n  }\n}\n\nexport const colorsValidator = (props, propName, componentName) => {\n  const colors = props[propName]\n  if (typeof colors === 'string') {\n    return validateColorsAsString(colors, propName, componentName)\n  }\n\n  return validateColorsAsArray(colors, propName, componentName)\n}\n","export const countdownCircleTimerDefaultProps = {\n  size: 180,\n  strokeWidth: 12,\n  trailColor: '#d9d9d9',\n  isPlaying: false,\n  strokeLinecap: 'round',\n  isLinearGradient: false,\n  ariaLabel: 'Countdown timer',\n  children: null,\n  rotation: 'clockwise',\n}\n","import PropTypes from 'prop-types'\nimport { colorsValidator } from '.'\n\nexport const countdownCircleTimerProps = {\n  duration: PropTypes.number.isRequired,\n  colors: colorsValidator,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  trailStrokeWidth: PropTypes.number,\n  trailColor: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  strokeLinecap: PropTypes.oneOf(['round', 'square']),\n  isLinearGradient: PropTypes.bool,\n  gradientUniqueKey: PropTypes.string,\n  onComplete: PropTypes.func,\n  ariaLabel: PropTypes.string,\n  renderAriaTime: PropTypes.func,\n  initialRemainingTime: PropTypes.number,\n  rotation: PropTypes.oneOf(['clockwise', 'counterclockwise']),\n}\n","import { uuid } from '.'\n\nexport const getGradientId = (gradientUniqueKey) =>\n  `countdown-circle-timer-gradient-${gradientUniqueKey || uuid()}`\n","export const getPathProps = (size, strokeWidth, rotation) => {\n  const halfSize = size / 2\n  const halfStrokeWith = strokeWidth / 2\n  const arcRadius = halfSize - halfStrokeWith\n  const arcDiameter = 2 * arcRadius\n  const rotationIndicator = rotation === 'clockwise' ? '1,0' : '0,1'\n\n  const pathLength = 2 * Math.PI * arcRadius\n  const path = `m ${halfSize},${halfStrokeWith}\n          a ${arcRadius},${arcRadius} 0 ${rotationIndicator} 0,${arcDiameter}\n          a ${arcRadius},${arcRadius} 0 ${rotationIndicator} 0,-${arcDiameter}`\n\n  return { path, pathLength }\n}\n","export const getStartAt = (initialRemainingTime, duration) => {\n  if (duration === 0) {\n    return 0\n  }\n\n  return typeof initialRemainingTime === 'number'\n    ? duration - initialRemainingTime\n    : 0\n}\n","export { uuid } from './uuid'\nexport { getPathProps } from './getPathProps'\nexport { getWrapperStyle, timeStyle } from './styles'\nexport { colorsValidator } from './colorsValidator'\nexport { getGradientId } from './getGradientId'\nexport { getStartAt } from './getStartAt'\nexport { countdownCircleTimerProps } from './countdownCircleTimerProps'\nexport { countdownCircleTimerDefaultProps } from './countdownCircleTimerDefaultProps'\n","export const getWrapperStyle = (size) => ({\n  position: 'relative',\n  width: size,\n  height: size,\n})\n\nexport const timeStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n}\n","export const uuid = () => Math.random().toString(36).substring(2)\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = require(\"react\");;","module.exports = require(\"react-native\");;","module.exports = require(\"react-native-svg\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export { CountdownCircleTimer } from './components'\n","export * from './ReactNativeSVG';\n\nexport { default } from './ReactNativeSVG';\n","// @ts-ignore\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  // @ts-ignore\n  unstable_createElement as ucE,\n  // @ts-ignore\n  createElement as cE,\n} from 'react-native';\nimport { NumberArray, NumberProp } from './lib/extract/types';\nimport SvgTouchableMixin from './lib/SvgTouchableMixin';\nimport { resolve } from './lib/resolve';\n\nconst createElement = cE || ucE;\n\ntype BlurEvent = Object;\ntype FocusEvent = Object;\ntype PressEvent = Object;\ntype LayoutEvent = Object;\ntype EdgeInsetsProp = Object;\n\ninterface BaseProps {\n  accessible?: boolean;\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  accessibilityIgnoresInvertColors?: boolean;\n  accessibilityRole?: string;\n  accessibilityState?: Object;\n  delayLongPress?: number;\n  delayPressIn?: number;\n  delayPressOut?: number;\n  disabled?: boolean;\n  hitSlop?: EdgeInsetsProp;\n  nativeID?: string;\n  touchSoundDisabled?: boolean;\n  onBlur?: (e: BlurEvent) => void;\n  onFocus?: (e: FocusEvent) => void;\n  onLayout?: (event: LayoutEvent) => object;\n  onLongPress?: (event: PressEvent) => object;\n  onClick?: (event: PressEvent) => object;\n  onPress?: (event: PressEvent) => object;\n  onPressIn?: (event: PressEvent) => object;\n  onPressOut?: (event: PressEvent) => object;\n  pressRetentionOffset?: EdgeInsetsProp;\n  rejectResponderTermination?: boolean;\n\n  translate: NumberArray;\n  scale: NumberArray;\n  rotation: NumberArray;\n  skewX: NumberProp;\n  skewY: NumberProp;\n  originX: NumberProp;\n  originY: NumberProp;\n\n  fontStyle?: string;\n  fontWeight?: NumberProp;\n  fontSize?: NumberProp;\n  fontFamily?: string;\n  forwardedRef: {};\n  style: Iterable<{}>;\n}\n\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nconst prepare = <T extends BaseProps>(\n  self: WebShape<T>,\n  props = self.props,\n) => {\n  const {\n    translate,\n    scale,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    forwardedRef,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    // @ts-ignore\n    ...rest\n  } = props;\n  const hasTouchableProperty =\n    onPress || onPressIn || onPressOut || onLongPress;\n  const clean: {\n    onStartShouldSetResponder?: (e: GestureResponderEvent) => boolean;\n    onResponderMove?: (e: GestureResponderEvent) => void;\n    onResponderGrant?: (e: GestureResponderEvent) => void;\n    onResponderRelease?: (e: GestureResponderEvent) => void;\n    onResponderTerminate?: (e: GestureResponderEvent) => void;\n    onResponderTerminationRequest?: (e: GestureResponderEvent) => boolean;\n    transform?: string;\n    style?: {};\n    ref?: {};\n  } = {\n    ...(hasTouchableProperty\n      ? {\n          onStartShouldSetResponder:\n            self.touchableHandleStartShouldSetResponder,\n          onResponderTerminationRequest:\n            self.touchableHandleResponderTerminationRequest,\n          onResponderGrant: self.touchableHandleResponderGrant,\n          onResponderMove: self.touchableHandleResponderMove,\n          onResponderRelease: self.touchableHandleResponderRelease,\n          onResponderTerminate: self.touchableHandleResponderTerminate,\n        }\n      : null),\n    ...rest,\n  };\n\n  const transform = [];\n\n  if (originX != null || originY != null) {\n    transform.push(`translate(${originX || 0}, ${originY || 0})`);\n  }\n  if (translate != null) {\n    transform.push(`translate(${translate})`);\n  }\n  if (scale != null) {\n    transform.push(`scale(${scale})`);\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (rotation != null) {\n    transform.push(`rotate(${rotation})`);\n  }\n  if (skewX != null) {\n    transform.push(`skewX(${skewX})`);\n  }\n  if (skewY != null) {\n    transform.push(`skewY(${skewY})`);\n  }\n  if (originX != null || originY != null) {\n    transform.push(`translate(${-originX || 0}, ${-originY || 0})`);\n  }\n\n  if (transform.length) {\n    clean.transform = transform.join(' ');\n  }\n\n  if (forwardedRef) {\n    clean.ref = forwardedRef;\n  }\n\n  const styles: {\n    fontStyle?: string;\n    fontFamily?: string;\n    fontSize?: NumberProp;\n    fontWeight?: NumberProp;\n  } = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n\n  clean.style = resolve(style, styles);\n\n  return clean;\n};\n\nconst getBoundingClientRect = (node: SVGElement) => {\n  if (node) {\n    // @ts-ignore\n    const isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n    // @ts-ignore\n    if (isElement && typeof node.getBoundingClientRect === 'function') {\n      // @ts-ignore\n      return node.getBoundingClientRect();\n    }\n  }\n};\n\nconst measureLayout = (\n  node: SVGElement,\n  callback: (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n  ) => void,\n) => {\n  // @ts-ignore\n  const relativeNode = node && node.parentNode;\n  if (relativeNode) {\n    setTimeout(() => {\n      // @ts-ignore\n      const relativeRect = getBoundingClientRect(relativeNode);\n      const { height, left, top, width } = getBoundingClientRect(node);\n      const x = left - relativeRect.left;\n      const y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nfunction remeasure() {\n  // @ts-ignore\n  const tag = this.state.touchable.responderID;\n  if (tag == null) {\n    return;\n  }\n  // @ts-ignore\n  measureLayout(tag, this._handleQueryLayout);\n}\n\nexport class WebShape<\n  P extends BaseProps = BaseProps,\n  C = {}\n> extends React.Component<P, C> {\n  [x: string]: unknown;\n  _remeasureMetricsOnActivation: () => void;\n  touchableHandleStartShouldSetResponder?: (\n    e: GestureResponderEvent,\n  ) => boolean;\n  touchableHandleResponderMove?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderGrant?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderRelease?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderTerminate?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderTerminationRequest?: (\n    e: GestureResponderEvent,\n  ) => boolean;\n  constructor(props: P, context: C) {\n    super(props, context);\n    SvgTouchableMixin(this);\n    this._remeasureMetricsOnActivation = remeasure.bind(this);\n  }\n}\n\nexport class Circle extends WebShape {\n  render(): JSX.Element {\n    return createElement('circle', prepare(this));\n  }\n}\n\nexport class ClipPath extends WebShape {\n  render(): JSX.Element {\n    return createElement('clipPath', prepare(this));\n  }\n}\n\nexport class Defs extends WebShape {\n  render(): JSX.Element {\n    return createElement('defs', prepare(this));\n  }\n}\n\nexport class Ellipse extends WebShape {\n  render(): JSX.Element {\n    return createElement('ellipse', prepare(this));\n  }\n}\n\nexport class G extends WebShape<\n  BaseProps & {\n    x?: NumberProp;\n    y?: NumberProp;\n    translate?: string;\n  }\n> {\n  render(): JSX.Element {\n    const { x, y, ...rest } = this.props;\n\n    if ((x || y) && !rest.translate) {\n      rest.translate = `${x || 0}, ${y || 0}`;\n    }\n\n    return createElement('g', prepare(this, rest));\n  }\n}\n\nexport class Image extends WebShape {\n  render(): JSX.Element {\n    return createElement('image', prepare(this));\n  }\n}\n\nexport class Line extends WebShape {\n  render(): JSX.Element {\n    return createElement('line', prepare(this));\n  }\n}\n\nexport class LinearGradient extends WebShape {\n  render(): JSX.Element {\n    return createElement('linearGradient', prepare(this));\n  }\n}\n\nexport class Path extends WebShape {\n  render(): JSX.Element {\n    return createElement('path', prepare(this));\n  }\n}\n\nexport class Polygon extends WebShape {\n  render(): JSX.Element {\n    return createElement('polygon', prepare(this));\n  }\n}\n\nexport class Polyline extends WebShape {\n  render(): JSX.Element {\n    return createElement('polyline', prepare(this));\n  }\n}\n\nexport class RadialGradient extends WebShape {\n  render(): JSX.Element {\n    return createElement('radialGradient', prepare(this));\n  }\n}\n\nexport class Rect extends WebShape {\n  render(): JSX.Element {\n    return createElement('rect', prepare(this));\n  }\n}\n\nexport class Stop extends WebShape {\n  render(): JSX.Element {\n    return createElement('stop', prepare(this));\n  }\n}\n\nexport class Svg extends WebShape {\n  render(): JSX.Element {\n    return createElement('svg', prepare(this));\n  }\n}\n\nexport class Symbol extends WebShape {\n  render(): JSX.Element {\n    return createElement('symbol', prepare(this));\n  }\n}\n\nexport class Text extends WebShape {\n  render(): JSX.Element {\n    return createElement('text', prepare(this));\n  }\n}\n\nexport class TSpan extends WebShape {\n  render(): JSX.Element {\n    return createElement('tspan', prepare(this));\n  }\n}\n\nexport class TextPath extends WebShape {\n  render(): JSX.Element {\n    return createElement('textPath', prepare(this));\n  }\n}\n\nexport class Use extends WebShape {\n  render(): JSX.Element {\n    return createElement('use', prepare(this));\n  }\n}\n\nexport class Mask extends WebShape {\n  render(): JSX.Element {\n    return createElement('mask', prepare(this));\n  }\n}\n\nexport class ForeignObject extends WebShape {\n  render(): JSX.Element {\n    return createElement('foreignObject', prepare(this));\n  }\n}\n\nexport class Marker extends WebShape {\n  render(): JSX.Element {\n    return createElement('marker', prepare(this));\n  }\n}\n\nexport class Pattern extends WebShape {\n  render(): JSX.Element {\n    return createElement('pattern', prepare(this));\n  }\n}\n\nexport default Svg;\n","// @ts-ignore\nimport { Touchable, GestureResponderEvent } from 'react-native';\nconst PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };\n// @ts-ignore\nconst { Mixin } = Touchable;\nconst {\n  touchableHandleStartShouldSetResponder,\n  touchableHandleResponderTerminationRequest,\n  touchableHandleResponderGrant,\n  touchableHandleResponderMove,\n  touchableHandleResponderRelease,\n  touchableHandleResponderTerminate,\n  touchableGetInitialState,\n} = Mixin;\n\nconst SvgTouchableMixin = {\n  ...Mixin,\n\n  touchableHandleStartShouldSetResponder(e: GestureResponderEvent) {\n    const { onStartShouldSetResponder } = this.props;\n    if (onStartShouldSetResponder) {\n      return onStartShouldSetResponder(e);\n    } else {\n      return touchableHandleStartShouldSetResponder.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminationRequest(e: GestureResponderEvent) {\n    const { onResponderTerminationRequest } = this.props;\n    if (onResponderTerminationRequest) {\n      return onResponderTerminationRequest(e);\n    } else {\n      return touchableHandleResponderTerminationRequest.call(this, e);\n    }\n  },\n\n  touchableHandleResponderGrant(e: GestureResponderEvent) {\n    const { onResponderGrant } = this.props;\n    if (onResponderGrant) {\n      return onResponderGrant(e);\n    } else {\n      return touchableHandleResponderGrant.call(this, e);\n    }\n  },\n\n  touchableHandleResponderMove(e: GestureResponderEvent) {\n    const { onResponderMove } = this.props;\n    if (onResponderMove) {\n      return onResponderMove(e);\n    } else {\n      return touchableHandleResponderMove.call(this, e);\n    }\n  },\n\n  touchableHandleResponderRelease(e: GestureResponderEvent) {\n    const { onResponderRelease } = this.props;\n    if (onResponderRelease) {\n      return onResponderRelease(e);\n    } else {\n      return touchableHandleResponderRelease.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminate(e: GestureResponderEvent) {\n    const { onResponderTerminate } = this.props;\n    if (onResponderTerminate) {\n      return onResponderTerminate(e);\n    } else {\n      return touchableHandleResponderTerminate.call(this, e);\n    }\n  },\n\n  touchableHandlePress(e: GestureResponderEvent) {\n    const { onPress } = this.props;\n    onPress && onPress(e);\n  },\n\n  touchableHandleActivePressIn(e: GestureResponderEvent) {\n    const { onPressIn } = this.props;\n    onPressIn && onPressIn(e);\n  },\n\n  touchableHandleActivePressOut(e: GestureResponderEvent) {\n    const { onPressOut } = this.props;\n    onPressOut && onPressOut(e);\n  },\n\n  touchableHandleLongPress(e: GestureResponderEvent) {\n    const { onLongPress } = this.props;\n    onLongPress && onLongPress(e);\n  },\n\n  touchableGetPressRectOffset() {\n    const { pressRetentionOffset } = this.props;\n    return pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop() {\n    const { hitSlop } = this.props;\n    return hitSlop;\n  },\n\n  touchableGetHighlightDelayMS() {\n    const { delayPressIn } = this.props;\n    return delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS() {\n    const { delayLongPress } = this.props;\n    return delayLongPress === 0 ? 0 : delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS() {\n    const { delayPressOut } = this.props;\n    return delayPressOut || 0;\n  },\n};\n\nconst touchKeys = Object.keys(SvgTouchableMixin);\nconst touchVals = touchKeys.map(key => SvgTouchableMixin[key]);\nconst numTouchKeys = touchKeys.length;\n\nexport default (target: { [x: string]: unknown; state: unknown }) => {\n  for (let i = 0; i < numTouchKeys; i++) {\n    const key = touchKeys[i];\n    const val = touchVals[i];\n    if (typeof val === 'function') {\n      target[key] = val.bind(target);\n    } else {\n      target[key] = val;\n    }\n  }\n  target.state = touchableGetInitialState();\n};\n","import { StyleSheet } from 'react-native';\n\n// Kept in separate file, to avoid name collision with Symbol element\nexport function resolve<T>(styleProp: Iterable<T>, cleanedProps: T) {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}\n"],"sourceRoot":""}