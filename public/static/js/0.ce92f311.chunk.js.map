{"version":3,"sources":["components/layout/DialogOrSheet.web.tsx","graphql/hooks/useDropzoneUser.ts","components/input/dropdown_select/RoleSelect.tsx","components/forms/user/UserForm.tsx","components/forms/rig/RigForm.tsx","components/dialogs/Rig.tsx","components/forms/dropzone_user/DropzoneUserForm.tsx","components/dialogs/DropzoneUserDialog.tsx","components/forms/credits/CreditsForm.tsx","components/dialogs/CreditsDialog/Credits.web.tsx","components/dialogs/User.tsx","screens/authenticated/profile/UserInfo/TableCard.tsx","screens/authenticated/profile/UserInfo/Header.tsx","screens/authenticated/profile/UserInfo/InfoGrid.tsx","components/Badge.tsx","graphql/hooks/useMutationRevokePermission.ts","graphql/hooks/useMutationGrantPermission.ts","screens/authenticated/profile/ProfileScreen.tsx"],"names":["DialogOrSheet","props","buttonLabel","buttonAction","title","loading","children","globalState","useAppSelector","state","global","visible","open","dismissable","style","maxWidth","alignSelf","indeterminate","color","theme","colors","accent","Title","Content","pointerEvents","ScrollArea","Actions","justifyContent","onPress","onClose","StyleSheet","create","button","width","borderRadius","padding","contentContainer","paddingHorizontal","paddingBottom","sheet","elevation","backgroundColor","flexGrow","height","display","flexDirection","sheetHeader","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","QUERY_DROPZONE_USER","gql","useDropzoneUser","id","dropzoneId","currentDropzoneId","currentDropzone","useCurrentDropzone","dropzoneUser","useQuery","variables","dropzoneUserId","Number","data","dropzone","currentUser","QUERY_ROLES","RoleSelect","React","isMenuOpen","setMenuOpen","refetch","Subheader","paddingLeft","onDismiss","disabled","anchor","Item","left","Icon","icon","undefined","value","name","replace","toUpperCase","description","required","roles","map","role","onSelect","SlotForm","forms","user","dispatch","useAppDispatch","original","fields","exitWeight","actions","setField","rigs","styles","field","mode","label","error","toString","onChangeText","newValue","type","email","phone","keyboardType","right","Affix","text","license","federation","setFederation","federationId","flex","paddingTop","marginBottom","ticketAddons","RigForm","rig","canCreateRigs","useRestriction","Permission","CreateRig","View","TextInput","make","HelperText","model","serial","canopySize","showTypeSelect","ChipSelect","items","renderItemLabel","item","isDisabled","selected","rigType","onChangeSelected","timestamp","repackExpiresAt","Date","getTime","onChange","time","MUTATION_CREATE_RIG","MUTATION_UPDATE_RIG","RigDialog","userId","useMutation","mutationCreateRig","createData","mutationUpdateRig","updateData","isLoading","validate","hasErrors","setFieldError","JSON","stringify","onSave","a","async","mutation","response","result","updateRig","createRig","fieldErrors","message","errors","length","notifications","showSnackbar","variant","onSuccess","snapPoints","reset","DropzoneUserForm","canUpdateRole","GrantPermission","newRole","expiresAt","MUTATION_EDIT_DROPZONE_USER","DropzoneUserDialog","mutationUpdateDropzoneUser","userRoleId","updateDropzoneUser","console","Portal","Dialog","ProgressBar","Button","CreditsForm","credits","currentCredits","amount","subtotal","status","defaultIndex","onChangeIndex","newIndex","Divider","DataTable","Row","Cell","numeric","Text","fontWeight","MUTATION_CREATE_TRANSACTION","mutationCreateTransaction","UpdateUserDialog","mutationUpdateUser","useMutationUpdateUser","payload","onFieldError","onError","hasError","emailRegex","RegExp","test","mutate","licenseId","parseFloat","UserForm","TableCard","buttonIcon","onPressButton","card","container","IconButton","primary","marginVertical","UserHeader","onEdit","canEdit","onPressAvatar","size","surface","avatarContainer","TouchableRipple","image","Image","source","uri","titleContainer","Paragraph","paragraph","alignItems","InfoGrid","divider","i","key","titleStyle","bold","descriptionStyle","verticalDivider","hairlineWidth","textAlign","Badge","iconName","Chip","textStyle","marginHorizontal","maxHeight","borderColor","filter","Boolean","MUTATION_REVOKE_PERMISSION","createMutation","getPayload","revokePermission","validates","permissionName","isRequired","MUTATION_GRANT_PERMISSION","grantPermission","MUTATION_UPDATE_IMAGE","ProfileScreen","navigation","useNavigation","route","useRoute","isSelf","params","canGrantPermission","isFocused","useIsFocused","useMutationRevokePermission","useMutationGrantPermission","Platform","OS","ImagePicker","alert","onPickImage","mediaTypes","Images","allowsEditing","aspect","quality","base64","log","badges","permissions","canAddTransaction","CreateUserTransaction","canUpdateUser","UpdateUser","ScrollableScreen","contentContainerStyle","content","refreshControl","RefreshControl","refreshing","onRefresh","horizontal","ActAsPilot","ActAsDzso","ActAsGca","ActAsRigInspector","ActAsLoadMaster","permission","includes","shouldShowBadge","update","client","c","readQuery","query","QUERY_PERMISSION_USER","updatedList","dropzoneUsers","edges","edge","node","writeQuery","current","shouldUpdate","find","updatedGcaList","newData","setOpen","MaterialCommunityIcons","chip","chipTitle","format","Math","round","Header","onLongPress","navigate","join","rigInspections","some","insp","isOk","successColor","warningColor","transactions","fontSize","fontStyle","createdAt","Rig","setUser","margin","minHeight","borderWidth","lineHeight","textAlignVertical"],"mappings":"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","file":"static/js/0.ce92f311.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { Button, Dialog, Portal, ProgressBar } from \"react-native-paper\";\nimport { useAppSelector } from \"../../redux\";\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n\n  snapPoints?: Array<string | number>;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nexport default function DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, buttonAction, title, loading, children } = props;\n  const globalState = useAppSelector(state => state.global);\n\n  return (\n    <Portal>\n      <Dialog visible={!!props.open} dismissable={false} style={{ maxWidth: 500, alignSelf: \"center\" }}>\n        <ProgressBar indeterminate visible={loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>\n          { title }\n        </Dialog.Title>\n        <Dialog.Content pointerEvents=\"box-none\">\n          <Dialog.ScrollArea>\n            <ScrollView>\n              { children }\n            </ScrollView>\n          </Dialog.ScrollArea>\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: \"flex-end\"}}>\n          <Button\n            onPress={() => {\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          \n          <Button onPress={buttonAction}>\n            { buttonLabel }\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: \"100%\",\n    borderRadius: 16,\n    padding: 5,\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: \"white\",\n    flexGrow: 1,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    height: 40,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: \"white\",\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  }\n\n})","import { useQuery } from \"@apollo/client\";\nimport { startOfDay } from \"date-fns\";\nimport gql from 'graphql-tag';\nimport * as React from \"react\";\nimport { useAppSelector } from \"../../redux\";\nimport { Query } from \"../schema\";\nimport useCurrentDropzone from \"./useCurrentDropzone\";\n\nexport const QUERY_DROPZONE_USER = gql`\n  query QueryDropzoneUser($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n        rigInspections {\n          id\n          isOk\n          rig {\n            id\n          }\n        }\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n            }\n          }\n        }\n\n\n        transactions {\n          edges {\n            node {\n              id\n              status\n              message\n              amount\n              createdAt\n            }\n          }\n        }\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: number) {\n  const dropzoneId = useAppSelector(state => state.global.currentDropzoneId);\n  const currentDropzone = useCurrentDropzone();\n\n  const dropzoneUser = useQuery<Pick<Query, \"dropzone\">>(QUERY_DROPZONE_USER, {\n    variables: {\n      dropzoneId: dropzoneId,\n      dropzoneUserId: id || Number(currentDropzone?.data?.dropzone?.currentUser?.id),\n    }\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: !id || id === Number(currentDropzone?.data?.dropzone?.currentUser?.id)\n      ? currentDropzone?.data?.dropzone?.currentUser\n      : dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport * as React from \"react\";\nimport { List, Menu } from \"react-native-paper\";\nimport useCurrentDropzone from \"../../../graphql/hooks/useCurrentDropzone\";\nimport useDropzoneUser from \"../../../graphql/hooks/useDropzoneUser\";\nimport { Query, UserRole } from \"../../../graphql/schema.d\";\nimport { useAppSelector } from \"../../../redux\";\n\n\ninterface IRoleSelect {\n  value?: UserRole | null;\n  required?: boolean;\n  disabled?: boolean;\n  onSelect(jt: UserRole): void;\n}\n\nconst QUERY_ROLES = gql`\n  query RolesQuery($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles(selectable: true) {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector(state => state.global);\n  const { dropzoneUser } = useDropzoneUser();\n  const { data, loading, refetch } = useQuery<Query>(QUERY_ROLES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    }\n  });\n  return (\n    <>\n    <List.Subheader style={{ paddingLeft: 0 }}>\n      Access level\n    </List.Subheader>\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={!props.disabled && isMenuOpen}\n      anchor={\n        <List.Item\n          left={() => <List.Icon icon=\"lock\" />}\n          onPress={props.disabled ? undefined : () => {\n            setMenuOpen(true);\n          }}\n          title={\n            props.value?.name?.replace('_', ' ')?.toUpperCase() || \"Access level\"\n          }\n          description={!props.required ? \"Optional\" : null}\n        />\n      }>\n      {\n        data?.dropzone?.roles?.map((role) =>\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(role);\n            }}\n            title={\n              role.name?.replace('_', ' ').toUpperCase() || \"-\"\n            }\n          />\n        )\n      }\n    </Menu>\n    </>\n  )\n}","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nexport default function SlotForm() {\n  const state = useAppSelector(state => state.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField([\"exitWeight\", state.original.exitWeight || \"60\"])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(\n          actions.forms.user.setField([\"rigs\", state.original.rigs])\n        );\n      }\n\n    }\n  }, [state.original?.id]);\n\n  return ( \n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"name\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.name.error ? \"error\" : \"info\"}>\n        { state.fields.name.error || \" \" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"email\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.email.error ? \"error\" : \"info\"}>\n        { state.fields.email.error || \" \" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"phone\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.phone.error ? \"error\" : \"info\"}>\n        { state.fields.phone.error || \"\" }\n      </HelperText>\n\n      \n      \n     <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || \"\"}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"exitWeight\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.exitWeight.error ? \"error\" : \"info\"}>\n        { state.fields.exitWeight.error || \"\" }\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: \"100%\"}}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n          required\n        />\n\n        <HelperText type={!!state.federation.error ? \"error\" : \"info\"}>\n          { state.federation.error || \"\" }\n        </HelperText>\n\n        { (state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(state?.fields?.license?.value?.federation?.id || state.federation?.value?.id)}\n              onSelect={(value) => dispatch(actions.forms.user.setField([\"license\", value]))}\n              required\n            />\n            <HelperText type={!!state.fields.license.error ? \"error\" : \"info\"}>\n              { state.fields.license.error || \"\" }\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: \"100%\",\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: \"100%\",\n  },\n  ticketAddons: {\n    marginBottom: 8\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../graphql/schema.d';\n\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const state = useAppSelector(state => state.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return ( \n    <View>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Make\"\n        error={!!state.fields.make.error}\n        value={state.fields.make.value || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField([\"make\", newValue]))}\n      />\n      <HelperText type={!!state.fields.make.error ? \"error\" : \"info\"}>\n        { state.fields.make.error || \"e.g Javelin, Mirage\" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Model\"\n        error={!!state.fields.model.error}\n        value={state.fields.model.value || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField([\"model\", newValue]))}\n      />\n      <HelperText type={!!state.fields.model.error ? \"error\" : \"info\"}>\n        { state.fields.model.error || \"e.g G4.1\" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Serial\"\n        error={!!state.fields.serial.error}\n        value={state.fields.serial.value || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField([\"serial\", newValue]))}\n      />\n      <HelperText type={!!state.fields.serial.error ? \"error\" : \"info\"}>\n        { state.fields.serial.error || \"\" }\n      </HelperText>\n\n      \n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Current canopy size\"\n        error={!!state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || \"\"}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField([\"canopySize\", Number(newValue)]))}\n      />\n      <HelperText type={!!state.fields.canopySize.error ? \"error\" : \"info\"}>\n        { state.fields.canopySize.error || \"Size of canopy in container\" }\n      </HelperText>\n\n      { !props.showTypeSelect ? null : (\n        <ChipSelect\n          items={[\"student\", \"sport\", \"tandem\"]}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => !canCreateRigs ? item !== \"sport\" : false}\n          selected={[state.fields.rigType?.value || \"sport\"]}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField([\"rigType\", rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField([\"repackExpiresAt\", time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={!!state.fields.repackExpiresAt.error ? \"error\" : \"info\"}>\n        { state.fields.repackExpiresAt.error || \"\" }\n      </HelperText>\n\n      \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  }\n});\n","import { gql, useMutation } from \"@apollo/client\";\nimport * as React from \"react\";\nimport { Mutation } from \"../../graphql/schema.d\";\nimport { actions, useAppDispatch, useAppSelector } from \"../../redux\";\nimport RigForm from \"../forms/rig/RigForm\";\nimport DialogOrSheet from \"../layout/DialogOrSheet\";\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String,\n    $model: String,\n    $serial: String,\n    $rigType: String,\n    $canopySize: Int,\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateRig(\n    $id: Int!\n    $make: String,\n    $model: String,\n    $serial: String,\n    $rigType: String,\n    $canopySize: Int,\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    updateRig(\n      input: {\n        id: $id,\n        attributes: {\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, onClose, userId, dropzoneId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.forms.rig);\n  const [mutationCreateRig, createData] = useMutation<Mutation>(MUTATION_CREATE_RIG);\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const isLoading = createData.loading || updateData.loading;\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.make.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"make\", \"Required\"])\n      );\n    }\n\n    if (!state.fields.model.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"model\", \"Required\"])\n      );\n    }\n\n    if (!state.fields.serial.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"serial\", \"Required\"])\n      );\n    }\n\n    if (!state.fields.canopySize.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"canopySize\", \"Required\"])\n      );\n    }\n\n    if (!state.fields.repackExpiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"repackExpiresAt\", \"You must select a repack date in the future\"])\n      );\n    }\n\n    return !hasErrors;\n  }, [JSON.stringify(state.fields)]);\n  \n  const onSave = React.useCallback(async () => {\n\n    if (!validate()) {\n      return;\n    }\n    try {\n      const mutation = state.original?.id ? mutationUpdateRig : mutationCreateRig;\n      const response = await mutation({\n        variables: {\n          ...state.original?.id ? { id: Number(state.original?.id) } : {},\n          make: state.fields.make.value,\n          model: state.fields.model.value,\n          serial: state.fields.serial.value,\n          canopySize: state.fields.canopySize.value,\n          rigType: state.fields.rigType.value,\n          repackExpiresAt: state.fields.repackExpiresAt.value,\n          userId: props.userId ? Number(props.userId) : null,\n          dropzoneId: props.dropzoneId ? Number(props.dropzoneId) : null,\n        }\n      });\n      const result = state.original?.id ? response.data?.updateRig : response.data?.createRig;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case \"make\":\n            return dispatch(actions.forms.rig.setFieldError([\"make\", message]));\n          case \"model\":\n            return dispatch(actions.forms.rig.setFieldError([\"model\", message]));\n          case \"serial\":\n            return dispatch(actions.forms.rig.setFieldError([\"serial\", message]));\n          case \"canopy_size\":\n            return dispatch(actions.forms.rig.setFieldError([\"canopySize\", message]));\n          case \"repack_expires_at\":\n            return dispatch(actions.forms.rig.setFieldError([\"repackExpiresAt\", message]));\n          case \"rig_type\":\n            return dispatch(actions.forms.rig.setFieldError([\"rigType\", message]));\n        }\n      });\n      if (result?.errors?.length) {\n        return dispatch(actions.notifications.showSnackbar({ message: result?.errors[0], variant: \"error\" }));\n      }\n      if (!result?.fieldErrors?.length) {\n        props.onSuccess();\n      }\n\n    } catch(error) {\n      dispatch(actions.notifications.showSnackbar({ message: error.message, variant: \"error\" }));\n    } \n  }, [JSON.stringify(state.fields), mutationCreateRig, mutationUpdateRig, props.onSuccess])\n\n  return (\n    <DialogOrSheet\n      title={ state.original?.id ? \"Edit rig\" : \"New rig\"}\n      open={open}\n      snapPoints={[0, 580]}\n      onClose={() => {\n        props.onClose();\n        dispatch(actions.forms.rig.reset());\n      }}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!props.dropzoneId} />\n    </DialogOrSheet>\n  )\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../graphql/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector(state => state.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return ( \n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField([\"role\", newRole]))}\n        disabled={!canUpdateRole}\n        required\n      />\n      <HelperText type={!!state.fields.role.error ? \"error\" : \"info\"}>\n        { state.fields.role.error }\n      </HelperText>\n\n\n      <List.Subheader style={{ paddingLeft: 0 }}>\n        Financial\n      </List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField([\"expiresAt\", time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={!!state.fields.expiresAt.error ? \"error\" : \"info\"}>\n        { state.fields.expiresAt.error }\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  }\n});\n","import { gql, useMutation } from \"@apollo/client\";\nimport * as React from \"react\";\nimport { Button, Dialog, Portal, ProgressBar } from \"react-native-paper\";\nimport { DropzoneUser, Mutation } from \"../../graphql/schema.d\";\nimport { actions, useAppDispatch, useAppSelector } from \"../../redux\";\nimport DropzoneUserForm from \"../forms/dropzone_user/DropzoneUserForm\";\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUser): void;\n}\n\nconst MUTATION_EDIT_DROPZONE_USER = gql`\n  mutation UpdateDropzoneUser(\n    $userRoleId: Int,\n    $expiresAt: Int,\n    $dropzoneUserId: Int\n  ) {\n    updateDropzoneUser(\n      input: {\n        id: $dropzoneUserId,\n        attributes: {\n          userRoleId: $userRoleId,\n          expiresAt: $expiresAt,\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      dropzoneUser {\n        id\n        credits\n        expiresAt\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.forms.dropzoneUser);\n  const globalState = useAppSelector(state => state.global);\n  const [mutationUpdateDropzoneUser, createData] = useMutation<Mutation>(MUTATION_EDIT_DROPZONE_USER);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    \n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError([\"role\", \"User must have an access level\"])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError([\"expiresAt\", \"Membership expiry must be set\"])\n      );\n    }\n\n    return !hasErrors;\n  }, [JSON.stringify(state.fields)]);\n  \n  const onSave = React.useCallback(async () => {\n\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...state.original?.id ? { id: state.original?.id } : {},\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        }\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case \"user_role\":\n            return dispatch(actions.forms.dropzoneUser.setFieldError([\"role\", message]));\n          case \"expires_at\":\n            return dispatch(actions.forms.dropzoneUser.setFieldError([\"expiresAt\", message]));\n        }\n      });\n      if (result?.errors?.length) {\n        return dispatch(actions.notifications.showSnackbar({ message: result?.errors[0], variant: \"error\" }));\n      }\n      if (!result?.fieldErrors?.length) {\n        props.onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result.fieldErrors);\n      }\n\n    } catch(error) {\n      dispatch(actions.notifications.showSnackbar({ message: error.message, variant: \"error\" }));\n    } \n  }, [JSON.stringify(state.fields), mutationUpdateDropzoneUser, props.onSuccess])\n  \n  return (\n    <Portal>\n      <Dialog visible={!!props.open}>\n        <ProgressBar indeterminate visible={createData.loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>\n          {`${state?.original?.id ? \"Edit\" : \"New\"} dropzone user`}\n        </Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: \"flex-end\"}}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          \n          <Button onPress={onSave}>\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  )\n}","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, HelperText, Divider, Dialog, DataTable } from 'react-native-paper';\nimport { Tabs, TabScreen } from \"react-native-paper-tabs\";\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\nexport default function CreditsForm() {\n  const state = useAppSelector(state => state.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = (state.original?.credits || 0)\n  const amount = (state.fields.amount.value || 0);\n\n  const subtotal = state.fields.status.value === \"deposit\"\n    ? amount + currentCredits\n    : amount - currentCredits;\n  return ( \n    <>\n      <Tabs\n        defaultIndex={0} // default = 0\n        onChangeIndex={(newIndex) => {\n          dispatch(actions.forms.credits.setField([\"status\", newIndex === 1 ? \"withdrawal\" : \"deposit\"]));\n        }}\n        mode=\"fixed\"\n      >\n        <TabScreen label=\"Deposit\" icon=\"arrow-up\"><View /></TabScreen>\n        <TabScreen label=\"Withdraw\" icon=\"arrow-down\"><View /></TabScreen>\n      </Tabs>\n      <Dialog.Content style={{ paddingTop: 16 }}>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Message\"\n            error={!!state.fields.message.error}\n            value={state.fields.message.value?.toString() || \"\"}\n            onChangeText={(newValue: string) => dispatch(actions.forms.credits.setField([\"message\", newValue]))}\n          />\n          <HelperText type={!!state.fields.message.error ? \"error\" : \"info\"}>\n            { state.fields.message.error || \"\" }\n          </HelperText>\n          { state.fields.status.value === \"deposit\" \n            ? (\n                <View>\n                  \n                  <TextInput\n                    style={styles.field}\n                    mode=\"outlined\"\n                    label=\"Add amount\"\n                    error={!!state.fields.amount.error}\n                    value={state.fields.amount.value?.toString() || \"\"}\n                    keyboardType=\"number-pad\"\n                    onChangeText={(newValue: string) => dispatch(actions.forms.credits.setField([\"amount\", Number(newValue)]))}\n                  />\n                  <HelperText type={!!state.fields.amount.error ? \"error\" : \"info\"}>\n                    { state.fields.amount.error || \"\" }\n                  </HelperText>\n                  <Divider />\n\n                  <DataTable>\n                    <DataTable.Row>\n                      <DataTable.Title>Current balance</DataTable.Title>\n                      <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n                    </DataTable.Row>\n                    <DataTable.Row>\n                      <DataTable.Title>Deposit</DataTable.Title>\n                      <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n                    </DataTable.Row>\n                    <DataTable.Row>\n                      <DataTable.Title>\n                        <Text style={{ fontWeight: \"bold\" }}>New total</Text>\n                      </DataTable.Title>\n                      <DataTable.Cell numeric>{`${subtotal < 0 ? \"-\" : \"\"}$${subtotal < 0 ? subtotal * -1 : subtotal}`}</DataTable.Cell>\n                    </DataTable.Row>\n                  </DataTable>\n                </View>\n            ) : (\n                <View>\n                  <TextInput\n                    style={styles.field}\n                    mode=\"outlined\"\n                    label=\"Withdraw amount\"\n                    error={!!state.fields.amount.error}\n                    value={state.fields.amount.value?.toString() || \"\"}\n                    keyboardType=\"number-pad\"\n                    onChangeText={(newValue: string) => dispatch(actions.forms.credits.setField([\"amount\", Number(newValue)]))}\n                  />\n                  <HelperText type={!!state.fields.amount.error ? \"error\" : \"info\"}>\n                    { state.fields.amount.error || \"\" }\n                  </HelperText>\n\n                  <Divider />\n\n                  <DataTable>\n                    <DataTable.Row>\n                      <DataTable.Title>Current balance</DataTable.Title>\n                      <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n                    </DataTable.Row>\n                    <DataTable.Row>\n                      <DataTable.Title>Withdraw</DataTable.Title>\n                      <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n                    </DataTable.Row>\n                    <DataTable.Row>\n                      <DataTable.Title>\n                        <Text style={{ fontWeight: \"bold\" }}>New total</Text>\n                      </DataTable.Title>\n                      <DataTable.Cell numeric>{`${subtotal < 0 ? \"-\" : \"\"}$${subtotal < 0 ? subtotal * -1 : subtotal}`}</DataTable.Cell>\n                    </DataTable.Row>\n                  </DataTable>\n                </View>\n            )}\n      </Dialog.Content>\n      </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  }\n});\n","import { gql, useMutation } from \"@apollo/client\";\nimport * as React from \"react\";\nimport { Button, Dialog, Portal, ProgressBar } from \"react-native-paper\";\nimport { Mutation } from \"../../../graphql/schema.d\";\nimport { actions, useAppDispatch, useAppSelector } from \"../../../redux\";\nimport CreditsForm from \"../../forms/credits/CreditsForm\";\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_TRANSACTION = gql`\n  mutation CreatrTransaction(\n    $message: String,\n    $status: String,\n    $amount: Float,\n    $dropzoneUserId: Int,\n  ) {\n    createTransaction(\n      input: {\n        attributes: {\n          amount: $amount,\n          dropzoneUserId: $dropzoneUserId,\n          message: $message,\n          status: $status,\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      transaction {\n        id\n        amount\n        message\n\n        dropzoneUser {\n          id\n          credits\n\n          transactions {\n            edges {\n              node {\n                id\n                status\n                amount\n                createdAt\n                message\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.forms.credits);\n  const globalState = useAppSelector(state => state.global);\n  const [mutationCreateTransaction, createData] = useMutation<Mutation>(MUTATION_CREATE_TRANSACTION);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.credits.setFieldError([\"amount\", \"You must specify an amount\"])\n      );\n    }\n\n    return !hasErrors;\n  }, [JSON.stringify(state.fields)]);\n  \n  const onSave = React.useCallback(async () => {\n\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationCreateTransaction({\n        variables: {\n          amount: state.fields.amount.value,\n          message: state.fields.message.value,\n          status: state.fields.status.value,\n          dropzoneUserId: Number(state.original?.id),\n        }\n      });\n      const result = state.original?.id ? response.data?.updateRig : response.data?.createRig;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case \"amount\":\n            return dispatch(actions.forms.credits.setFieldError([\"amount\", message]));\n          case \"message\":\n            return dispatch(actions.forms.credits.setFieldError([\"message\", message]));\n          case \"status\":\n            return dispatch(actions.forms.credits.setFieldError([\"status\", message]));\n        }\n      });\n      if (result?.errors?.length) {\n        return dispatch(actions.notifications.showSnackbar({ message: result?.errors[0], variant: \"error\" }));\n      }\n      if (!result?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        props.onSuccess();\n      }\n\n    } catch(error) {\n      dispatch(actions.notifications.showSnackbar({ message: error.message, variant: \"error\" }));\n    } \n  }, [JSON.stringify(state.fields), mutationCreateTransaction, props.onSuccess])\n  \n  return (\n    <Portal>\n      <Dialog visible={!!props.open}>\n        <ProgressBar indeterminate visible={createData.loading} color={globalState.theme.colors.accent} />\n        <CreditsForm />\n        <Dialog.Actions style={{ justifyContent: \"flex-end\"}}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.credits.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          \n          <Button onPress={onSave}>\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  )\n}","import * as React from \"react\";\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from \"../../redux\";\nimport DialogOrSheet from \"../layout/DialogOrSheet\";\nimport useMutationUpdateUser from \"../../graphql/hooks/useMutationUpdateUser\";\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess } = props;\n  const state = useAppSelector(state => state.forms.user);\n  const dispatch = useAppDispatch();\n\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({ message: `Profile has been updated`, variant: \"success\" })\n      );\n      dispatch(actions.forms.user.reset());\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as any, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: \"error\" })),\n  });\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    const emailRegex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if ((state.fields.name?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"name\", \"Name is too short\"])\n      );\n    }\n\n    if ((state.fields.email?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"email\", \"Email is too short\"])\n      );\n    }\n\n    if ((state.fields.phone?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"phone\", \"Phone number is too short\"])\n      );\n    }\n\n    if (!emailRegex.test(state.fields?.email?.value || \"\")) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"email\", \"Please enter a valid email\"])\n      );\n    }\n\n    if ((state.fields.exitWeight?.value || 0) < 30) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"exitWeight\", \"Exit weight seems too low?\"])\n      );\n    }\n\n    return !hasError;\n  }, [JSON.stringify(state.fields), dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, license, phone, email, exitWeight } = state.fields;\n\n    \n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateUser.mutate({\n          id: Number(state.original!.id!),\n          name: name.value,\n          licenseId: !license.value?.id ? null : Number(license.value!.id),\n          phone: phone.value,\n          exitWeight: parseFloat(exitWeight.value!),\n          email: email.value,\n        });        \n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({ message: error.message, variant: \"error\" })\n        );\n      }\n    }\n    \n  }, [JSON.stringify(state.fields), dispatch, mutationUpdateUser]);\n\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={[0, 740]}\n      loading={mutationUpdateUser.loading}\n      onClose={() => {\n        props.onClose();\n        dispatch(actions.forms.user.reset());\n      }}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  )\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { IconButton, List} from 'react-native-paper';\n\n\nimport { useAppSelector } from '../../../../redux';\n\ninterface ITableCard {\n  children: React.ReactNode;\n  title: string;\n  buttonIcon?: string;\n  onPressButton?(): void;\n}\nexport default function TableCard(props: ITableCard) {\n  const state = useAppSelector(state => state.global);\n  const { title, children, buttonIcon, onPressButton } = props;\n\n  return (\n    <View style={styles.card}>\n      <View style={styles.container}>\n        <List.Subheader style={styles.title}>{title}</List.Subheader>\n        {\n          buttonIcon && (\n            <IconButton\n              icon={buttonIcon}\n              onPress={() => !onPressButton ? null : onPressButton()}\n              color={state.theme.colors.primary}\n            />\n        )}\n      </View>\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  title: { flexGrow: 1 },\n  card: {\n    marginVertical: 8,\n    width: \"100%\",\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title, TouchableRipple } from 'react-native-paper';\n\nimport { useAppSelector } from '../../../../redux';\nimport { DropzoneUser } from '../../../../graphql/schema';\n\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUser;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onPressAvatar?(): void;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, onEdit, canEdit, children, onPressAvatar } = props;\n  const { theme } = useAppSelector(state => state.global);\n  return (\n      <View style={[styles.container, { backgroundColor: theme.colors.primary }]}>\n        <View style={styles.actions}>\n        {\n          !canEdit ? null : (\n            <IconButton\n              icon=\"pencil\"\n              size={20}\n              color={theme.colors.surface}\n              onPress={() => onEdit ? onEdit() : null}\n            />\n          )}\n        </View>\n        <View style={styles.avatarContainer}>\n          <View style={{ flex: 1/3 }}>\n            <TouchableRipple onPress={onPressAvatar}>\n              {\n                !dropzoneUser?.user?.image\n                ? <Avatar.Icon\n                    size={80}\n                    icon=\"account\"\n                    color={theme.colors.primary}\n                    style={{ backgroundColor: theme.colors.surface }}\n                  />\n                : <Avatar.Image\n                    size={80}\n                    source={{ uri: dropzoneUser?.user.image }}\n                    style={{ backgroundColor: theme.colors.surface }}\n                  />\n              }\n            </TouchableRipple>\n          </View>\n          <View style={styles.titleContainer}>\n            <Title style={styles.title}>{dropzoneUser?.user?.name}</Title>\n            <Paragraph style={styles.paragraph}>{dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}</Paragraph>\n          </View>\n        </View>\n\n        {children}\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    paddingTop: 16\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  avatarContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 48,\n    flex: 2/3,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\"\n  },\n  title: {\n    color: \"white\"\n  },\n  paragraph: {\n    color: \"white\"\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: Array<{ title: string, value: string, onPress?(): void; bold?: boolean }>;\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {\n          items.map((item, i) =>\n          <>\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[styles.title, {\n                  fontWeight: item.bold !== false ? \"bold\" : undefined\n                }]}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />}\n          </>\n          )\n        }\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n container: { width: \"100%\", flexDirection: \"row\" },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n    backgroundColor: \"white\",\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n    backgroundColor: \"white\",\n  },\n  title: {\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  description: {\n    textAlign: \"center\",\n    color: \"white\",\n  }\n});\n","import * as React from \"react\";\nimport { Chip } from \"react-native-paper\";\nimport { Permission } from \"../graphql/schema.d\";\n\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n\n  const { type, selected, disabled, onPress } = props;\n  const iconName = {\n    \"actAsDZSO\": \"shield-cross\",\n    \"actAsGCA\": \"radio-handheld\",\n    \"actAsLoadMaster\": \"shield-account\",\n    \"actAsPilot\": \"shield-airplane\",\n    \"actAsRigInspector\": \"shield-search\"\n  }[props.type];\n\n  const label = {\n    \"actAsDZSO\": \"DZSO\",\n    \"actAsGCA\": \"GCA\",\n    \"actAsLoadMaster\": \"Load Master\",\n    \"actAsPilot\": \"Pilot\",\n    \"actAsRigInspector\": \"Rig Inspector\"\n  }[props.type];\n\n  return (\n    <Chip\n      mode={selected ? \"outlined\" : \"flat\"}\n      icon={iconName}\n      textStyle={selected ? {} : { color: \"white\" }}\n      style={[\n        { marginHorizontal: 2, maxHeight: 35 },\n        selected ?  undefined : { backgroundColor: \"transparent\", borderColor: \"white\" }\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress()}\n    >\n      {label}\n    </Chip>\n  )\n}\n\nexport default Badge;","import gql from \"graphql-tag\";\nimport { createMutation, isRequired } from \"../createMutation\";\nimport { RevokePermissionPayload } from \"../schema\";\n\n\nexport const MUTATION_REVOKE_PERMISSION = gql`\nmutation RevokePermission(\n  $dropzoneUserId: Int!,\n  $permissionName: Permission!,\n){\n  revokePermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n    dropzoneUser {\n      id\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n`;\n\n\nexport default createMutation<{\n  dropzoneUserId: number,\n  permissionName: string,\n}, RevokePermissionPayload>(\n  MUTATION_REVOKE_PERMISSION, {\n    getPayload: (result) => result.revokePermission,\n    validates: {\n      permissionName: [\n        isRequired(\"Permission name is required\")\n      ]\n    }\n  }\n)","import gql from \"graphql-tag\";\nimport { createMutation, isRequired } from \"../createMutation\";\nimport { GrantPermissionPayload } from \"../schema\";\n\n\nexport const MUTATION_GRANT_PERMISSION = gql`\nmutation GrantPermission(\n  $dropzoneUserId: Int!,\n  $permissionName: Permission!,\n){\n  grantPermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n    dropzoneUser {\n      id\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n`;\n\n\nexport default createMutation<{\n  dropzoneUserId: number,\n  permissionName: string,\n}, GrantPermissionPayload>(\n  MUTATION_GRANT_PERMISSION, {\n    getPayload: (result) => result.grantPermission,\n    validates: {\n      permissionName: [\n        isRequired(\"Permission name is required\")\n      ]\n    }\n  }\n)","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Platform, RefreshControl, StyleSheet, Text } from 'react-native';\nimport { Chip, DataTable, Divider, IconButton, ProgressBar } from 'react-native-paper';\nimport format from \"date-fns/format\";\nimport gql from 'graphql-tag';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { IconProps } from 'react-native-paper/lib/typescript/components/MaterialCommunityIcon';\nimport * as ImagePicker from 'expo-image-picker';\nimport { QUERY_PERMISSION_USER } from \"../../../components/chips/GcaChip\";\n\nimport { successColor, warningColor } from \"../../../constants/Colors\";\nimport { actions, useAppDispatch, useAppSelector } from '../../../redux';\nimport { Mutation, Permission, Query } from '../../../graphql/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport DropzoneUserDialog from '../../../components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport EditUserSheet from '../../../components/dialogs/User';\n\nimport TableCard from \"./UserInfo/TableCard\";\nimport Header from \"./UserInfo/Header\";\nimport InfoGrid from './UserInfo/InfoGrid';\nimport useCurrentDropzone from '../../../graphql/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../graphql/hooks/useDropzoneUser';\nimport Badge from '../../../components/Badge';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useMutationRevokePermission from '../../../graphql/hooks/useMutationRevokePermission';\nimport useMutationGrantPermission from '../../../graphql/hooks/useMutationGrantPermission';\n\n\nconst MUTATION_UPDATE_IMAGE = gql`\n  mutation UpdateUserImage(\n    $id: Int,\n    $image: String\n  ){\n    updateUser(input: {\n      id: $id\n      attributes: {\n        image: $image,\n      }\n    }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        image\n        phone\n        rigs {\n          id\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\nexport default function ProfileScreen() {\n  const state = useAppSelector(state => state.global);\n  const forms = useAppSelector(state => state.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string, name: string, params: { userId: string }}>();\n  const isSelf = currentUser?.id === route.params.userId;\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(Number(route.params.userId));\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused])\n\n  const [mutationUpdateUser, mutation] = useMutation<Mutation>(MUTATION_UPDATE_IMAGE);\n  const revokePermission = useMutationRevokePermission({\n    onSuccess: (payload) => {\n      refetch();\n      dispatch(actions.notifications.showSnackbar({ message: \"Permission revoked\" }))\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: \"error\" }))\n    },\n  });\n  const grantPermission = useMutationGrantPermission({\n    onSuccess: (payload) => {\n      refetch();\n      dispatch(actions.notifications.showSnackbar({ message: \"Permission granted\" }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: \"error\" }))\n    },\n  });\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  \n  const onPickImage = React.useCallback(\n    async () => {\n      try {\n        const result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 0.1,\n          base64: true,\n        }) as { base64: string };\n    \n\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            id: Number(dropzoneUser?.user?.id),\n            image: `data:image/jpeg;base64,${result.base64}`,\n          }\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    [dispatch],\n  )\n\n  const badges = dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const shouldShowBadge = (permission: Permission) => canGrantPermission || badges.includes(permission);\n\n  return (\n    <>\n    {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n    <ScrollableScreen contentContainerStyle={styles.content} refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}>\n      <ScrollView horizontal style={{ width: \"100%\" }} contentContainerStyle={{ flexGrow: 1, padding: 8, justifyContent: \"space-evenly\", backgroundColor: state.theme.colors.primary }}>\n        {\n          [\n            Permission.ActAsPilot,\n            Permission.ActAsDzso,\n            Permission.ActAsGca,\n            Permission.ActAsRigInspector,\n            Permission.ActAsLoadMaster,\n          ].map((permission) =>\n            !shouldShowBadge(permission)\n              ? null\n              : <Badge\n                  type={permission as any}\n                  selected={badges.includes(permission)}\n                  onPress={() => !canGrantPermission ? null :\n                    badges.includes(permission) \n                      ? revokePermission.mutate({\n                          permissionName: permission,\n                          dropzoneUserId: Number(dropzoneUser.id)\n                        }, {\n                        update: async (client, { data }) => {\n                          const c = client.readQuery<Query>({\n                            query: QUERY_PERMISSION_USER,\n                            variables: {\n                              permissions: [permission],\n                              dropzoneId: Number(state.currentDropzoneId),\n                            }\n                          });\n\n                          const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter((edge) => edge.node.id !== dropzoneUser.id);\n                          \n                          client.writeQuery({\n                            query: QUERY_PERMISSION_USER,\n                            variables: {\n                              permissions: [permission],\n                              dropzoneId: Number(state.currentDropzoneId),\n                            },\n                            data: {\n                              ...c,\n                              dropzone: {\n                                ...c?.dropzone,\n                                dropzoneUsers: updatedList\n                              }\n                            }\n                          });\n\n                          return {\n                            data: {\n                              ...c,\n                              dropzone: {\n                                ...c?.dropzone,\n                                dropzoneUsers: updatedList\n                              }\n                            }\n                          };\n                        }\n                      })\n                      : grantPermission.mutate({\n                          permissionName: permission,\n                          dropzoneUserId: Number(dropzoneUser.id),\n                        }, {\n                          update: async (client, { data }) => {\n                            const c = client.readQuery<Query>({\n                              query: QUERY_PERMISSION_USER,\n                              variables: {\n                                permissions: [permission],\n                                dropzoneId: Number(state.currentDropzoneId),\n                              },\n                            });\n  \n                            const current = (c?.dropzone?.dropzoneUsers?.edges || []);\n                            const shouldUpdate = !!current.find((edge) => edge.node.id === dropzoneUser.id);\n\n                            \n                            const updatedGcaList = shouldUpdate? [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []).map(\n                                (edge) => edge.node.id !== dropzoneUser.id\n                                ? edge\n                                : {\n                                    ...edge,\n                                    node: {\n                                      ...edge.node,\n                                      ...data.grantPermission?.dropzoneUser,\n                                    }\n                                  }\n                              ),\n                            ] : [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []),\n                              { edge: { node: data.grantPermission?.dropzoneUser}}\n                            ]\n                            const newData = {\n                              ...c,\n                              dropzone: {\n                                ...c?.dropzone,\n                                dropzoneUsers: updatedGcaList\n                              }\n                            };\n                            client.writeQuery({\n                              query: QUERY_PERMISSION_USER,\n                              variables: {\n                                dropzoneId: Number(state.currentDropzoneId),\n                                permissions: [permission]\n                              },\n                              data: newData\n                            });\n\n                            return {\n                              data: newData\n                            };\n                          }\n                        })\n                  }\n                />\n          )\n        }\n      </ScrollView>\n      <Header\n        dropzoneUser={dropzoneUser!}\n        canEdit={isSelf}\n        onEdit={() => {\n          if (dropzoneUser?.user) {\n            dispatch(actions.forms.user.setOpen(dropzoneUser?.user));\n          }\n        }}\n        onPressAvatar={onPickImage}\n      >\n       \n\n        <ScrollView horizontal style={{ marginVertical: 8 }}>\n          <Chip\n            // @ts-ignore\n            icon={({ size }: IconProps) =>\n              <MaterialCommunityIcons name=\"email\" size={size} color=\"#FFFFFF\" />\n            }\n            mode=\"outlined\"\n            style={styles.chip}\n            textStyle={styles.chipTitle}\n          >\n            {dropzoneUser?.user?.email  || \"-\"}\n          </Chip>\n\n          <Chip\n            // @ts-ignore\n            icon={({ size }: IconProps) =>\n              <MaterialCommunityIcons name=\"phone\" size={size} color=\"#FFFFFF\" />\n            }\n            mode=\"outlined\"\n            style={styles.chip}\n            textStyle={styles.chipTitle}\n          >\n            {dropzoneUser?.user?.phone  || \"-\"}\n          </Chip>\n\n          <Chip\n            // @ts-ignore\n            icon={({ size }: IconProps) =>\n              <MaterialCommunityIcons name=\"card-account-details-star-outline\" size={size} color=\"#FFFFFF\" />\n            }\n            mode=\"outlined\"\n            style={styles.chip}\n            textStyle={styles.chipTitle}\n            onPress={() => {\n              if (canUpdateUser) {\n                dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser!));\n              }\n            }}\n          >\n            {!dropzoneUser?.expiresAt\n                  ? \"Not a member\"\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, \"yyyy/MM/dd\")}\n          </Chip>\n        </ScrollView>\n        <Divider style={styles.divider} />\n        <InfoGrid\n          items={[\n            {\n              title: \"Funds\",\n              value: `$${dropzoneUser?.credits || 0}`,\n              onPress: () => {\n                if (dropzoneUser && canAddTransaction) {\n                  dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                }\n              }\n            },\n            { title: \"License\", value: `${dropzoneUser?.user?.license?.name || \"-\"}`},\n            { title: \"Exit weight\", value: Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || \"-\" }\n          ]}\n        />\n        <Divider style={[styles.divider, { backgroundColor: \"white\" }]} />\n      </Header>\n      \n      <TableCard title=\"Rigs\" buttonIcon=\"plus\" onPressButton={() => dispatch(actions.forms.rig.setOpen(true))}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>\n              Container\n            </DataTable.Title>\n            <DataTable.Title numeric>\n              Repack due\n            </DataTable.Title>\n            <DataTable.Title numeric>\n              Canopy size\n            </DataTable.Title>\n            <DataTable.Title numeric>\n              Inspected\n            </DataTable.Title>\n          </DataTable.Header>\n\n          {\n            dropzoneUser?.user?.rigs?.map((rig) =>\n              <DataTable.Row\n                key={`rig-${rig!.id}`}\n                onPress={() => {\n                  dispatch(actions.forms.rig.setOpen(rig));\n                }}\n                onLongPress={() =>\n                  navigation.navigate(\"RigInspectionScreen\", {\n                    dropzoneUserId: Number(route.params.userId),\n                    rig\n                  })\n                }\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell>\n                  {[rig?.make, rig?.model, `#${rig?.serial}`].join(\" \")}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, \"yyyy/MM/dd\") : \"-\"}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  {`${rig?.canopySize}`}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  <IconButton\n                    icon={\n                      dropzoneUser?.rigInspections?.some((insp) => insp.rig?.id === rig.id && insp.isOk)\n                      ? \"eye-check\"\n                      : \"eye-minus\"\n                    }\n                    color={\n                      dropzoneUser?.rigInspections?.some((insp) => insp.rig?.id === rig.id && insp.isOk)\n                      ? successColor\n                      : warningColor\n                    }\n                    onPress={() =>\n                      navigation.navigate(\"RigInspectionScreen\", {\n                        dropzoneUserId: Number(route.params.userId),\n                        rig\n                      })\n                    }\n                  />\n                </DataTable.Cell>\n              </DataTable.Row>\n            )\n          }\n        </DataTable>\n      </TableCard>\n        \n      <TableCard\n        title=\"Transactions\"\n        {\n          ...canAddTransaction ? {\n            buttonIcon: \"plus\",\n            onPressButton: () => {\n              if (dropzoneUser) {\n                dispatch(actions.forms.credits.setOpen(dropzoneUser!));\n              }\n            }\n          } : {}\n        }\n      >\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Time</DataTable.Title>\n            <DataTable.Title>Type</DataTable.Title>\n            <DataTable.Title>Message</DataTable.Title>\n            <DataTable.Title numeric>Amount</DataTable.Title>\n          </DataTable.Header>\n          {\n            dropzoneUser?.transactions?.edges?.map((edge) => (\n              <DataTable.Row key={`transaction-${edge?.node?.id}`}>\n                <DataTable.Cell>\n                  <Text style={{ fontSize: 12, fontStyle: \"italic\", color: \"#999999\" }}>{!edge?.node?.createdAt ? null : format(edge?.node?.createdAt * 1000, \"yyyy/MM/dd hh:mm\")}</Text>\n                </DataTable.Cell>\n                <DataTable.Cell>\n                  <Text style={{ fontSize: 12, fontStyle: \"italic\", color: \"#999999\" }}>{edge?.node?.status}</Text>\n                </DataTable.Cell>\n                <DataTable.Cell>\n                  {edge?.node?.message}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  {edge?.node?.amount}\n                </DataTable.Cell>\n              </DataTable.Row>\n            ))\n          }\n        </DataTable>\n      </TableCard>\n    </ScrollableScreen>\n        \n    <RigDialog\n      onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n      onSuccess={() => dispatch(actions.forms.rig.setOpen(false))}\n      open={forms.rig.open}\n      userId={Number(dropzoneUser?.user?.id)}\n    />\n    \n    <DropzoneUserDialog\n      onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n      onSuccess={(user) => {\n        dispatch(actions.forms.dropzoneUser.setOpen(false));\n        if (currentUser?.id === dropzoneUser?.id) {\n          dispatch(actions.global.setUser(user.user));\n        }\n      }}\n      open={forms.dropzoneUser.open}\n    />\n\n    <CreditsSheet\n      onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n      onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n      open={forms.credits.open}\n      dropzoneUser={dropzoneUser || undefined}\n    />\n\n    <EditUserSheet\n      onClose={() => dispatch(actions.forms.user.setOpen(false))} \n      onSuccess={() => dispatch(actions.forms.user.setOpen(false))}\n      open={forms.user.open}\n    />\n  </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: \"transparent\",\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n  },\n  chipTitle: {\n    color: \"white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: \"center\"\n  }\n});\n"],"sourceRoot":""}