{"version":3,"sources":["assets/images/logo.png","assets/images/weather.png","assets/fonts/SpaceMono-Regular.ttf","app/EntrypointWrapper.web.tsx","app/components/forms/credits/slice.tsx","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/extra/slice.tsx","app/components/forms/load/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/plane/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/ticket_type/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/dialogs/UserWizard/slice.tsx","app/screens/authenticated/dropzone_setup/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/users/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/slice.ts","app/state/global.ts","app/components/notifications/slice.ts","app/state/store.ts","app/api/Apollo.tsx","app/constants/Colors.ts","app/hooks/usePalette.ts","app/components/notifications/Notifications.tsx","app/navigation/Routes.ts","app/screens/NotFoundScreen.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateUser.ts","app/api/hooks/useCurrentDropzone.ts","app/api/schema.d.ts","app/hooks/useRestriction.ts","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/Themed.tsx","app/screens/authenticated/load/SlotCard.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/screens/authenticated/load/ActionButton.tsx","app/screens/authenticated/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/load/Header.tsx","app/screens/authenticated/load/InfoGrid.tsx","app/api/createQuery.tsx","app/api/hooks/useQueryLoad.ts","app/api/hooks/useMutationDeleteSlot.ts","app/screens/authenticated/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/layout/ScrollableScreen.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/utils/calculateCoordinatesByAngle.ts","app/utils/calculateLatLngDelta.ts","app/components/map/Map.web.tsx","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/weather_conditions/WindScreen.tsx","app/navigation/SetupWarning.tsx","app/navigation/AppBar.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/components/forms/manifest/ManifestForm.tsx","app/components/dialogs/ManifestUser/ManifestUser.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/NoResults.tsx","app/components/dialogs/ManifestGroup/UserListSelect.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/manifest/GetStarted.tsx","app/screens/authenticated/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/manifest/LoadCard/Small/Card.tsx","app/components/layout/SwipeActions.tsx","app/screens/authenticated/manifest/LoadCard/Large/Card.tsx","app/components/notifications/index.ts","app/api/hooks/useQueryDropzoneUsers.ts","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/forms/load/LoadForm.tsx","app/components/layout/DialogOrSheet.web.tsx","app/components/dialogs/Load.tsx","app/screens/authenticated/manifest/Weather/JumpRun.tsx","app/screens/authenticated/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/manifest/ManifestScreen.tsx","app/screens/authenticated/manifest/ManifestGroupScreen.tsx","app/screens/authenticated/manifest/ManifestGroupUserSelectScreen.tsx","app/navigation/tabs/manifest.tsx","app/api/hooks/useNotifications.ts","app/screens/authenticated/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/NotificationsScreen.tsx","app/navigation/tabs/notifications.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/components/forms/credits/CreditsForm.tsx","app/components/dialogs/CreditsDialog/Credits.web.tsx","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/forms/user/UserForm.tsx","app/components/dialogs/User.tsx","app/screens/authenticated/profile/UserInfo/TableCard.tsx","app/screens/authenticated/profile/UserInfo/Header.tsx","app/screens/authenticated/profile/UserInfo/InfoGrid.tsx","app/api/hooks/useDropzoneUser.ts","app/components/Badge.tsx","app/api/hooks/useMutationRevokePermission.ts","app/api/hooks/useMutationGrantPermission.ts","app/screens/authenticated/profile/ProfileScreen.tsx","app/navigation/tabs/profile.tsx","app/screens/authenticated/settings/SettingsScreen.tsx","app/components/forms/ticket_type/TicketTypeForm.tsx","app/components/dialogs/TicketType.tsx","app/screens/authenticated/ticket_types/TicketTypesScreen.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/dropzones/UpdateDropzoneScreen.tsx","app/components/forms/plane/PlaneForm.tsx","app/components/dialogs/Plane.tsx","app/screens/authenticated/planes/PlanesScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/settings/RigInspectionTemplateScreen.tsx","app/screens/authenticated/settings/DropzoneRigsScreen.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/authenticated/settings/DropzonePermissionScreen.tsx","app/screens/authenticated/settings/DropzoneMasterLogScreen.tsx","app/components/forms/extra/ExtraForm.tsx","app/screens/authenticated/extras/UpdateExtraScreen.tsx","app/components/dialogs/TicketTypeExtra.tsx","app/screens/authenticated/extras/ExtrasScreen.tsx","app/navigation/tabs/settings.tsx","app/components/forms/ghost/GhostForm.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/users/UsersScreen.tsx","app/screens/authenticated/users/AppBar.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/screens/authenticated/rig/RigInspectionScreen.tsx","app/navigation/tabs/users.tsx","app/navigation/Authenticated.tsx","app/screens/authenticated/dropzones/DropzonesScreen.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/screens/authenticated/dropzones/CreateDropzoneScreen.tsx","app/navigation/LimboRoutes.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/navigation/Unauthenticated.tsx","app/screens/authenticated/dropzone_setup/steps/Name.tsx","app/screens/authenticated/dropzone_setup/steps/Location.web.tsx","app/screens/authenticated/dropzone_setup/steps/Aircraft.tsx","app/screens/authenticated/dropzone_setup/steps/Theming.tsx","app/screens/authenticated/dropzone_setup/steps/Permissions.tsx","app/screens/authenticated/dropzone_setup/steps/TicketType.tsx","app/api/hooks/useMutationUpdateDropzone.ts","app/api/hooks/useMutationCreatePlane.tsx","app/api/hooks/useMutationUpdatePlane.tsx","app/api/hooks/useMutationCreateTicketType.ts","app/api/hooks/useMutationUpdateTicketType.ts","app/screens/authenticated/dropzone_setup/DropzoneSetupScreen.tsx","app/screens/unauthenticated/signup/ConfirmUserScreen.tsx","app/navigation/RootNavigator.tsx","app/components/dialogs/UserWizard/steps/Federation.tsx","app/components/dialogs/UserWizard/steps/Rig.tsx","app/components/dialogs/UserWizard/steps/ReserveRepack.tsx","app/components/dialogs/UserWizard/steps/Wingloading.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/dialogs/UserWizard/UserWizardScreen.tsx","app/Entrypoint.tsx","app/hooks/useCachedResources.ts"],"names":["module","exports","Wrapper","children","View","style","StyleSheet","absoluteFill","initialState","original","open","fields","amount","value","error","status","message","createSlice","name","reducers","setField","state","action","payload","field","setFieldError","setOpen","reset","federation","lat","lng","secondaryColor","primaryColor","banner","isCreditSystemEnabled","isPublic","Object","keys","forEach","key","payloadKey","typedKey","role","expiresAt","cost","ticketTypeIds","ticketTypes","map","id","Number","gca","dispatchAt","isOpen","loadMaster","pilot","plane","maxSlots","exitWeight","email","phone","license","setFederation","console","log","registration","minSlots","hours","nextMaintenanceHours","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","idx","setFields","JSON","parse","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","users","setFromSlots","slot","rigId","find","i","setDropzoneUsers","dzUser","availableRigs","user","altitude","allowManifestingSelf","isTandem","rigs","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","complete","dropzone","undefined","credits","extra","ghost","rigInspection","rigInspectionTemplate","manifest","manifestGroup","userWizard","dropzoneWizard","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","login","signup","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","roundness","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","expoPushToken","theme","isDarkMode","setCredentials","setUser","setExpoPushToken","setPermissions","setPrimaryColor","setAccentColor","accent","setDropzone","toggleDarkMode","logout","queue","hideSnackbar","slice","showSnackbar","push","persistConfig","storage","Platform","OS","require","default","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","notifications","notificationSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","httpLink","createHttpLink","uri","Constants","url","Apollo","root","dispatch","errorLink","React","onError","graphQLErrors","networkError","operation","response","some","extensions","code","variant","authLink","setContext","_","headers","accessToken","Authorization","tokenType","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","usePalette","MyComponent","palette","notification","length","variantStyle","backgroundColor","Snackbar","testID","visible","onDismiss","duration","prefixes","Linking","config","confirm","path","params","account_confirmation_success","Authenticated","HomeScreen","LoadScreen","PackingScreen","ProfileScreen","SetupScreen","Limbo","DropzonesScreen","CreateDropzoneScreen","Unauthenticated","LoginScreen","SignUpScreen","NotFoundScreen","navigation","styles","container","Text","title","TouchableOpacity","onPress","replace","linkText","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","isRequired","pattern","isEmail","RegExp","validates","callback","createMutation","mutation","options","getPayload","fieldErrorMap","validators","opts","onFieldError","onSuccess","useMutation","mutate","loading","variables","mopts","a","async","hasErrors","x","variable","validator","test","validate","result","data","fieldErrors","camelizedField","camelCase","fieldName","errors","gql","updateUser","exit_weight","QUERY_DROPZONE","useCurrentDropzone","dropzoneId","pushToken","useQuery","earliestTimestamp","startOfDay","Date","getTime","fetchPolicy","mutationUpdateUser","useMutationUpdateUser","userId","remoteToken","localToken","called","LoadState","Permission","QUERY_PERMISSIONS","useRestriction","permission","includes","QUERY_PERMISSION_USER","GCAChip","props","small","onSelect","isMenuOpen","setMenuOpen","UpdateLoad","Menu","anchor","Chip","mode","icon","selectedColor","marginHorizontal","height","borderColor","textStyle","dropzoneUsers","edges","edge","Item","node","LoadMasterChip","slots","allowed","QUERY_DROPZONE_USERS","PilotChip","QUERY_PLANES","PlaneChip","planes","useThemeColor","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","SlotCard","onDelete","Card","elevation","flatten","margin","width","Title","left","image","Image","source","size","Icon","right","Badge","marginRight","e","preventDefault","Content","flexDirection","flexWrap","disabled","wingLoading","toFixed","updateLoad","pilotId","gcaId","planeId","loadMasterId","ActionButton","isExpanded","setExpanded","mutationUpdateLoad","useMutationUpdateLoad","updateCall","minutes","dispatchTime","addMinutes","Math","ceil","BoardingCall","Open","updateLoadState","onLanded","hasLanded","Landed","onManifest","hasLicense","hasMembership","hasRigInspection","hasReserveInDate","hasExitWeight","hasCredits","canUpdateLoad","canManifestSelf","CreateSlot","canManifestGroup","CreateUserSlot","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","createCallAction","callActions","label","manifestActions","filter","Boolean","workflowActions","Cancelled","InFlight","buttonActions","Portal","FAB","Group","fabStyle","marginLeft","marginBottom","onStateChange","CountdownCircleTimer","select","ios","then","android","web","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","strokeWidth","remainingTime","animatedColor","seconds","round","secondsToMinutes","formattedSeconds","formattedMinutes","Animated","UserHeader","onEdit","canEdit","IconButton","surface","avatarContainer","isAfter","titleContainer","loadNumber","Paragraph","paragraph","paddingTop","paddingHorizontal","paddingLeft","InfoGrid","items","Divider","divider","titleStyle","bold","descriptionStyle","description","verticalDivider","hairlineWidth","textAlign","createQuery","query","pollInterval","refetch","transformedData","showSnackbarErrors","deleteSlot","AvailableSlotCard","opacity","alignSelf","SlotSkeleton","isLoading","containerStyle","layout","route","useRoute","useQueryLoad","detailedLoad","mutationDeleteSlot","useMutationDeleteSlot","onDeleteSlot","updatePilot","updateGCA","updatePlane","updateLoadMaster","lm","canEditSelf","UpdateSlot","canEditOthers","UpdateUserSlot","canRemoveSelf","DeleteSlot","canRemoveOthers","DeleteUserSlot","useNavigation","Array","from","occupiedSlots","useWindowDimensions","numColumns","floor","contentWidth","initialLoading","flexGrow","horizontal","showsHorizontalScrollIndicator","marginVertical","weight","keyExtractor","Dimensions","get","contentContainerStyle","paddingBottom","refreshing","onRefresh","refreshControl","RefreshControl","renderItem","slotGroup","groupNumber","onSlotGroupPress","navigate","onSlotPress","WizardPagination","paginationIndex","icons","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","position","top","WizardContext","count","setIndex","Wizard","ref","Provider","current","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","onChangeIndex","prevIndex","rest","ScrollView","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","content","wizardScreen","button","buttonBack","buttons","maxWidth","WizardScreen","onBack","backButtonLabel","nextButtonLabel","onNext","contentStyle","disableScroll","scrollRef","scrollTo","y","ScrollableScreen","minHeight","pointerEvents","Button","subtitle","WizardCompleteStep","createWeatherCondition","WindRow","speed","direction","onChange","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","card","row","altitudeCard","minWidth","altitudeOption","toString","alt","strengthCard","onBlur","onChangeText","newSpeed","match","numbers","textField","keyboardType","directionCard","newDir","CARD_STYLE","textAlignVertical","lineHeight","borderRadius","borderTopLeftRadius","borderBottomLeftRadius","overflow","borderTopRightRadius","borderBottomRightRadius","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","KeyboardAvoidingView","behavior","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","TextInput","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","set","paddingRight","shadowColor","cardTitle","cardValue","slider","sliderControl","wingLoadingCardLeft","wingLoadingCardRight","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","PI","calculateAngle180","DEGREE_DIRECTION_SECTORS","getPointOnCircle","degrees","radius","offsetX","offsetY","sin","cos","degreesToRadians","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","Map","center","coords","shape","interactive","onDragEnd","isLoaded","useJsApiLoader","googleMapsApiKey","mapStyle","onLoad","component","Location","location","longitude","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","delayedPanningTimer","panDelayed","clearTimeout","rootLayout","setRootLayout","onLayout","nativeEvent","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","mapTypeId","JumpRunSelector","MAP_SIZE","isDragging","setDragging","originX","originY","origin","setOrigin","rotation","Value","planePosition","planeAnimation","loop","timing","toValue","useNativeDriver","resetBeforeIteration","onGestureEvent","setValue","stop","currentCoordinates","angle","requestAnimationFrame","onMountRotatableView","event","planeStartPosition","onBegan","start","onEnded","interpolate","inputRange","outputRange","maxHeight","iconContainer","transform","rotate","zIndex","translateY","MaterialCommunityIcons","degreeLabel","bottomDegreeLabel","textShadowColor","textShadowRadius","textShadowOffset","bottom","borderWidth","borderStyle","textInput","setLocation","setUsersLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","currentIndex","stringify","Winds","goBack","JumpRun","JumpRunScreen","fab","WindScreen","Warning","flexShrink","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","join","QUERY_CURRENT_USER","AppBar","previous","scene","hideWarnings","contextMenuOpen","setContextMenuOpen","useLazyQuery","loadData","Appbar","Header","BackAction","descriptor","headerRight","tintColor","isRigInspected","rigInspections","inspection","isRepackInDate","ChipSelect","selected","isSelected","isDisabled","renderItemLabel","onChangeSelected","autoSelectFirst","isEqual","xorBy","ChipSelectSkeleton","rows","useAllowedJumpTypes","allowedJumpTypes","jumpTypes","JumpTypeChipSelect","onLoadingStateChanged","userIds","Subheader","uniqBy","first","useTicketTypes","TicketTypeChipSelect","onlyPublicTickets","QUERY_RIGS","RigSelect","required","fetchRigs","ManifestForm","allowedToManifestOthers","HelperText","type","ticketAddons","Affix","newValue","MUTATION_CREATE_SLOT","ManifestUserDialog","globalState","mutationCreateSlot","mutationData","jumpTypeId","extraIds","loadId","ticketTypeId","dropzoneUserId","createSlot","Dialog","ProgressBar","indeterminate","ScrollArea","Actions","onClose","useQueryDropzoneUsersDetails","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","onChangeExitWeight","selectedRig","SlotForm","slotUser","newRig","NoResults","empty","UsersScreen","search","Searchbar","placeholder","Checkbox","scrollView","MUTATION_CREATE_SLOTS","mutationCreateSlots","tabIndex","setTabIndex","userGroup","createSlots","defaultIndex","userListContainer","buttonContainer","contentContainer","sheet","sheetHeader","shadowOffset","shadowOpacity","shadowRadius","GetStarted","hasPlanes","hasTicketTypes","separator","LoadingCard","LOAD_BADGE_COLOR","cancelled","boarding_call","LoadCard","initialRecord","loadStates","isBefore","smallChip","smallChipText","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","translateX","close","useNativeAnimations","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","DataTable","numeric","isCurrentUser","Row","Cell","slotText","v","differenceInMinutes","DropzoneUserChipSelect","requiredPermissions","useQueryDropzoneUsers","PlaneChipSelect","LoadForm","DialogOrSheet","buttonLabel","buttonAction","dismissable","MUTATION_CREATE_LOAD","LoadDialog","mutationCreateLoad","hasError","onSave","createLoad","snackbar","snapPoints","JumpRunMap","CENTER_Y","CENTER_X","scaleX","WeatherBoard","conditions","currentConditions","date","createdAt","canUpdate","UpdateWeatherConditions","hasWeatherConditions","ImageBackground","weatherBackground","absoluteFillObject","resizeMode","cell","FontAwesome","format","windboard","header","orderBy","noData","noDataLabel","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","fetchMore","isFocused","useIsFocused","isSetupComplete","canCreateLoad","CreateLoad","cardWidth","loads","ListHeaderComponent","ListEmptyComponent","ManifestGroupScreen","screen","ManifestGroupUserSelectScreen","Android","setParams","Manifest","createStackNavigator","ManifestTab","Navigator","screenOptions","headerShown","cardStyle","Screen","QUERY_DROPZONE_USER_NOTIFICATIONS","ManifestedNotification","p","Caption","formatDistanceToNow","BoardingCallNotification","resource","useNotifications","notificationType","Profile","Notifications","NotificationsScreen","DatePicker","timestamp","selectedDays","onDayClick","QUERY_ROLES","RoleSelect","toUpperCase","roles","DropzoneUserForm","canUpdateRole","GrantPermission","newRole","time","MUTATION_EDIT_DROPZONE_USER","DropzoneUserDialog","mutationUpdateDropzoneUser","createData","userRoleId","updateDropzoneUser","CreditsForm","currentCredits","subtotal","newIndex","MUTATION_CREATE_TRANSACTION","mutationCreateTransaction","updateRig","createRig","RigForm","showTypeSelect","canCreateRigs","CreateRig","MUTATION_CREATE_RIG","MUTATION_UPDATE_RIG","RigDialog","mutationCreateRig","mutationUpdateRig","updateData","QUERY_LICENSES","LicenseChipSelect","federationId","licenses","QUERY_FEDERATIONS","FederationSelect","federations","UpdateUserDialog","emailRegex","licenseId","parseFloat","TableCard","buttonIcon","onPressButton","onPressAvatar","TouchableRipple","QUERY_DROPZONE_USER","iconName","actAsDZSO","actAsGCA","actAsLoadMaster","actAsPilot","actAsRigInspector","revokePermission","permissionName","grantPermission","MUTATION_UPDATE_IMAGE","isSelf","useDropzoneUser","canGrantPermission","useMutationRevokePermission","useMutationGrantPermission","ImagePicker","onPickImage","mediaTypes","Images","allowsEditing","aspect","quality","base64","badges","canAddTransaction","CreateUserTransaction","canUpdateUser","UpdateUser","ActAsPilot","ActAsDzso","ActAsGca","ActAsRigInspector","ActAsLoadMaster","shouldShowBadge","update","c","readQuery","updatedList","writeQuery","shouldUpdate","updatedGcaList","newData","chip","chipTitle","onLongPress","insp","isOk","transactions","fontStyle","ProfileTab","initialParams","SettingsScreen","canUpdateDropzone","UpdateDropzone","canUpdateRigInspectionTemplate","UpdateFormTemplate","Section","QUERY_EXTRAS","ALTITUDE_LABEL_MAP","TicketTypeForm","MUTATION_CREATE_TICKET_TYPE","MUTATION_UPDATE_TICKET_TYPE","TicketTypeDialog","mutationCreateTicketType","mutationUpdateTicketType","updateTicketType","createTicketType","QUERY_TICKET_TYPE","MUTATION_DELETE_TICKET_TYPE","TicketTypesScreen","form","mutationDeleteTicketType","canCreateTicketTypes","CreateTicketType","deleteTicketType","Switch","onValueChange","ColorPickerDialog","sliderComponent","SliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","colorBox","ColorPicker","helperText","isCustomColor","isDialogOpen","setDialogOpen","Surface","MaterialIcons","previewContainer","previewAppBar","previewTabBar","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","PhonePreview","WebPreview","markerFixed","myLocation","LocationWizardStep","markerSize","labelSize","setCenter","region","isAnimating","setAnimating","fadeOut","fadeIn","setCoordinateFade","defaultZoom","onDragStart","r","DropzoneForm","outsideLoading","getDocumentAsync","multiple","skeletonCard","Cover","Phone","Web","skeletonCardColorPicker","skeletonCardCheckbox","subheader","QUERY_DROPZONE_DETAILS","MUTATION_UPDATE_DROPZONE","UpdateDropzoneScreen","mutationUpdateDropzone","updateDropzone","MUTATION_UPDATE_PLANE","MUTATION_CREATE_PLANE","CreatePlaneScreen","mutationCreatePlane","mutationUpdatePlane","createPlane","MUTATION_DELETE_PLANE","PlanesScreen","deletePlane","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","RigInspectionItem","canInspect","valueType","RigInspectionTemplateForm","newItem","setNewItem","fabOpen","setFabOpen","onTouchEnd","QUERY_RIG_INSPECTION","MUTATION_UPDATE_FORM","RigInspectionTemplateScreen","mutationUpdateForm","updateForm","formId","QUERY_DROPZONE_RIGS","DropzoneRigsScreen","rigForm","canCreateRig","CreateDropzoneRig","MUTATION_UPDATE_ROLE","PermissionListItem","canChangePermissions","mutationUpdatePermission","roleId","optimisticResponse","updateRole","QUERY_DROPZONE_PERMISSIONS","DropzonePermissionScreen","capitalize","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","setOptions","masterLog","QUERY_TICKET_TYPES","ExtraForm","ticket","xor","MUTATION_UPDATE_EXTRA","UpdateExtraScreen","mutationUpdateExtra","updateExtra","MUTATION_CREATE_EXTRA","TicketTypeExtraDialog","mutationCreateExtra","createExtra","ExtrasScreen","formState","canCreateExtras","CreateExtra","Settings","SettingsTab","TicketTypeSettingsScreen","createGhost","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","UserCardSkeleton","ghostForm","canCreateUser","CreateUser","inputContainer","input","onSearch","searchVisible","autoFocus","RigInspectionForm","QUERY_RIG_INSPECTIONS","MUTATION_CREATE_RIG_INSPECTION","RigInspectionScreen","mutationCreateRigInspection","record","createRigInspection","mutationResult","currentDz","ins","BottomTab","createBottomTabNavigator","AuthenticatedTabBar","useTheme","canViewUsers","ReadUser","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","UpdateDropzoneRig","shouldShowSettings","initialRouteName","tabBarOptions","activeTintColor","inactiveBackgroundColor","activeBackgroundColor","inactiveTintColor","showLabel","tabBarIcon","focused","unmountOnBlur","NotificationTab","UsersTab","QUERY_DROPZONES","SafeAreaView","FlatList","dropzones","shouldPushRoute","dzIcon","createDropzone","useMutationCreateDropzone","Stack","MUTATION_LOG_IN","mutationLogin","onLogin","userLogin","authenticatable","logo","secureTextEntry","labelStyle","textButtonLabel","textButton","userSignUp","SignupScreen","useMutationSignUp","onSignUp","textContentType","passwordRules","NameAndFederationWizardSceen","latitudeDelta","longitudeDelta","AircraftWizardScreen","setMinSlots","setMaxSlots","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","onSlidingComplete","ReserveRepackWizardScreen","PermissionWizardScreen","dropzoneForm","queryRoles","TicketTypeWizardScreen","price","setPrice","DropzoneSetupScreen","aircraft","mutationCreateDropzone","useMutationUpdateDropzone","useMutationCreatePlane","useMutationUpdatePlane","useMutationCreateTicketType","useMutationUpdateTicketType","onBasicInfoNext","onThemingNext","onAircraftNext","onTicketTypeNext","Name","Theming","Aircraft","TicketType","errorIcon","ConfirmUserScreen","createDrawerNavigator","RootNavigator","AuthenticatedRoutes","LimboRoutes","UnauthenticatedRoutes","FederationWizardSceen","RigWizardScreen","isOtherMake","setIsOtherMake","WingloadingWizardScreen","userForm","setCanopySize","setWeight","w","modal","UserWizardScreen","useMutationUpdateRig","useMutationCreateRig","onFederationNext","onRigNext","onReserveRepackNext","onWingloadingNext","Modal","Federation","Rig","ReserveRepack","Wingloading","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","token","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","registerForPushNotificationsAsync","request","body","addEventListener","removeEventListener","fallback","NavigationContainer","linking","LinkingConfiguration","StatusBar","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerRootComponent","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","fontsLoaded","SplashScreen","Ionicons","font","useCachedResources","ActivityIndicator"],"mappings":"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","file":"static/js/app.ec17e26c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function Wrapper({ children }: { children: React.ReactNode }) {\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Transaction } from '../../../api/schema.d';\n\ntype Fields = Pick<Transaction, 'amount' | 'status' | 'message'>;\n\ninterface IDropzoneEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Transaction[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    amount: {\n      value: null,\n      error: null,\n    },\n    status: {\n      value: 'deposit',\n      error: null,\n    },\n    message: {\n      value: '',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/credits',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<DropzoneUser | boolean>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\nexport type DropzoneFields = Pick<\n  Dropzone,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'isPublic'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: Dropzone | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: Dropzone[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    isPublic: {\n      value: false,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ntype Fields = Pick<DropzoneUser, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUser[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Extra } from '../../../api/schema.d';\n\ninterface IExtraEditState {\n  original: Extra | null;\n  open: boolean;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    cost: {\n      value: number | null;\n      error: string | null;\n    };\n    ticketTypeIds: {\n      value: number[];\n      error: null;\n    };\n  };\n}\n\nexport const initialState: IExtraEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    ticketTypeIds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/extra',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IExtraEditState, action: PayloadAction<boolean | Extra>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.ticketTypeIds.value = action.payload.ticketTypes.map(({ id }) => Number(id));\n        state.fields.cost.value = action.payload.cost;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: IExtraEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Load } from '../../../api/schema.d';\n\ntype Fields = Pick<\n  Load,\n  'name' | 'gca' | 'dispatchAt' | 'isOpen' | 'loadMaster' | 'pilot' | 'maxSlots' | 'plane'\n>;\n\ninterface ILoadEditState {\n  original: Load | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Load[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ILoadEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    gca: {\n      value: null,\n      error: null,\n    },\n    dispatchAt: {\n      value: null,\n      error: null,\n    },\n    isOpen: {\n      value: true,\n      error: null,\n    },\n    loadMaster: {\n      value: null,\n      error: null,\n    },\n    pilot: {\n      value: null,\n      error: null,\n    },\n    plane: {\n      value: null,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/load',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ILoadEditState, action: PayloadAction<boolean | Load>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ILoadEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User, DropzoneUser } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email' | 'license'> &\n  Pick<DropzoneUser, 'role'>;\n\ninterface IGhostEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (state: IGhostEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (state: IGhostEditState, action: PayloadAction<boolean | User>) => {\n      console.log('Setting open');\n      console.log(action.payload);\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Plane } from '../../../api/schema.d';\n\nexport type PlaneFields = Pick<\n  Plane,\n  'name' | 'registration' | 'minSlots' | 'maxSlots' | 'hours' | 'nextMaintenanceHours'\n>;\n\ninterface IPlaneEditState {\n  original: Plane | null;\n  open: boolean;\n  fields: {\n    [K in keyof PlaneFields]-?: {\n      value: Plane[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IPlaneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    registration: {\n      value: '',\n      error: null,\n    },\n    minSlots: {\n      value: 0,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n    hours: {\n      value: null,\n      error: null,\n    },\n    nextMaintenanceHours: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'Plane',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IPlaneEditState, action: PayloadAction<boolean | Plane>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.hours.value = action.payload.hours || 0;\n        state.fields.minSlots.value = action.payload.minSlots || 0;\n        state.fields.maxSlots.value = action.payload.maxSlots || 3;\n        state.fields.name.value = action.payload.name || '';\n        state.fields.registration.value = action.payload.registration || '';\n        state.fields.nextMaintenanceHours.value = action.payload.nextMaintenanceHours || 0;\n      }\n    },\n\n    reset: (state: IPlaneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig } from '../../../api/schema.d';\n\nexport type RigFields = Pick<\n  Rig,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType'\n>;\n\ninterface IRigEditState {\n  original: Rig | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: Rig[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | Rig>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        console.error('Failed to read rig inspection template', error.message, action.payload);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Slot } from '../../../api/schema.d';\n\ntype Fields = Pick<\n  Slot,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: Slot | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | Slot>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotUser, Slot, DropzoneUser } from '../../../api/schema.d';\n\ninterface IFields extends Pick<Slot, 'jumpType' | 'load' | 'ticketType' | 'extras'> {\n  users: SlotUser[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (state: ISlotEditState, action: PayloadAction<Slot[]>) => {\n      state.fields.users.value = action.payload.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUser[];\n\n      state.fields.jumpType.value = action.payload.find((i) => i)?.jumpType;\n      state.fields.load.value = action.payload.find((i) => i)?.load || null;\n      state.fields.extras.value = action.payload.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (state: ISlotEditState, action: PayloadAction<DropzoneUser[]>) => {\n      state.fields.users.value = action.payload.map<SlotUser>((dzUser) => ({\n        id: Number(dzUser.id),\n        rigId: Number(dzUser?.availableRigs?.find(({ id }) => id)?.id),\n        exitWeight: Number(dzUser?.user?.exitWeight),\n      })) as SlotUser[];\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketType } from '../../../api/schema.d';\n\nexport type TicketTypeFields = Pick<\n  TicketType,\n  'name' | 'cost' | 'isTandem' | 'allowManifestingSelf' | 'altitude' | 'extras'\n>;\n\ninterface ITicketTypeEditState {\n  original: TicketType | null;\n  open: boolean;\n  fields: {\n    [K in keyof TicketTypeFields]-?: {\n      value: TicketType[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ITicketTypeEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    altitude: {\n      value: 14000,\n      error: null,\n    },\n    allowManifestingSelf: {\n      value: false,\n      error: null,\n    },\n    isTandem: {\n      value: false,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ticketType',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ITicketTypeEditState, action: PayloadAction<boolean | TicketType>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.altitude.value = action.payload.altitude || 0;\n        state.fields.cost.value = action.payload.cost || 0;\n        state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: ITicketTypeEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User } from '../../../api/schema.d';\n\nexport type UserFields = Pick<User, 'exitWeight' | 'rigs' | 'name' | 'phone' | 'email' | 'license'>;\n\ninterface IUserEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: User[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IUserEditState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherCondition } from '../../../api/schema.d';\n\ntype Fields = Pick<\n  WeatherCondition,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherCondition | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherCondition>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig, User } from '../../../api/schema.d';\n\ninterface IUserWizardState {\n  open: boolean;\n  fields: {\n    user: {\n      value: User | null;\n      error: string | null;\n    };\n    rig: {\n      value: Rig | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserWizardState = {\n  open: false,\n  fields: {\n    user: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/userWizard',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IUserWizardState['fields']>(\n      state: IUserWizardState,\n      action: PayloadAction<[T, IUserWizardState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n    },\n    setFieldError: <T extends keyof IUserWizardState['fields']>(\n      state: IUserWizardState,\n      action: PayloadAction<[T, IUserWizardState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IUserWizardState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.fields = initialState.fields;\n      } else {\n        state.fields.user.value = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IUserWizardState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\ninterface IDropzoneWizardState {\n  open: boolean;\n  complete: boolean;\n  fields: {\n    dropzone: {\n      value: Dropzone | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  open: false,\n  complete: false,\n  fields: {\n    dropzone: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneWizard',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneWizardState['fields']>(\n      state: IDropzoneWizardState,\n      action: PayloadAction<[T, IDropzoneWizardState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n    },\n    setFieldError: <T extends keyof IDropzoneWizardState['fields']>(\n      state: IDropzoneWizardState,\n      action: PayloadAction<[T, IDropzoneWizardState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneWizardState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.fields = initialState.fields;\n      } else {\n        state.fields.dropzone.value = action.payload;\n        state.open = true;\n      }\n    },\n\n    complete: (state: IDropzoneWizardState, action: PayloadAction<boolean | undefined>) => {\n      state.complete = action.payload !== undefined ? action.payload : true;\n    },\n\n    reset: (state: IDropzoneWizardState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import * as credits from './credits/slice';\nimport * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as extra from './extra/slice';\nimport * as load from './load/slice';\nimport * as ghost from './ghost/slice';\nimport * as plane from './plane/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as ticketType from './ticket_type/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\nimport * as userWizard from '../dialogs/UserWizard/slice';\nimport * as dropzoneWizard from '../../screens/authenticated/dropzone_setup/slice';\n\nexport const initialState = {\n  credits: credits.initialState,\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  extra: extra.initialState,\n  ghost: ghost.initialState,\n  load: load.initialState,\n  plane: plane.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  ticketType: ticketType.initialState,\n  user: user.initialState,\n  userWizard: userWizard.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  credits: credits.default,\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  extra: extra.default,\n  ghost: ghost.default,\n  load: load.default,\n  plane: plane.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  ticketType: ticketType.default,\n  user: user.default,\n  userWizard: userWizard.default,\n  dropzoneWizard: dropzoneWizard.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUser[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (state: IManifestScreenState, action: PayloadAction<DropzoneUser[]>) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import * as users from './authenticated/users/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport { Credential, User, Dropzone } from '../api/schema';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  roundness: 16,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n    primary: '#333333',\n  },\n};\nconst CombinedDarkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  roundness: 16,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: '#333333',\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: User | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: Dropzone | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  theme: CombinedDefaultTheme,\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<User>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<Dropzone | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n    },\n    toggleDarkMode: (state: IGlobalState) => {\n      state.isDarkMode = !state.isDarkMode;\n      state.theme = state.isDarkMode ? CombinedDarkTheme : CombinedDefaultTheme;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'warning';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationState {\n  queue: INotification[];\n}\n\nexport const initialState = { queue: [] } as INotificationState;\nexport default createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    hideSnackbar: (state: INotificationState) => {\n      state.queue = state.queue.slice(1);\n    },\n    showSnackbar: (state: INotificationState, action: PayloadAction<INotification>) => {\n      state.queue.push(action.payload);\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\nimport notificationSlice, {\n  initialState as initialStateNotification,\n} from '../components/notifications/slice';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  notifications: initialStateNotification,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global', 'notifications'],\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  notifications: notificationSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  notifications: notificationSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { onError } from '@apollo/client/link/error';\nimport * as React from 'react';\nimport Constants from 'expo-constants';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nconst httpLink = createHttpLink({\n  uri: Constants.manifest.extra.url,\n});\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Session expired`,\n              variant: 'error',\n            })\n          );\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV !== 'production') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`,\n                variant: 'error',\n              })\n            );\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            console.error(JSON.stringify(err));\n            console.error(operation);\n          });\n        }\n        if (networkError) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `[Network error]: ${networkError}`,\n              variant: 'error',\n            })\n          );\n        }\n      }),\n    [dispatch]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link: errorLink.concat(authLink).concat(httpLink),\n        cache: new InMemoryCache(),\n      }),\n    [authLink, errorLink]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { Snackbar } from 'react-native-paper';\nimport { useAppSelector, useAppDispatch } from '../../state';\n\nimport slice from './slice';\nimport usePalette from '../../hooks/usePalette';\n\nconst { actions } = slice;\n\nconst MyComponent = () => {\n  const state = useAppSelector((root) => root.notifications);\n  const dispatch = useAppDispatch();\n  const palette = usePalette();\n\n  const notification = state.queue.length ? state.queue[0] : null;\n\n  const variantStyle = {\n    info: { backgroundColor: palette.info },\n    success: { backgroundColor: palette.success },\n    error: { backgroundColor: palette.error },\n    warning: { backgroundColor: palette.warning },\n  };\n\n  return (\n    <Snackbar\n      testID=\"snackbar-message\"\n      visible={!!notification}\n      onDismiss={() => dispatch(actions.hideSnackbar())}\n      duration={3000}\n      action={notification?.action}\n      style={!!notification?.variant && variantStyle[notification.variant]}\n    >\n      {notification?.message}\n    </Snackbar>\n  );\n};\n\nexport default MyComponent;\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      confirm: {\n        path: '/confirm',\n        params: {\n          account_confirmation_success: undefined,\n        },\n      },\n      Authenticated: {\n        screens: {\n          HomeScreen: '/home',\n          LoadScreen: '/load/:load_id',\n          PackingScreen: '/packing',\n          ProfileScreen: '/user/:id',\n          SetupScreen: '/dropzone/setup',\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzonesScreen: '/dropzones',\n          CreateDropzoneScreen: '/dropzone/create',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { DocumentNode, useMutation, MutationOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport { FieldError, Mutation } from './schema';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern: new RegExp(\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    ),\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  }\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: Mutation) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [k: string]: keyof InputType;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation);\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable]}`)) {\n                      hasErrors = true;\n\n                      if (onFieldError) {\n                        onFieldError(variable as string, validator.message);\n                      }\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    if (onFieldError) {\n                      onFieldError(variable as string, validator.message);\n                    }\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            const camelizedField = camelCase(field);\n            const fieldName =\n              fieldErrorMap && camelizedField in (fieldErrorMap || {})\n                ? fieldErrorMap[field]\n                : field;\n\n            if (opts.onFieldError) {\n              opts.onFieldError(`${fieldName}`, message);\n            }\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            onSuccess(payload);\n          }\n        } catch (err) {\n          if (onError) {\n            onError(err.message);\n          }\n        }\n      },\n      [onFieldError, onError, onSuccess, mutate, opts]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateUserArgs, UpdateUserPayload } from '../schema';\n\nconst MUTATION_UPDATE_USER = gql`\n  mutation UpdateUser(\n    $id: Int\n    $name: String\n    $phone: String\n    $email: String\n    $pushToken: String\n    $nickname: String\n    $licenseId: Int\n    $exitWeight: Float\n  ) {\n    updateUser(\n      input: {\n        id: $id\n        attributes: {\n          pushToken: $pushToken\n          name: $name\n          phone: $phone\n          email: $email\n          nickname: $nickname\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        pushToken\n        phone\n        rigs {\n          id\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateUserArgs['input']['attributes'],\n  UpdateUserPayload\n>(MUTATION_UPDATE_USER, {\n  getPayload: (result) => result.updateUser,\n  fieldErrorMap: {\n    license: 'licenseId',\n    exit_weight: 'exitWeight',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useMutationUpdateUser from './useMutationUpdateUser';\n\nexport const QUERY_DROPZONE = gql`\n  query QueryDropzone($dropzoneId: Int!, $earliestTimestamp: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n      lat\n      lng\n      name\n      primaryColor\n      secondaryColor\n      planes {\n        id\n        name\n        registration\n      }\n      ticketTypes {\n        id\n        name\n      }\n\n      currentConditions {\n        id\n        jumpRun\n        temperature\n        offsetDirection\n        offsetMiles\n        winds {\n          altitude\n          speed\n          direction\n        }\n      }\n\n      currentUser {\n        id\n        credits\n        hasCredits\n        hasExitWeight\n        hasMembership\n        hasReserveInDate\n        hasRigInspection\n        hasLicense\n        permissions\n        expiresAt\n\n        role {\n          id\n          name\n        }\n\n        rigInspections {\n          id\n          isOk\n          rig {\n            id\n          }\n        }\n\n        transactions {\n          edges {\n            node {\n              id\n              status\n              amount\n            }\n          }\n        }\n        availableRigs {\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          pushToken\n\n          rigs {\n            id\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n\n      loads(earliestTimestamp: $earliestTimestamp) {\n        edges {\n          node {\n            id\n            name\n            loadNumber\n            isOpen\n            maxSlots\n            state\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function useCurrentDropzone() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n\n  const currentDropzone = useQuery<Query>(QUERY_DROPZONE, {\n    variables: {\n      dropzoneId,\n      earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n    },\n    fetchPolicy: 'cache-first',\n  });\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: () => null,\n  });\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const userId = currentDropzone?.data?.dropzone?.currentUser?.user?.id;\n    const remoteToken = currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken;\n    const localToken = pushToken;\n\n    if (!currentDropzone.loading && currentDropzone.called) {\n      if (localToken && localToken !== remoteToken) {\n        mutationUpdateUser.mutate({\n          id: Number(userId),\n          pushToken: localToken,\n        });\n      }\n    }\n  }, [\n    pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.id,\n    currentDropzone.loading,\n    currentDropzone.called,\n    mutationUpdateUser,\n  ]);\n\n  return {\n    ...currentDropzone,\n    dropzone: currentDropzone?.data?.dropzone,\n    currentUser: currentDropzone?.data?.dropzone?.currentUser,\n  };\n}\n","export type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = {\n  [K in keyof T]: T[K];\n};\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type AnyResource = object;\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateExtra */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<FieldError[]>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateRigInspection */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateTransaction */\nexport type CreateTransactionInput = {\n  attributes: TransactionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTransaction */\nexport type CreateTransactionPayload = {\n  __typename?: 'CreateTransactionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  transaction?: Maybe<Transaction>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteDropzone */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteLoad */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeletePlane */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteSlot */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteTicket */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  ticketType?: Maybe<TicketType>;\n};\n\nexport type Dropzone = AnyResource & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: JumpType[];\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  dropzoneUsers: DropzoneUserConnection;\n  extras: Extra[];\n  federation: Federation;\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  isPublic: Scalars['Boolean'];\n  lat: Scalars['Float'];\n  lng: Scalars['Float'];\n  loads: LoadConnection;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  planes: Plane[];\n  primaryColor?: Maybe<Scalars['String']>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Rig[]>;\n  roles: UserRole[];\n  secondaryColor?: Maybe<Scalars['String']>;\n  ticketTypes: TicketType[];\n  updatedAt: Scalars['Int'];\n  userRoles: UserRole[];\n};\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Scalars['Int'][];\n};\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['Int']>;\n};\n\nexport type DropzoneDropzoneUsersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  permissions?: Maybe<Permission[]>;\n  search?: Maybe<Scalars['String']>;\n  licensed?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DropzoneLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\nexport type DropzoneRolesArgs = {\n  selectable?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Maybe<DropzoneEdge>[]>;\n  /** A list of nodes. */\n  nodes?: Maybe<Maybe<Dropzone>[]>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  name: Scalars['String'];\n  banner?: Maybe<Scalars['String']>;\n  federationId: Scalars['Int'];\n  isPublic?: Maybe<Scalars['Boolean']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  primaryColor?: Maybe<Scalars['String']>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  isCreditSystemEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DropzoneUser = AnyResource & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Rig[]>;\n  createdAt: Scalars['Int'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  notifications?: Maybe<NotificationConnection>;\n  permissions?: Maybe<Permission[]>;\n  rigInspections?: Maybe<RigInspection[]>;\n  role?: Maybe<UserRole>;\n  transactions?: Maybe<TransactionConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['Int'];\n  user: User;\n};\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\nexport type DropzoneUserTransactionsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Maybe<DropzoneUserEdge>[]>;\n  /** A list of nodes. */\n  nodes?: Maybe<Maybe<DropzoneUser>[]>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  expiresAt?: Maybe<Scalars['Int']>;\n  credits?: Maybe<Scalars['Float']>;\n  userRoleId?: Maybe<Scalars['Int']>;\n};\n\nexport type Extra = {\n  __typename?: 'Extra';\n  cost: Scalars['Int'];\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: TicketType[];\n  updatedAt: Scalars['Int'];\n};\n\nexport type ExtraInput = {\n  name?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  ticketTypeIds?: Maybe<Scalars['Int'][]>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['Int'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FormTemplateInput = {\n  name?: Maybe<Scalars['String']>;\n  definition?: Maybe<Scalars['String']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n};\n\nexport type GhostInput = {\n  name: Scalars['String'];\n  email: Scalars['String'];\n  phone?: Maybe<Scalars['String']>;\n  exitWeight: Scalars['Float'];\n  dropzoneId: Scalars['Int'];\n  roleId: Scalars['Int'];\n  licenseId?: Maybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of GrantPermission */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['Int'];\n  federation?: Maybe<Federation>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  createdAt: Scalars['Int'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Slot[]>;\n  state: LoadState;\n  updatedAt: Scalars['Int'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Maybe<LoadEdge>[]>;\n  /** A list of nodes. */\n  nodes?: Maybe<Maybe<Load>[]>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  isOpen?: Maybe<Scalars['Boolean']>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  pilotId?: Maybe<Scalars['Int']>;\n  planeId?: Maybe<Scalars['Int']>;\n  gcaId?: Maybe<Scalars['Int']>;\n  loadMasterId?: Maybe<Scalars['Int']>;\n  state?: Maybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** open */\n  Open = 'open',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** cancelled */\n  Cancelled = 'cancelled',\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<DropzoneUser[]>;\n  id: Scalars['ID'];\n  loads?: Maybe<Load[]>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createTransaction?: Maybe<CreateTransactionPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteTicketType?: Maybe<DeleteTicketPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userResendConfirmation?: Maybe<UserResendConfirmationPayload>;\n  userSendPasswordReset?: Maybe<UserSendPasswordResetPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userSignUp?: Maybe<UserSignUpPayload>;\n  userUpdatePassword?: Maybe<UserUpdatePasswordPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\nexport type MutationCreateTransactionArgs = {\n  input: CreateTransactionInput;\n};\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\nexport type MutationDeleteTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type MutationUserResendConfirmationArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type MutationUserSendPasswordResetArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type MutationUserSignUpArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmSuccessUrl?: Maybe<Scalars['String']>;\n  phone: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  name: Scalars['String'];\n  licenseId?: Maybe<Scalars['Int']>;\n  pushToken?: Maybe<Scalars['String']>;\n};\n\nexport type MutationUserUpdatePasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  currentPassword?: Maybe<Scalars['String']>;\n};\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<Scalars['String']>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Maybe<NotificationEdge>[]>;\n  /** A list of nodes. */\n  nodes?: Maybe<Maybe<Notification>[]>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  /** updateDropzone */\n  UpdateDropzone = 'updateDropzone',\n  /** deleteDropzone */\n  DeleteDropzone = 'deleteDropzone',\n  /** updateWeatherConditions */\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  /** createLoad */\n  CreateLoad = 'createLoad',\n  /** updateLoad */\n  UpdateLoad = 'updateLoad',\n  /** deleteLoad */\n  DeleteLoad = 'deleteLoad',\n  /** readLoad */\n  ReadLoad = 'readLoad',\n  /** createSlot */\n  CreateSlot = 'createSlot',\n  /** updateSlot */\n  UpdateSlot = 'updateSlot',\n  /** deleteSlot */\n  DeleteSlot = 'deleteSlot',\n  /** createUserSlot */\n  CreateUserSlot = 'createUserSlot',\n  /** createUserSlotWithSelf */\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  /** updateUserSlot */\n  UpdateUserSlot = 'updateUserSlot',\n  /** deleteUserSlot */\n  DeleteUserSlot = 'deleteUserSlot',\n  /** createStudentSlot */\n  CreateStudentSlot = 'createStudentSlot',\n  /** updateStudentSlot */\n  UpdateStudentSlot = 'updateStudentSlot',\n  /** deleteStudentSlot */\n  DeleteStudentSlot = 'deleteStudentSlot',\n  /** createTicketType */\n  CreateTicketType = 'createTicketType',\n  /** updateTicketType */\n  UpdateTicketType = 'updateTicketType',\n  /** deleteTicketType */\n  DeleteTicketType = 'deleteTicketType',\n  /** createExtra */\n  CreateExtra = 'createExtra',\n  /** updateExtra */\n  UpdateExtra = 'updateExtra',\n  /** deleteExtra */\n  DeleteExtra = 'deleteExtra',\n  /** readExtra */\n  ReadExtra = 'readExtra',\n  /** createPlane */\n  CreatePlane = 'createPlane',\n  /** updatePlane */\n  UpdatePlane = 'updatePlane',\n  /** deletePlane */\n  DeletePlane = 'deletePlane',\n  /** createRig */\n  CreateRig = 'createRig',\n  /** updateRig */\n  UpdateRig = 'updateRig',\n  /** deleteRig */\n  DeleteRig = 'deleteRig',\n  /** readRig */\n  ReadRig = 'readRig',\n  /** createDropzoneRig */\n  CreateDropzoneRig = 'createDropzoneRig',\n  /** updateDropzoneRig */\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  /** deleteDropzoneRig */\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  /** readDropzoneRig */\n  ReadDropzoneRig = 'readDropzoneRig',\n  /** readPermissions */\n  ReadPermissions = 'readPermissions',\n  /** updatePermissions */\n  UpdatePermissions = 'updatePermissions',\n  /** createPackjob */\n  CreatePackjob = 'createPackjob',\n  /** updatePackjob */\n  UpdatePackjob = 'updatePackjob',\n  /** deletePackjob */\n  DeletePackjob = 'deletePackjob',\n  /** readPackjob */\n  ReadPackjob = 'readPackjob',\n  /** createFormTemplate */\n  CreateFormTemplate = 'createFormTemplate',\n  /** updateFormTemplate */\n  UpdateFormTemplate = 'updateFormTemplate',\n  /** deleteFormTemplate */\n  DeleteFormTemplate = 'deleteFormTemplate',\n  /** readFormTemplate */\n  ReadFormTemplate = 'readFormTemplate',\n  /** readUser */\n  ReadUser = 'readUser',\n  /** updateUser */\n  UpdateUser = 'updateUser',\n  /** deleteUser */\n  DeleteUser = 'deleteUser',\n  /** createUser */\n  CreateUser = 'createUser',\n  /** actAsPilot */\n  ActAsPilot = 'actAsPilot',\n  /** actAsLoadMaster */\n  ActAsLoadMaster = 'actAsLoadMaster',\n  /** actAsGCA */\n  ActAsGca = 'actAsGCA',\n  /** actAsDZSO */\n  ActAsDzso = 'actAsDZSO',\n  /** actAsRigInspector */\n  ActAsRigInspector = 'actAsRigInspector',\n  /** createUserTransaction */\n  CreateUserTransaction = 'createUserTransaction',\n  /** readUserTransactions */\n  ReadUserTransactions = 'readUserTransactions',\n  /** grantPermission */\n  GrantPermission = 'grantPermission',\n  /** revokePermission */\n  RevokePermission = 'revokePermission',\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots?: Maybe<Scalars['Int']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type PlaneInput = {\n  name?: Maybe<Scalars['String']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  hours?: Maybe<Scalars['Int']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get dropzone details */\n  dropzone: Dropzone;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get ticket addons for a dropzone */\n  extras: Extra[];\n  /** Available federations */\n  federations: Federation[];\n  /** Load base64 images as graphql */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: JumpType[];\n  /** Get all licenses for a federation */\n  licenses: License[];\n  /** Get load by id */\n  load: Load;\n  /** Get loads */\n  loads: LoadConnection;\n  /** Get planes from a dropzone */\n  planes: Plane[];\n  /** Get ticket types for a dropzone */\n  ticketTypes: TicketType[];\n  userCheckPasswordToken: User;\n  userConfirmAccount: User;\n};\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['Int'];\n};\n\nexport type QueryDropzonesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\nexport type QueryExtrasArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\nexport type QueryJumpTypesArgs = {\n  allowedForUserId?: Maybe<Scalars['Int']>;\n};\n\nexport type QueryLicensesArgs = {\n  federationId?: Maybe<Scalars['Int']>;\n};\n\nexport type QueryLoadArgs = {\n  id: Scalars['Int'];\n};\n\nexport type QueryLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  dropzoneId: Scalars['Int'];\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\nexport type QueryPlanesArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\nexport type QueryTicketTypesArgs = {\n  dropzoneId: Scalars['Int'];\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n};\n\nexport type QueryUserCheckPasswordTokenArgs = {\n  resetPasswordToken: Scalars['String'];\n  redirectUrl?: Maybe<Scalars['String']>;\n};\n\nexport type QueryUserConfirmAccountArgs = {\n  confirmationToken: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of RevokePermission */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n  user?: Maybe<User>;\n};\n\nexport type RigInput = {\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  maintainedAt?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  canopySize?: Maybe<Scalars['Int']>;\n};\n\nexport type RigInspection = {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['Int'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type RigInspectionInput = {\n  dropzoneId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  definition?: Maybe<Scalars['String']>;\n  isOk?: Maybe<Scalars['Boolean']>;\n};\n\nexport type Slot = AnyResource & {\n  __typename?: 'Slot';\n  createdAt: Scalars['Int'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Extra[]>;\n  groupNumber: Scalars['Int'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  user?: Maybe<User>;\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\nexport type SlotInput = {\n  dropzoneUserId?: Maybe<Scalars['Int']>;\n  ticketTypeId?: Maybe<Scalars['Int']>;\n  jumpTypeId?: Maybe<Scalars['Int']>;\n  loadId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n  extraIds?: Maybe<Scalars['Int'][]>;\n  userGroup?: Maybe<SlotUser[]>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type SlotUser = {\n  id: Scalars['Int'];\n  exitWeight: Scalars['Float'];\n  rigId?: Maybe<Scalars['Int']>;\n};\n\nexport type TicketType = AnyResource & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost?: Maybe<Scalars['Float']>;\n  createdAt: Scalars['Int'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Extra[];\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type TicketTypeInput = {\n  currency?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  altitude?: Maybe<Scalars['Int']>;\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  isTandem?: Maybe<Scalars['Boolean']>;\n  extraIds?: Maybe<Scalars['Int'][]>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser: DropzoneUser;\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Transaction. */\nexport type TransactionConnection = {\n  __typename?: 'TransactionConnection';\n  /** A list of edges. */\n  edges?: Maybe<Maybe<TransactionEdge>[]>;\n  /** A list of nodes. */\n  nodes?: Maybe<Maybe<Transaction>[]>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type TransactionEdge = {\n  __typename?: 'TransactionEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Transaction>;\n};\n\nexport type TransactionInput = {\n  status?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  dropzoneUserId?: Maybe<Scalars['Int']>;\n  amount?: Maybe<Scalars['Float']>;\n};\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  id: Scalars['Int'];\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzone */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateExtra */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<FieldError[]>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  id: Scalars['Int'];\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateLoad */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateNotification */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  id: Scalars['Int'];\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdatePlane */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  permission: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRole */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  id: Scalars['Int'];\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateSlot */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  id: Scalars['Int'];\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateTicket */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateUser */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n  user?: Maybe<User>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  createdAt: Scalars['Int'];\n  dropzoneUsers?: Maybe<DropzoneUser[]>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  jumpTypes?: Maybe<JumpType[]>;\n  license?: Maybe<License>;\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Rig[]>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type UserInput = {\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n};\n\n/** Autogenerated return type of UserLogin */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserResendConfirmation */\nexport type UserResendConfirmationPayload = {\n  __typename?: 'UserResendConfirmationPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Scalars['String'][];\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserSendPasswordReset */\nexport type UserSendPasswordResetPayload = {\n  __typename?: 'UserSendPasswordResetPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSignUp */\nexport type UserSignUpPayload = {\n  __typename?: 'UserSignUpPayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Scalars['String'][]>;\n  fieldErrors?: Maybe<FieldError[]>;\n};\n\n/** Autogenerated return type of UserUpdatePassword */\nexport type UserUpdatePasswordPayload = {\n  __typename?: 'UserUpdatePasswordPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['Int'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['Int'];\n  winds?: Maybe<Wind[]>;\n};\n\nexport type WeatherConditionInput = {\n  winds?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['Int']>;\n  jumpRun?: Maybe<Scalars['Int']>;\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['String']>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n};\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { Permission } from '../api/schema';\nimport { useAppSelector } from '../state';\n\nexport const QUERY_PERMISSIONS = gql`\n  query QueryPermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n      primaryColor\n      secondaryColor\n\n      currentUser {\n        id\n        role {\n          id\n          name\n        }\n        permissions\n      }\n    }\n  }\n`;\n\nexport default function useRestriction(permission: Permission): boolean {\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery(QUERY_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  const permissions = data?.dropzone?.currentUser?.permissions || [];\n  return permissions?.includes(permission as any) || false;\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: DropzoneUser): void;\n}\n\nexport const QUERY_PERMISSION_USER = gql`\n  query QueryGCAUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color, backgroundColor, onSelect, value } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PERMISSION_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: ['actAsGCA'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"radio-handheld\"\n          selectedColor={color}\n          onPress={() => setMenuOpen(true)}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n        >\n          {value?.id ? value?.user?.name : 'No gca'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`gca-chip-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge?.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { Chip, Menu } from 'react-native-paper';\nimport { Slot, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\n\ninterface ILoadMasterChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: Slot[];\n  onSelect(user: DropzoneUser): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color, backgroundColor, value, onSelect, slots } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"shield-account\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No loadmaster'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-account\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No loadmaster'}\n        </Chip>\n      }\n    >\n      {slots?.map((slot) => (\n        <Menu.Item\n          key={`lm-chip-${slot.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (slot?.dropzoneUser) {\n              onSelect(slot.dropzoneUser);\n            }\n          }}\n          title={slot?.dropzoneUser?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: DropzoneUser | null;\n  onSelect(user: DropzoneUser): void;\n}\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryPilotUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color, backgroundColor, onSelect, value } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n      permissions: ['actAsPilot'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No pilot'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No pilot'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`pilot-select-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu } from 'react-native-paper';\nimport { Plane, Permission, Query } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPlaneChipSelect {\n  value?: Plane | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QueryChipPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color, backgroundColor, value, onSelect } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"airplane-takeoff\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n      }}\n      textStyle={{\n        color,\n        fontSize: small ? 12 : undefined,\n      }}\n    >\n      {value?.name || 'No plane'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.name || 'No plane'}\n        </Chip>\n      }\n    >\n      {data?.planes?.map((plane) => (\n        <Menu.Item\n          key={`lm-plane-chip-${plane.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(plane as Plane);\n          }}\n          title={plane.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Badge, Card, Chip } from 'react-native-paper';\nimport { ViewProps } from '../../../components/Themed';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlotCardProps {\n  slot: Slot;\n  style?: ViewProps['style'];\n  onPress?(slot: Slot): void;\n  onDelete?(slot: Slot): void;\n}\n\nexport default function SlotCard(props: ISlotCardProps) {\n  const { slot, onPress, onDelete, style } = props;\n\n  return (\n    <Card\n      onPress={() => onPress?.(slot)}\n      elevation={3}\n      style={StyleSheet.flatten([{ margin: 12, height: 150, width: '100%' }, style])}\n    >\n      <Card.Title\n        title={slot?.dropzoneUser?.user.name}\n        left={() =>\n          slot?.dropzoneUser?.user?.image ? (\n            <Avatar.Image source={{ uri: slot?.dropzoneUser?.user.image }} size={24} />\n          ) : (\n            <Avatar.Icon icon=\"account\" size={24} />\n          )\n        }\n        right={() =>\n          !onDelete ? null : (\n            <Badge\n              style={{ marginTop: -45, marginRight: -5 }}\n              onPress={(e) => {\n                e.preventDefault();\n                onDelete?.(slot);\n              }}\n            >\n              -\n            </Badge>\n          )\n        }\n      />\n      <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        <Chip\n          style={{ margin: 2, height: 25, padding: 0, alignItems: 'center' }}\n          textStyle={{ fontSize: 12 }}\n          icon=\"lock\"\n          mode=\"outlined\"\n          disabled\n        >\n          {slot?.dropzoneUser?.role?.name}\n        </Chip>\n        <Chip\n          style={{ margin: 2, height: 25, padding: 0, alignItems: 'center' }}\n          textStyle={{ fontSize: 12 }}\n          icon=\"ticket-account\"\n          mode=\"outlined\"\n          disabled\n        >\n          {slot?.dropzoneUser?.user?.license?.name}\n        </Chip>\n        <Chip\n          style={{ margin: 2, height: 25, padding: 0, alignItems: 'center' }}\n          textStyle={{ fontSize: 12 }}\n          icon=\"human-handsup\"\n          mode=\"outlined\"\n          disabled\n        >\n          {slot?.jumpType?.name}\n        </Chip>\n        <Chip\n          style={{ margin: 2, height: 25, padding: 0, alignItems: 'center' }}\n          textStyle={{ fontSize: 12 }}\n          icon=\"arrow-up-bold\"\n          mode=\"outlined\"\n          disabled\n        >\n          {slot?.ticketType?.name}\n        </Chip>\n        {!slot.wingLoading ? null : (\n          <Chip\n            style={{ margin: 2, height: 25, padding: 0, alignItems: 'center' }}\n            textStyle={{ fontSize: 12 }}\n            icon=\"escalator-down\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot.wingLoading.toFixed(2)}\n          </Chip>\n        )}\n      </Card.Content>\n    </Card>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema';\n\nconst MUTATION_UPDATE_LOAD = gql`\n  mutation UpdateLoad(\n    $id: Int!\n    $pilotId: Int\n    $gcaId: Int\n    $planeId: Int\n    $isOpen: Boolean\n    $loadMasterId: Int\n    $dispatchAt: Int\n    $hasLanded: Boolean\n  ) {\n    updateLoad(\n      input: {\n        id: $id\n        attributes: {\n          pilotId: $pilotId\n          gcaId: $gcaId\n          planeId: $planeId\n          isOpen: $isOpen\n          loadMasterId: $loadMasterId\n          dispatchAt: $dispatchAt\n          hasLanded: $hasLanded\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        createdAt\n        loadNumber\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          exitWeight\n\n          passengerName\n          passengerExitWeight\n\n          user {\n            id\n            name\n          }\n          ticketType {\n            id\n            name\n            altitude\n            isTandem\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(MUTATION_UPDATE_LOAD, {\n  getPayload: (result) => result.updateLoad,\n  fieldErrorMap: {\n    pilotId: 'pilot',\n    gcaId: 'gca',\n    planeId: 'plane',\n    loadMasterId: 'loadMaster',\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal } from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\n\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nimport { Load, Permission, LoadState } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../../state';\n\ninterface ILoadActionButtonProps {\n  load: Load;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    await mutationUpdateLoad.mutate({\n      id: Number(load.id),\n      hasLanded: true,\n      state: LoadState.Landed,\n    });\n  }, [mutationUpdateLoad, load]);\n\n  const onManifest = React.useCallback(() => {\n    if (!currentUser?.hasLicense) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You need to select a license on your user profile',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasMembership) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your membership is out of date',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasRigInspection) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your rig needs to be inspected before manifesting',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasReserveInDate) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your rig needs a reserve repack',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasExitWeight) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Update your exit weight on your profile before manifesting',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasCredits) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You have no credits on your account',\n          variant: 'warning',\n        })\n      );\n    }\n\n    dispatch(actions.forms.manifest.setOpen(true));\n    dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n    dispatch(actions.forms.manifest.setField(['load', load]));\n    return null;\n  }, [currentUser, dispatch, load]);\n\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const createCallAction = React.useCallback(\n    (minutes: number | null) => () => {\n      setExpanded(false);\n      updateCall(minutes);\n    },\n    [updateCall]\n  );\n\n  const callActions = [\n    {\n      label: '20 minute call',\n      onPress: createCallAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createCallAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createCallAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const manifestActions = [\n    !showManifestButton\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => onManifest(),\n        },\n    !showGroupIcon\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createCallAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: () => updateLoadState(LoadState.Cancelled),\n        },\n    ![LoadState.Cancelled].includes(load.state)\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: () => onLanded(),\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...([LoadState.Open].includes(load?.state) ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 32,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\nimport isAfter from 'date-fns/isAfter';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n});\n\ninterface ICountdownProps {\n  end: Date;\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              ['#004777', fractionTwentyMinutes],\n              ['#F7B801', fractionTenMinutes],\n              ['#A30000', fractionFiveMinutes],\n            ]\n          : [['#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title } from 'react-native-paper';\n\nimport { isAfter } from 'date-fns/esm';\nimport { useAppSelector } from '../../../state';\nimport { Load } from '../../../api/schema';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: Load;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, onEdit, canEdit, children } = props;\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.primary }]}>\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.surface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown end={new Date(load.dispatchAt * 1000)} size={80} />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"shield-airplane\"\n              color={theme.colors.primary}\n              style={{ backgroundColor: theme.colors.surface }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 48,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          <>\n            <View\n              style={{ flex }}\n              // eslint-disable-next-line react/no-array-index-key\n              key={`info-grid-${i}`}\n            >\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n    backgroundColor: 'white',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n    backgroundColor: 'white',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import { DocumentNode, useQuery } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport { Query } from './schema';\nimport { actions, useAppDispatch } from '../state';\n\nexport interface IAppQuery<Payload, InputType> {\n  data: Maybe<Payload>;\n  loading: boolean;\n  refetch(variables?: InputType): void;\n}\n\nexport interface IAppQueryProps<InputType> {\n  onError?(message: string): void;\n  pollInterval?: number;\n  showSnackbarErrors?: boolean;\n  variables?: InputType;\n}\n\nexport function createQuery<\n  Payload extends Maybe<Record<string, unknown>>,\n  InputType extends object\n>(\n  query: DocumentNode,\n  options: {\n    getPayload(query?: Query): Maybe<Payload>;\n  }\n) {\n  const { getPayload } = options;\n\n  return function useAppQuery(opts: IAppQueryProps<InputType>): IAppQuery<Payload, InputType> {\n    const { variables, pollInterval, onError } = opts;\n    const dispatch = useAppDispatch();\n\n    const { data, loading, refetch, error } = useQuery(query, {\n      variables,\n      pollInterval,\n    });\n\n    const transformedData = React.useMemo(() => getPayload(data), [data]);\n\n    React.useEffect(() => {\n      if (error?.message) {\n        if (opts.showSnackbarErrors !== false) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n\n        onError?.(error.message);\n      }\n    }, [opts.onError, error?.message, opts.showSnackbarErrors, onError, dispatch]);\n\n    return {\n      loading,\n      data: transformedData,\n      refetch,\n    };\n  };\n}\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_LOAD = gql`\n  query QueryLoad($id: Int!) {\n    load(id: $id) {\n      id\n      name\n      createdAt\n      dispatchAt\n      hasLanded\n      maxSlots\n      loadNumber\n      isFull\n      state\n      isOpen\n      plane {\n        id\n        maxSlots\n        name\n      }\n      gca {\n        id\n        user {\n          id\n          name\n        }\n      }\n      pilot {\n        id\n        user {\n          id\n          name\n        }\n      }\n      loadMaster {\n        id\n        user {\n          id\n          name\n        }\n      }\n      slots {\n        id\n        createdAt\n        exitWeight\n        passengerName\n        passengerExitWeight\n        wingLoading\n        dropzoneUser {\n          id\n          role {\n            id\n            name\n          }\n          user {\n            id\n            name\n            exitWeight\n            license {\n              id\n              name\n            }\n          }\n        }\n        ticketType {\n          id\n          name\n          altitude\n          isTandem\n\n          extras {\n            id\n            name\n            cost\n          }\n        }\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['load'],\n  {\n    id: number;\n  }\n>(QUERY_LOAD, {\n  getPayload: (query) => query?.load,\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { DeleteSlotInput, DeleteSlotPayload } from '../schema';\n\nconst MUTATION_DELETE_SLOT = gql`\n  mutation DeleteSlot($id: Int!) {\n    deleteSlot(input: { id: $id }) {\n      slot {\n        id\n\n        dropzoneUser {\n          id\n          user {\n            id\n            name\n          }\n        }\n        load {\n          id\n          slots {\n            id\n            createdAt\n            exitWeight\n\n            passengerName\n            passengerExitWeight\n\n            user {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n              altitude\n              isTandem\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<DeleteSlotInput, DeleteSlotPayload>(MUTATION_DELETE_SLOT, {\n  getPayload: (result) => result.deleteSlot,\n});\n","import * as React from 'react';\nimport { Dimensions, RefreshControl, useWindowDimensions } from 'react-native';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-paper';\n\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../components/chips/PilotChip';\nimport PlaneChip from '../../../components/chips/PlaneChip';\n\nimport { View } from '../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser, LoadState } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../../state';\nimport SlotCard from './SlotCard';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\nimport useQueryLoad from '../../../api/hooks/useQueryLoad';\nimport useMutationDeleteSlot from '../../../api/hooks/useMutationDeleteSlot';\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\n\nfunction AvailableSlotCard({ width }: { width: number }) {\n  return (\n    <Card\n      style={{\n        height: 150,\n        opacity: 0.5,\n        margin: 12,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      elevation={3}\n    >\n      <Card.Title\n        title=\"Available\"\n        style={{ alignSelf: 'center', justifyContent: 'center' }}\n        titleStyle={{ textAlign: 'center' }}\n      />\n    </Card>\n  );\n}\n\nfunction SlotSkeleton({ width }: { width: number }) {\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 150,\n        width,\n        margin: 12,\n      }}\n      layout={[{ key: 'user-card-container', height: 150, width }]}\n    />\n  );\n}\n\nexport default function LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const route = useRoute<{ key: string; name: string; params: { load: Load } }>();\n\n  const {\n    data: detailedLoad,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(route.params.load.id),\n    },\n    pollInterval: 30000,\n  });\n\n  const load = detailedLoad || route.params.load;\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const navigation = useNavigation();\n\n  const slots: (Slot | 2)[] = Array.from({\n    length: load?.maxSlots || 0,\n  }).map((_, index) => ((load?.slots?.length || 0) > index ? (load.slots as Slot[])[index] : 2));\n\n  const maxSlots = load?.maxSlots || load?.plane?.maxSlots || 0;\n  const occupiedSlots = load?.slots?.length || 0;\n\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 380;\n  const padding = 24;\n  const numColumns = Math.floor(width / (cardWidth + padding)) || 1;\n  const contentWidth = (cardWidth + padding) * numColumns + padding;\n\n  const initialLoading = !detailedLoad?.slots?.length && loading;\n\n  return (\n    <View style={{ flexGrow: 1 }}>\n      <Header load={load}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ marginVertical: 8 }}>\n          <PlaneChip\n            value={load?.plane}\n            onSelect={async (plane) => {\n              if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'warning',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n            small\n            backgroundColor=\"transparent\"\n            color=\"white\"\n          />\n          <GCAChip\n            value={load?.gca}\n            onSelect={updateGCA}\n            small\n            backgroundColor=\"transparent\"\n            color=\"white\"\n          />\n          <PilotChip\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n            backgroundColor=\"transparent\"\n            color=\"white\"\n          />\n          <LoadMasterChip\n            value={load?.loadMaster}\n            slots={load.slots || []}\n            onSelect={updateLoadMaster}\n            small\n            backgroundColor=\"transparent\"\n            color=\"white\"\n          />\n        </ScrollView>\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      <FlatList\n        testID=\"slots\"\n        keyExtractor={(item, idx) => `slot-${item?.id || idx}`}\n        style={{ flex: 1, height: Dimensions.get('window').height }}\n        contentContainerStyle={{\n          width: contentWidth,\n          alignSelf: 'center',\n          justifyContent: 'space-evenly',\n          paddingBottom: 100,\n        }}\n        numColumns={numColumns}\n        horizontal={false}\n        data={!initialLoading ? slots : [1, 1, 1, 1, 1, 1, 1, 1]}\n        refreshing={loading}\n        onRefresh={refetch}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n        renderItem={({ item: node, index }) => {\n          if (node === 1) {\n            return <SlotSkeleton width={cardWidth} />;\n          }\n\n          return node === 2 ? (\n            <AvailableSlotCard key={`empty-slot-${index}`} width={cardWidth} />\n          ) : (\n            <SlotCard\n              style={{ width: cardWidth }}\n              key={`slot-${node.id}`}\n              slot={node}\n              onDelete={\n                (currentUser?.id === node.dropzoneUser.id && canRemoveSelf) || canRemoveOthers\n                  ? onDeleteSlot\n                  : undefined\n              }\n              onPress={(slot) => {\n                const slotGroup = load?.slots?.filter(\n                  ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n                );\n                const onSlotGroupPress = () => {\n                  if (slotGroup) {\n                    dispatch(actions.forms.manifestGroup.reset());\n                    dispatch(actions.forms.manifestGroup.setFromSlots(slotGroup));\n                    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n                    navigation.navigate('ManifestGroupScreen');\n                  }\n                };\n                const onSlotPress = () => {\n                  dispatch(actions.forms.manifest.setOpen(slot));\n                  dispatch(actions.forms.manifest.setField(['load', load]));\n                };\n\n                if (slot.user?.id === currentUser?.id) {\n                  if (canEditSelf) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress();\n                    } else {\n                      onSlotPress();\n                    }\n                  }\n                } else if (canEditOthers) {\n                  if (slotGroup?.length) {\n                    onSlotGroupPress();\n                  } else {\n                    onSlotPress();\n                  }\n                }\n              }}\n            />\n          );\n        }}\n      />\n      <ActionButton load={load} />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  return (\n    <WizardContext.Provider\n      value={{\n        index,\n        count,\n        setIndex: (idx) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          ref.current?.scrollToIndex({ index: idx, animated: true });\n        },\n      }}\n    >\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[styles.content, contentContainerStyle]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              console.log('onNext with index', index);\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput } from 'react-native-paper';\nimport { Wind } from '../../../api/schema';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={styles.altitudeOption}>{altitude?.toString()}</Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n  }, [jumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setJumpRun(state.fields.temperature.value);\n    }\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, temperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"position\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card style={styles.temperatureCard} elevation={3}>\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={styles.textField}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={styles.textField}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds}\n        keyExtractor={({ item }, index) => `wind.${index}`}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../../components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","import * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// eslint-disable-next-line import/no-unresolved\nimport { GOOGLE_MAPS_WEB } from '@env';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { calculateLatLngDelta } from '../../utils/calculateLatLngDelta';\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const { width, height, position, children, center, coords, shape, interactive, onDragEnd } =\n    props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_WEB,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        const location = await Location.getCurrentPositionAsync({});\n        const lat = coords?.lat || location.coords.latitude;\n        const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds();\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n      }\n    },\n    [coords?.lat, coords?.lng]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const delayedPanningTimer = React.useRef<ReturnType<typeof setTimeout>>();\n\n  const panDelayed = React.useCallback((lat: number, lng: number) => {\n    if (delayedPanningTimer) {\n      clearTimeout(delayedPanningTimer.current);\n      delayedPanningTimer.current = null;\n    }\n    return;\n    if (map.current?.panTo) {\n      console.log('PANNING', lat, lng);\n      map.current?.panTo?.({ lat, lng });\n\n      const latDelta = calculateLatLngDelta(lat, 0.5);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds(\n        { lat: lat - latDelta, lng: lng - latDelta },\n        { lat: lat + latDelta, lng: lng + latDelta }\n      );\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    } else {\n      console.log('DELAYING PANNING TO ', lat, lng, map.current);\n      delayedPanningTimer.current = setTimeout(() => panDelayed(lat, lng), 500);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (center) {\n      console.log({ center, coords });\n      panDelayed(center.lat, center.lng);\n    }\n  }, [center, coords, panDelayed]);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  return !isLoaded ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        // provider={PROVIDER_GOOGLE}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          mapTypeControl: false,\n          zoomControl: false,\n          mapTypeId: 'satellite',\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport JumpRunSelector from '../../../../components/input/jump_run_select/JumpRunSelect';\n\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport JumpRunSelector from '../../../components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    dispatch,\n  ]);\n\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB style={styles.fab} small icon=\"check\" onPress={() => onSaveConditions()} label=\"Save\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../components/forms/weather_conditions/WeatherConditionForm';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [mutationCreateWeatherConditions, state, dropzoneId, navigation, dispatch]);\n\n  return (\n    <ScrollableScreen style={{ backgroundColor: '#F4F5F5' }}>\n      <WeatherConditionForm onPressJumpRun={() => navigation.navigate('JumpRunScreen')} />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          disabled={mutationCreateWeatherConditions.loading}\n          style={styles.button}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, Button } from 'react-native-paper';\nimport { View, StyleSheet } from 'react-native';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  return (\n    <View style={styles.warning}>\n      <Paragraph style={{ color: 'white', flex: 7 / 10, flexGrow: 2 }}>{title}</Paragraph>\n      {!action ? null : (\n        <Button onPress={action} style={{ flex: 1 / 10, flexShrink: 1 }}>\n          Fix\n        </Button>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning title=\"Your reserve repack is due. You cannot manifest if your repack is out of date.\" />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 32,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, Menu, IconButton, Divider, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { Query } from '../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\nimport SetupWarning from './SetupWarning';\n\nconst QUERY_CURRENT_USER = gql`\n  query QueryDropzone($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      isCreditSystemEnabled\n\n      currentUser {\n        id\n        credits\n        expiresAt\n\n        rigInspections {\n          id\n          rig {\n            id\n            repackExpiresAt\n          }\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          rigs {\n            id\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { navigation, previous, scene, hideWarnings } = props;\n  const [contextMenuOpen, setContextMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [loadData, { data, loading }] = useLazyQuery<Query>(QUERY_CURRENT_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      loadData();\n    }\n  }, [loadData, currentDropzoneId]);\n\n  return (\n    <>\n      <Appbar.Header>\n        {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n\n        {scene.descriptor.options.headerRight ? (\n          scene.descriptor.options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip mode=\"outlined\">{`$${data?.dropzone?.currentUser?.credits || 0}`}</Chip>\n        )}\n        <Menu\n          onDismiss={() => setContextMenuOpen(false)}\n          visible={contextMenuOpen}\n          anchor={\n            <IconButton\n              icon=\"dots-vertical\"\n              color=\"#FFFFFF\"\n              onPress={() => setContextMenuOpen(true)}\n            />\n          }\n        >\n          <Menu.Item\n            title=\"Change dropzone\"\n            icon=\"radar\"\n            onPress={() => {\n              navigation.replace('DropzonesScreen');\n              setContextMenuOpen(false);\n            }}\n          />\n          <Divider />\n          <Menu.Item\n            title=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              setContextMenuOpen(false);\n            }}\n          />\n        </Menu>\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={data?.dropzone?.currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!data?.dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!data?.dropzone?.currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!data?.dropzone?.currentUser?.expiresAt &&\n            data?.dropzone?.currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!data?.dropzone?.currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = data.dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!data?.dropzone?.currentUser?.rigInspections?.length}\n          isRigSetUp={!!data?.dropzone?.currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            const currentUser = data?.dropzone?.currentUser;\n\n            if (currentUser) {\n              dispatch(actions.forms.user.setOpen(currentUser.user));\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOpen(currentUser.user.rigs[0]));\n              }\n\n              dispatch(actions.forms.userWizard.setOpen(currentUser.user));\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { isEqual, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Chip } from 'react-native-paper';\n\ninterface IChipSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  icon?: string;\n  isSelected?(item: T): boolean;\n  isDisabled(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends Record<string, unknown> | string>(props: IChipSelect<T>) {\n  const {\n    items,\n    selected,\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChangeSelected,\n    autoSelectFirst,\n  } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, items, autoSelectFirst, onChangeSelected]);\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n      {items.map((item) => (\n        <Chip\n          key={JSON.stringify(item)}\n          mode=\"outlined\"\n          icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n          style={{ margin: 1 }}\n          disabled={isDisabled(item)}\n          selected={isSelected ? isSelected(item) : selected.some((value) => isEqual(item, value))}\n          onPress={() =>\n            onChangeSelected(\n              selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n            )\n          }\n        >\n          {renderItemLabel(item)}\n        </Chip>\n      ))}\n    </View>\n  );\n}\n\nexport default ChipSelect;\n","import * as React from 'react';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpType | null;\n  userId?: number | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: JumpType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  { jumpTypes: JumpType[]; allowedJumpTypes: JumpType[] },\n  {\n    dropzoneId: number;\n    userIds: number[];\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypes({\n    variables: {\n      userIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: Number(currentDropzoneId),\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={\n          uniqBy([...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])], ({ id }) => id) ||\n          []\n        }\n        selected={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { TicketType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketType | null;\n  onlyPublicTickets?: boolean;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: TicketType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES = gql`\n  query DropzoneUsersAllowedTicketTypes($dropzoneId: Int!, $onlyPublicTickets: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      ticketTypes(isPublic: $onlyPublicTickets) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst useTicketTypes = createQuery<\n  { ticketTypes: TicketType[] },\n  {\n    dropzoneId: number;\n    onlyPublicTickets?: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES, {\n  getPayload: (query) => ({\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n  }),\n});\n\nexport default function TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onSelect, onlyPublicTickets } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useTicketTypes({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        selected={[value].filter(Boolean) as TicketType[]}\n        renderItemLabel={(ticketType) => ticketType?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport { Rig, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRigSelect {\n  dropzoneId?: number;\n  userId?: number;\n  value?: Rig | null;\n  required?: boolean;\n  autoSelectFirst?: boolean;\n  onSelect(rig: Rig): void;\n}\n\nconst QUERY_RIGS = gql`\n  query QueryAvailableRigs($dropzoneId: Int!, $userId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      dropzoneUser(userId: $userId) {\n        id\n        availableRigs {\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigSelect(props: IRigSelect) {\n  const { userId, value, required, autoSelectFirst, onSelect, dropzoneId } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [fetchRigs, { data }] = useLazyQuery<Query>(QUERY_RIGS);\n\n  React.useEffect(() => {\n    if (userId && dropzoneId) {\n      fetchRigs({\n        variables: {\n          dropzoneId: currentDropzoneId,\n          userId: Number(userId),\n        },\n      });\n    }\n  }, [userId, dropzoneId, fetchRigs, currentDropzoneId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.dropzone?.dropzoneUser?.availableRigs?.length) {\n      onSelect(data.dropzone.dropzoneUser.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.dropzone.dropzoneUser?.availableRigs, onSelect, value]);\n\n  return (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <List.Item\n          onPress={() => {\n            setMenuOpen(true);\n          }}\n          title={\n            value\n              ? `${value?.make} ${value?.model} (${value?.canopySize || '?'}sqft)`\n              : 'Select rig'\n          }\n          description={!required ? 'Optional' : null}\n          left={() => <List.Icon icon=\"parachute\" />}\n        />\n      }\n    >\n      {data?.dropzone?.dropzoneUser?.availableRigs?.map((rig) => (\n        <Menu.Item\n          key={`rig-select-${rig.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(rig);\n          }}\n          style={{ width: '100%' }}\n          title={`${rig?.make} ${rig?.model} (${rig?.canopySize} sqft) ${\n            !rig.user ? '[DROPZONE RIG]' : ''\n          }`}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { TextInput, HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Permission } from '../../../api/schema.d';\nimport JumpTypeChipSelect from '../../input/chip_select/JumpTypeChipSelect';\nimport TicketTypeChipSelect from '../../input/chip_select/TicketTypeChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function ManifestForm() {\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.manifest);\n  React.useEffect(() => {\n    if (state.fields.dropzoneUser?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.manifest.setField([\n            'exitWeight',\n            Number(state.fields.dropzoneUser?.value?.user?.exitWeight || 60),\n          ])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.dropzoneUser.value.user?.rigs?.length) {\n        dispatch(\n          actions.forms.manifest.setField(['rig', state.fields.dropzoneUser?.value?.user.rigs[0]])\n        );\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.dropzoneUser.value,\n    state.fields.dropzoneUser.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.rig.value,\n  ]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n\n  return (\n    <>\n      <JumpTypeChipSelect\n        value={state.fields.jumpType.value}\n        userId={Number(state?.fields?.dropzoneUser?.value?.user?.id) || null}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['jumpType', value]))}\n      />\n      <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n        {state.fields.jumpType.error || ''}\n      </HelperText>\n\n      <TicketTypeChipSelect\n        value={state.fields.ticketType.value}\n        onlyPublicTickets={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['ticketType', value]))}\n      />\n      <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n        {state.fields.ticketType.error || ''}\n      </HelperText>\n\n      {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n        <List.Subheader>Ticket addons</List.Subheader>\n      )}\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n          <Chip\n            selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                ? () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                      ])\n                    )\n                : () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        [...(state?.fields?.extras?.value || []), extra],\n                      ])\n                    )\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        ))}\n      </ScrollView>\n      <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n        {state.fields.extras.error || ''}\n      </HelperText>\n      <Divider />\n      {!state.fields.dropzoneUser ? null : (\n        <RigSelect\n          value={state.fields.rig.value}\n          userId={Number(state.fields.dropzoneUser?.value?.user?.id)}\n          dropzoneId={Number(currentDropzone?.dropzone?.id)}\n          onSelect={(value) => dispatch(actions.forms.manifest.setField(['rig', value]))}\n        />\n      )}\n      <HelperText type={state.fields.rig.error ? 'error' : 'info'}>\n        {state.fields.rig.error || ''}\n      </HelperText>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || ''}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.manifest.setField(['exitWeight', Number(newValue)]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      {!state.fields.ticketType.value?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger name\"\n            error={!!state.fields.passengerName.error}\n            value={state.fields.passengerName?.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerName', newValue]))\n            }\n          />\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger exit weight\"\n            error={!!state.fields.passengerExitWeight.error}\n            value={state.fields.passengerExitWeight.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerExitWeight', Number(newValue)]))\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotForm from '../../forms/manifest/ManifestForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOT = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $rigId: Int\n    $ticketTypeId: Int\n    $dropzoneUserId: Int\n    $exitWeight: Float\n    $passengerName: String\n    $passengerExitWeight: Float\n  ) {\n    createSlot(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          rigId: $rigId\n          ticketTypeId: $ticketTypeId\n          dropzoneUserId: $dropzoneUserId\n          exitWeight: $exitWeight\n          passengerExitWeight: $passengerExitWeight\n          passengerName: $passengerName\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      slot {\n        id\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n        exitWeight\n        load {\n          id\n          name\n          createdAt\n          dispatchAt\n          hasLanded\n          maxSlots\n          isFull\n          isOpen\n          plane {\n            id\n            name\n          }\n          gca {\n            id\n            user {\n              id\n              name\n            }\n          }\n          pilot {\n            id\n            user {\n              id\n              name\n            }\n          }\n          loadMaster {\n            id\n            user {\n              id\n              name\n            }\n          }\n          slots {\n            id\n            createdAt\n            user {\n              id\n              name\n            }\n            passengerName\n            passengerExitWeight\n            ticketType {\n              id\n              name\n              isTandem\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { onSuccess, open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlot, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOT);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          rigId: !state.fields.rig.value?.id ? null : Number(state.fields.rig.value?.id),\n          ticketTypeId: Number(state.fields.ticketType?.value?.id),\n          dropzoneUserId: Number(state.fields.dropzoneUser?.value?.id),\n          exitWeight: state.fields.exitWeight.value,\n          ...(!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifest.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifest.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifest.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifest.setFieldError(['ticketType', message]));\n          case 'rig':\n            return dispatch(actions.forms.manifest.setFieldError(['rig', message]));\n          case 'dropzone_user':\n            return dispatch(actions.forms.manifest.setFieldError(['dropzoneUser', message]));\n          case 'exit_weight':\n            return dispatch(actions.forms.manifest.setFieldError(['exitWeight', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlot?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlot,\n    onSuccess,\n    state.fields.dropzoneUser?.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.passengerExitWeight?.value,\n    state.fields.passengerName?.value,\n    state.fields.rig.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.ticketType.value?.isTandem,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} style={{ maxHeight: 500 }}>\n        <ProgressBar\n          indeterminate\n          visible={mutationData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>\n          {/* eslint-disable-next-line max-len */}\n          {`Manifest ${state?.fields?.dropzoneUser?.value?.user?.name} on ${state.fields.load?.value?.name}`}\n        </Dialog.Title>\n        <Dialog.ScrollArea>\n          <ScrollView>\n            <SlotForm />\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.manifest.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          <Button onPress={onManifest}>Manifest</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Avatar, Card, TextInput, ProgressBar, Chip, Divider } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { DropzoneUser, Query, Rig } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport calculateWingLoading from '../../../utils/calculateWingLoading';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\n\ninterface IUserRigCard {\n  dropzoneUserId: number;\n  dropzoneId: number;\n  exitWeight?: number;\n  onChangeExitWeight(weight: number): void;\n  rigId?: number;\n  onChangeRig(rig: Rig): void;\n}\n\nconst QUERY_DROPZONE_USERS_MANIFEST_DETAILS = gql`\n  query QueryDropzoneUsersManifestDetails($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n\n        user {\n          id\n          name\n          exitWeight\n          license {\n            id\n            name\n          }\n          rigs {\n            id\n            make\n            model\n            canopySize\n          }\n        }\n        role {\n          id\n          name\n        }\n        user {\n          id\n          name\n          image\n        }\n      }\n    }\n  }\n`;\nconst useQueryDropzoneUsersDetails = createQuery<\n  Query['dropzone']['dropzoneUser'],\n  {\n    dropzoneId: number;\n    dropzoneUserId: number;\n  }\n>(QUERY_DROPZONE_USERS_MANIFEST_DETAILS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUser as DropzoneUser | null,\n});\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const { dropzoneId, dropzoneUserId, onChangeRig, exitWeight, rigId, onChangeExitWeight } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { data, loading } = useQueryDropzoneUsersDetails({\n    variables: {\n      dropzoneUserId,\n      dropzoneId,\n    },\n    onError: console.error,\n  });\n\n  const selectedRig = data?.user?.rigs?.find(({ id }) => Number(id) === rigId);\n\n  React.useEffect(() => {\n    if (!exitWeight && data?.user?.exitWeight) {\n      onChangeExitWeight(Number(data.user.exitWeight));\n    }\n  }, [data?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ width: '100%' }} elevation={3}>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <Card.Title\n        title={data?.user.name}\n        left={() =>\n          data?.user?.image ? (\n            <Avatar.Image source={{ uri: data.user.image }} size={24} />\n          ) : (\n            <Avatar.Icon icon=\"account\" size={24} />\n          )\n        }\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"lock\" mode=\"outlined\" disabled>\n            {data?.role?.name}\n          </Chip>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {data?.user?.license?.name}\n          </Chip>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip style={{ marginHorizontal: 1 }} icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n        </ScrollView>\n        <RigSelect\n          userId={dropzoneUserId}\n          dropzoneId={dropzoneId}\n          onSelect={onChangeRig}\n          value={selectedRig}\n          autoSelectFirst\n        />\n\n        <TextInput\n          value={!exitWeight ? '' : `${exitWeight}`}\n          onChangeText={(text: string) => onChangeExitWeight(Number(text))}\n          keyboardType=\"number-pad\"\n          label=\"Exit weight\"\n          mode=\"outlined\"\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { HelperText, Divider, Chip, List, Card } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType, TicketType } from '../../../api/schema';\n\nimport UserRigCard from './UserRigCard';\n\nconst QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n\n      ticketTypes(isPublic: true) {\n        id\n        name\n        cost\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  {\n    jumpTypes: JumpType[];\n    allowedJumpTypes: JumpType[];\n    ticketTypes: TicketType[];\n  },\n  {\n    dropzoneId: number;\n    userIds: number[];\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { data } = useAllowedJumpTypes({\n    variables: {\n      userIds: state.fields.users?.value?.map((slotUser) => slotUser.id) as number[],\n      dropzoneId: globalState.currentDropzoneId as number,\n    },\n    onError: console.error,\n  });\n\n  return (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <Card elevation={2} style={{ marginBottom: 16, flexShrink: 1 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={\n              uniqBy(\n                [...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n                ({ id }) => id\n              ) || []\n            }\n            selected={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n            renderItemLabel={(jumpType) => jumpType.name}\n            isDisabled={(jumpType) =>\n              !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n            }\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['jumpType', first]))\n            }\n          />\n\n          <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n            {state.fields.jumpType.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n\n      <List.Subheader>Ticket</List.Subheader>\n      <Card elevation={2} style={{ width: '100%' }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={data?.ticketTypes || []}\n            selected={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n            renderItemLabel={(ticketType) => ticketType.name}\n            isDisabled={() => false}\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['ticketType', first]))\n            }\n          />\n          <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n            {state.fields.ticketType.error || ''}\n          </HelperText>\n\n          {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n            <List.Subheader>Ticket addons</List.Subheader>\n          )}\n          <ScrollView horizontal style={styles.ticketAddons}>\n            {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n              <Chip\n                selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n                onPress={\n                  state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                    ? () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                          ])\n                        )\n                    : () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            [...(state?.fields?.extras?.value || []), extra],\n                          ])\n                        )\n                }\n              >\n                {`${extra.name} ($${extra.cost})`}\n              </Chip>\n            ))}\n          </ScrollView>\n          <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n            {state.fields.extras.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n      <Divider />\n\n      <List.Subheader>Group</List.Subheader>\n      {state.fields?.users?.value?.map((slotUser) => (\n        <UserRigCard\n          dropzoneId={globalState.currentDropzoneId as number}\n          dropzoneUserId={Number(slotUser.id)}\n          rigId={Number(slotUser.rigId) || undefined}\n          exitWeight={slotUser.exitWeight}\n          onChangeExitWeight={(exitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n                ),\n              ])\n            )\n          }\n          onChangeRig={(newRig) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id) } : user\n                ),\n              ])\n            )\n          }\n        />\n      ))}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Paragraph, Title } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle }: INoResults) {\n  return (\n    <View style={styles.empty}>\n      <Title style={{ color }}>{title}</Title>\n      <Paragraph style={{ color, textAlign: 'center' }}>{subtitle}</Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Button, Checkbox, Divider, List, Searchbar } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport NoResults from '../../NoResults';\nimport { DropzoneUser, Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n              exitWeight\n            }\n\n            availableRigs {\n              id\n              make\n              model\n              canopySize\n              serial\n\n              user {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IUserListSelect {\n  onNext(): void;\n}\n\nexport default function UsersScreen(props: IUserListSelect) {\n  const { screens } = useAppSelector((root) => root);\n  const dispatch = useAppDispatch();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      search: searchText,\n    },\n  });\n\n  const { currentUser } = useCurrentDropzone();\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  return (\n    <>\n      <Searchbar value={searchText} onChangeText={setSearchText} placeholder=\"Search skydivers\" />\n      <View style={{ height: 380 }}>\n        <ScrollView contentContainerStyle={{ paddingTop: 16 }}>\n          {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n            <NoResults title=\"No users\" subtitle=\"\" />\n          )}\n\n          {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n            <>\n              <List.Item\n                style={{ width: '100%' }}\n                key={`user-${edge?.node?.id}`}\n                title={edge?.node?.user.name}\n                description={edge?.node?.role?.name}\n                left={() =>\n                  !edge?.node?.user?.image ? (\n                    <List.Icon icon=\"account\" />\n                  ) : (\n                    <Avatar.Image\n                      source={{ uri: edge?.node?.user.image }}\n                      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                      size={32}\n                    />\n                  )\n                }\n                right={() => (\n                  <Checkbox\n                    status={\n                      screens.manifest.selectedUsers\n                        ?.map<string>(({ id }) => id)\n                        .includes(edge?.node?.id as string)\n                        ? 'checked'\n                        : 'unchecked'\n                    }\n                  />\n                )}\n                disabled={\n                  // Dont allow removing current user if the user\n                  // can only manifest a group with themselves in it\n                  edge?.node?.user.id === currentUser?.id &&\n                  canManifestGroupWithSelfOnly &&\n                  !canManifestGroup\n                }\n                onPress={() => {\n                  dispatch(\n                    actions.screens.manifest.setSelected(\n                      screens.manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                        ? screens.manifest.selectedUsers?.filter(\n                            ({ id }) => id !== `${edge?.node?.id}`\n                          )\n                        : ([...screens.manifest.selectedUsers, edge?.node] as DropzoneUser[])\n                    )\n                  );\n                }}\n              />\n              <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n            </>\n          ))}\n        </ScrollView>\n      </View>\n      <Button\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n          props.onNext();\n        }}\n        style={styles.button}\n        mode=\"contained\"\n      >\n        Next\n      </Button>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  scrollView: {\n    height: 100,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\nimport UserListSelect from './UserListSelect';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value,\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        props.onClose();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    props,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={onClose}>\n        <View style={{ backgroundColor: 'white' }} testID=\"manifest-group-sheet\">\n          <View pointerEvents={(state.fields.users?.value?.length || 0) > 0 ? undefined : 'none'}>\n            <Tabs defaultIndex={tabIndex} mode=\"fixed\" onChangeIndex={setTabIndex}>\n              <TabScreen label=\"Create group\">\n                <View />\n              </TabScreen>\n              <TabScreen label=\"Configure jump\">\n                <View />\n              </TabScreen>\n            </Tabs>\n          </View>\n\n          {tabIndex === 0 ? (\n            <View style={styles.userListContainer}>\n              <UserListSelect onNext={() => setTabIndex(1)} />\n            </View>\n          ) : (\n            <ScrollView contentContainerStyle={{ paddingBottom: 200, flexGrow: 1 }}>\n              <ManifestGroupForm />\n              <View style={styles.buttonContainer}>\n                <Button\n                  onPress={onManifest}\n                  loading={mutationData.loading}\n                  mode=\"contained\"\n                  style={styles.button}\n                >\n                  Save\n                </Button>\n              </View>\n            </ScrollView>\n          )}\n        </View>\n      </Dialog>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: '100%',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List } from 'react-native-paper';\n\nimport { Text, View } from '../../../components/Themed';\nimport usePalette from '../../../hooks/usePalette';\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({ hasPlanes, hasTicketTypes, isPublic }: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n    <View style={{ width: '70%' }}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <List.Item\n        title=\"Create dropzone\"\n        left={() => <List.Icon color={palette.success} icon=\"check\" />}\n      />\n      <List.Item\n        title=\"Add a plane\"\n        left={() =>\n          !hasPlanes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n      <List.Item\n        title=\"Configure jump tickets\"\n        left={() =>\n          !hasTicketTypes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Plane, DropzoneUser, LoadState } from '../../../../../api/schema.d';\nimport { actions, useAppDispatch } from '../../../../../state';\nimport { errorColor, successColor, warningColor } from '../../../../../constants/Colors';\nimport Countdown from '../Countdown';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  load: Load;\n  onPress(): void;\n}\n\nconst LOAD_BADGE_COLOR: { [K in LoadState]?: string } = {\n  open: successColor,\n  cancelled: errorColor,\n  boarding_call: warningColor,\n};\n\nexport default function LoadCard(props: ILoadCardSmall) {\n  const { load: initialRecord, onPress } = props;\n  const dispatch = useAppDispatch();\n\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    pollInterval: 30000,\n  });\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={3}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load?.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          <PlaneChip\n            value={load?.plane}\n            small\n            onSelect={async (plane) => {\n              if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'warning',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n          />\n          <PilotChip value={load?.pilot} onSelect={updatePilot} small />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={styles.smallChip}\n            textStyle={styles.smallChipText}\n          >\n            {load?.slots?.length} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Card,\n  DataTable,\n  IconButton,\n  Menu,\n  Paragraph,\n  ProgressBar,\n  Text,\n} from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport useCurrentDropzone from '../../../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser } from '../../../../../api/schema.d';\nimport useRestriction from '../../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport SwipeActions from '../../../../../components/layout/SwipeActions';\nimport LoadingCard from '../Small/Loading';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport useMutationDeleteSlot from '../../../../../api/hooks/useMutationDeleteSlot';\n\ninterface ILoadCardLarge {\n  load: Load;\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: Slot[]): void;\n  onSlotPress(slot: Slot): void;\n  onManifest(): void;\n}\n\nexport default function LoadCard(props: ILoadCardLarge) {\n  const {\n    load: initialRecord,\n    onManifest,\n    onManifestGroup,\n    controlsVisible,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    pollInterval: 30000,\n  });\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load?.id) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    if (!load?.id) {\n      return;\n    }\n    await mutationUpdateLoad.mutate({\n      id: Number(load.id),\n      hasLanded: true,\n    });\n  }, [load?.id, mutationUpdateLoad]);\n\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text>{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || mutationUpdateLoad.loading || mutationDeleteSlot.loading}\n        color={state.theme.colors.accent}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View style={{ flexDirection: 'row' }}>\n          <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n            <PlaneChip\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: `You need to take ${diff} people off the load to fit on this plane`,\n                      variant: 'warning',\n                    })\n                  );\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip value={load?.gca} onSelect={updateGCA} />\n            <PilotChip value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <DataTable>\n          <DataTable.Header style={{ width: '100%' }}>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Jump type</DataTable.Title>\n            <DataTable.Title numeric>Altitude</DataTable.Title>\n          </DataTable.Header>\n          {load?.slots?.map((slot) => {\n            const slotGroup = load?.slots?.filter(\n              ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n            );\n            const isCurrentUser = slot?.user?.id === currentUser?.id;\n\n            return (\n              <SwipeActions\n                disabled={(isCurrentUser && !canRemoveSelf) || (!isCurrentUser && !canRemoveOthers)}\n                key={`slot-${slot.id}`}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: () => onDeleteSlot(slot),\n                }}\n              >\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  onPress={() => {\n                    if (slot.user?.id === currentUser?.id) {\n                      if (canEditSelf) {\n                        if (slotGroup?.length) {\n                          onSlotGroupPress(slotGroup);\n                        } else {\n                          onSlotPress(slot);\n                        }\n                      }\n                    } else if (canEditOthers) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  }}\n                  pointerEvents=\"none\"\n                >\n                  <DataTable.Cell>\n                    <Paragraph style={styles.slotText}>{slot?.dropzoneUser?.user?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            );\n          })}\n          {Array.from(\n            { length: (load?.maxSlots || 0) - (load?.slots?.length || 0) },\n            (v, i) => i\n          ).map((i) => (\n            <DataTable.Row key={`${load?.id}-empty-slot-${i}`} testID=\"slot-row\">\n              <DataTable.Cell>\n                <Paragraph style={styles.slotText}>- Available -</Paragraph>\n              </DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button mode=\"outlined\" onPress={() => updateCall(null)} testID=\"dispatch-cancel\">\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              onDismiss={() => setDispatchOpen(false)}\n              visible={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a load master before this load can be finalized',\n                      variant: 'warning',\n                    })\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a pilot before this load can be finalized',\n                      variant: 'warning',\n                    })\n                  );\n                }\n                return onLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  slotText: {\n    fontSize: 12,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import slice from './slice';\nimport Notifications from './Notifications';\n\nconst { actions } = slice;\n\nexport { actions };\nexport default Notifications;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['dropzone']['dropzoneUsers'],\n  {\n    dropzoneId: number;\n    permissions: string[];\n  }\n>(QUERY_DROPZONE_USERS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUsers,\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport useQueryDropzoneUsers from '../../../api/hooks/useQueryDropzoneUsers';\nimport { DropzoneUser } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IDropzoneUserChipSelect {\n  value?: DropzoneUser | null;\n  label: string;\n  icon?: string;\n  requiredPermissions: string[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(dzuser: DropzoneUser): void;\n}\n\nexport default function DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, onLoadingStateChanged, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQueryDropzoneUsers({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: requiredPermissions,\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUser>\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={(data?.edges?.map((edge) => edge?.node) || []) as DropzoneUser[]}\n        selected={[value].filter(Boolean) as DropzoneUser[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(dzUser) => dzUser?.user.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Plane, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: Plane | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QuerySelectPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onSelect, onLoadingStateChanged } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<Plane>\n        autoSelectFirst\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        selected={[value].filter(Boolean) as Plane[]}\n        renderItemLabel={(plane) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DropzoneUserChipSelect from '../../input/chip_select/DropzoneUserChipSelect';\nimport PlaneChipSelect from '../../input/chip_select/PlaneChipSelect';\n\nexport default function LoadForm() {\n  const state = useAppSelector((root) => root.forms.load);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        placeholder=\"Optional\"\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.load.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'e.g Starcrest load, Tandem load'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.load.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error || ''}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelect\n          value={state.fields.plane.value}\n          onSelect={(value) => {\n            dispatch(actions.forms.load.setField(['plane', value]));\n            dispatch(actions.forms.load.setField(['maxSlots', value.maxSlots]));\n          }}\n        />\n        <HelperText type={state.fields.plane.error ? 'error' : 'info'}>\n          {state.fields.plane.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"GCA\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['gca', dzUser]))}\n          value={state.fields.gca.value || null}\n          requiredPermissions={['actAsGCA']}\n        />\n        <HelperText type={state.fields.gca.error ? 'error' : 'info'}>\n          {state.fields.gca.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"Pilot\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['pilot', dzUser]))}\n          value={state.fields.pilot.value || null}\n          requiredPermissions={['actAsPilot']}\n        />\n        <HelperText type={state.fields.pilot.error ? 'error' : 'info'}>\n          {state.fields.pilot.error || ''}\n        </HelperText>\n\n        <Divider style={{ marginVertical: 8 }} />\n\n        <Checkbox.Item\n          label=\"Allow public manifesting\"\n          status={state.fields.isOpen.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.load.setField(['isOpen', !state.fields.isOpen.value]))\n          }\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nexport default function DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, buttonAction, title, loading, open, children } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} dismissable={false} style={{ maxWidth: 500, alignSelf: 'center' }}>\n        <ProgressBar indeterminate visible={loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>{title}</Dialog.Title>\n        <Dialog.Content pointerEvents=\"box-none\">\n          <Dialog.ScrollArea>\n            <ScrollView>{children}</ScrollView>\n          </Dialog.ScrollArea>\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={buttonAction}>{buttonLabel}</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { actions as snackbar } from '../notifications';\n\nimport { Load, Mutation } from '../../api/schema';\nimport LoadForm from '../forms/load/LoadForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\nconst MUTATION_CREATE_LOAD = gql`\n  mutation CreateLoad(\n    $name: String\n    $pilotId: Int\n    $gcaId: Int\n    $maxSlots: Int!\n    $planeId: Int\n    $isOpen: Boolean\n  ) {\n    createLoad(\n      input: {\n        attributes: {\n          name: $name\n          pilotId: $pilotId\n          gcaId: $gcaId\n          maxSlots: $maxSlots\n          planeId: $planeId\n          isOpen: $isOpen\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        maxSlots\n        isOpen\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\ninterface ILoadDialog {\n  open: boolean;\n  onClose(): void;\n  onSuccess(load: Load): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, onClose, onSuccess } = props;\n  const state = useAppSelector((root) => root.forms.load);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const dispatch = useAppDispatch();\n  const [mutationCreateLoad, mutation] = useMutation<Mutation>(MUTATION_CREATE_LOAD);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n\n    if ((state.fields.maxSlots.value || 0) < 1) {\n      hasError = true;\n      dispatch(\n        actions.forms.load.setFieldError(['maxSlots', 'Please specify amount of allowed jumpers'])\n      );\n    }\n\n    if (!state.fields.plane.value) {\n      hasError = true;\n      dispatch(actions.forms.load.setFieldError(['plane', 'What plane is flying this load?']));\n    }\n\n    if (!state.fields.gca.value) {\n      hasError = true;\n      dispatch(actions.forms.load.setFieldError(['gca', 'You must have a GCA for this load']));\n    }\n\n    return !hasError;\n  }, [dispatch, state.fields.gca.value, state.fields.maxSlots.value, state.fields.plane.value]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, gca, plane, maxSlots, pilot, isOpen } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationCreateLoad({\n          variables: {\n            dropzoneId: currentDropzoneId,\n            name: name.value,\n            maxSlots: maxSlots.value,\n            planeId: plane.value?.id ? Number(plane.value?.id) : null,\n            pilotId: pilot.value?.id ? Number(pilot.value?.id) : null,\n            gcaId: gca.value?.id ? Number(gca.value?.id) : null,\n            isOpen: !!isOpen.value,\n          },\n        });\n\n        result.data?.createLoad?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'name':\n              return dispatch(actions.forms.load.setFieldError(['name', message]));\n            case 'maxSlots':\n              return dispatch(actions.forms.load.setFieldError(['maxSlots', message]));\n            case 'plane':\n              return dispatch(actions.forms.load.setFieldError(['plane', message]));\n            case 'gca':\n              return dispatch(actions.forms.load.setFieldError(['gca', message]));\n            case 'is_open':\n              return dispatch(actions.forms.load.setFieldError(['isOpen', message]));\n            case 'pilot':\n              return dispatch(actions.forms.load.setFieldError(['pilot', message]));\n            default:\n              return null;\n          }\n        });\n\n        if (result?.data?.createLoad?.errors?.length) {\n          return dispatch(\n            snackbar.showSnackbar({\n              message: result.data.createLoad.errors[0],\n              variant: 'error',\n            })\n          );\n        }\n\n        if (result.data?.createLoad?.load) {\n          const { load } = result.data.createLoad;\n          dispatch(\n            snackbar.showSnackbar({\n              message: `Load ${load.name} created`,\n              variant: 'success',\n            })\n          );\n\n          if (!result.data?.createLoad?.fieldErrors) {\n            onSuccess(result.data.createLoad.load);\n            dispatch(actions.forms.load.reset());\n            requestAnimationFrame(() => dispatch(actions.forms.load.setOpen(false)));\n          }\n        }\n      } catch (error) {\n        dispatch(snackbar.showSnackbar({ message: error.message, variant: 'error' }));\n      }\n    }\n    return null;\n  }, [currentDropzoneId, dispatch, mutationCreateLoad, onSuccess, state.fields, validate]);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Create\"\n      snapPoints={['30%', 650]}\n      loading={mutation.loading}\n      title=\"New Load\"\n    >\n      <LoadForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from '../../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../../../components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number;\n  lng?: number;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    planeAnimation.current.start();\n  }, []);\n\n  React.useEffect(() => {\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: MAP_SIZE / 2,\n  });\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={lat && lng ? { lat, lng } : undefined}\n          center={lat && lng ? { lat, lng } : undefined}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={{\n            x: 0,\n            y: 0,\n          }}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons name=\"airplane\" size={20} color=\"#ffffff\" />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { StyleSheet, ImageBackground, Text, View, TouchableOpacity } from 'react-native';\nimport { Card, Divider } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport { useNavigation } from '@react-navigation/native';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport weatherBackground from '../../../../../assets/images/weather.png';\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch } from '../../../../state';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { Permission } from '../../../../api/schema.d';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const { dropzone, loading, called } = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? new Date(dropzone?.currentConditions?.createdAt * 1000)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n  return loading || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Card\n      style={styles.card}\n      elevation={3}\n      onPress={() => {\n        if (canUpdate && dropzone?.currentConditions) {\n          dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n          navigation.navigate('WindScreen');\n        }\n      }}\n    >\n      <ImageBackground\n        source={weatherBackground}\n        style={{ ...StyleSheet.absoluteFillObject }}\n        resizeMode=\"cover\"\n      >\n        <Card.Content\n          style={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexGrow: 1,\n          }}\n        >\n          {!hasWeatherConditions ? (\n            <View style={styles.noData}>\n              <Text style={styles.noDataLabel}>No weather data</Text>\n            </View>\n          ) : (\n            <>\n              <View style={styles.top}>\n                <View style={styles.cell}>\n                  <FontAwesome\n                    name=\"calendar\"\n                    color=\"#ffffff\"\n                    size={20}\n                    style={{\n                      marginRight: 8,\n                    }}\n                  />\n                  <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                </View>\n\n                <View style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}>\n                  <FontAwesome\n                    name=\"thermometer\"\n                    color=\"#ffffff\"\n                    size={20}\n                    style={{\n                      marginRight: 8,\n                    }}\n                  />\n                  <Text style={styles.temperature}>{temperature || '?'}</Text>\n                  <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                </View>\n              </View>\n              <View style={styles.bottom}>\n                <View style={styles.windboard}>\n                  <View style={styles.row}>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Altitude</Text>\n                    </View>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Wind</Text>\n                    </View>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Direction</Text>\n                    </View>\n                  </View>\n                  {orderBy(\n                    dropzone?.currentConditions?.winds || [],\n                    (item) => Number(item.altitude),\n                    'desc'\n                  ).map(({ speed: wind, direction, altitude }) => (\n                    <React.Fragment key={`wind-at-${altitude}`}>\n                      <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                      <View style={styles.row}>\n                        <View style={styles.cell}>\n                          <Text style={styles.value}>{altitude}</Text>\n                        </View>\n                        <View style={styles.cell}>\n                          <Text style={styles.value}>{wind}</Text>\n                        </View>\n                        <View style={[styles.cell, { justifyContent: 'center' }]}>\n                          <Text style={styles.value}>{direction}</Text>\n                          <FontAwesome\n                            name=\"long-arrow-down\"\n                            size={14}\n                            style={\n                              direction && /\\d+/.test(direction) && Number(direction) < 361\n                                ? {\n                                    transform: [\n                                      {\n                                        rotate: `${direction}deg`,\n                                      },\n                                    ],\n                                    marginLeft: 4,\n                                  }\n                                : { marginLeft: 4 }\n                            }\n                          />\n                        </View>\n                      </View>\n                    </React.Fragment>\n                  ))}\n                </View>\n                <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                  <Text style={[styles.header, { textAlign: 'center' }]}>\n                    Jump run {jumpRun}&deg;\n                  </Text>\n                  <TouchableOpacity\n                    style={{ width: '100%', height: '100%' }}\n                    disabled={!canUpdate}\n                    onPress={() => {\n                      if (dropzone?.currentConditions && canUpdate) {\n                        dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n                        navigation.navigate('JumpRunScreen');\n                      }\n                    }}\n                  >\n                    <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </>\n          )}\n        </Card.Content>\n      </ImageBackground>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    marginHorizontal: 16,\n    height: 200,\n    overflow: 'hidden',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    flexDirection: 'column',\n  },\n  jumpRun: {\n    width: 105,\n    height: 105,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Dimensions, RefreshControl, StyleSheet, useWindowDimensions } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, Menu, ProgressBar } from 'react-native-paper';\nimport ManifestUserSheet from '../../../components/dialogs/ManifestUser/ManifestUser';\nimport ManifestGroupSheet from '../../../components/dialogs/ManifestGroup/ManifestGroup';\n\nimport NoResults from '../../../components/NoResults';\nimport { View } from '../../../components/Themed';\nimport { Load, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport GetStarted from './GetStarted';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport LoadDialog from '../../../components/dialogs/Load';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const { dropzone, currentUser, loading, refetch, fetchMore } = useCurrentDropzone();\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const hasPlanes = !!dropzone?.planes?.length;\n  const hasTicketTypes = !!dropzone?.ticketTypes?.length;\n  const isPublic = !!dropzone?.isPublic;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      dispatch(actions.global.setPrimaryColor(dropzone.secondaryColor));\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n\n  const onManifest = React.useCallback(\n    (load: Load) => {\n      if (!currentUser?.hasLicense) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You need to select a license on your user profile',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasMembership) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your membership is out of date',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasRigInspection) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs to be inspected before manifesting',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasReserveInDate) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs a reserve repack',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasExitWeight) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Update your exit weight on your profile before manifesting',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasCredits) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You have no credits on your account',\n            variant: 'warning',\n          })\n        );\n      }\n\n      dispatch(actions.forms.manifest.setOpen(true));\n      dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n      dispatch(actions.forms.manifest.setField(['load', load]));\n      return null;\n    },\n    [currentUser, dispatch]\n  );\n\n  const { width } = useWindowDimensions();\n\n  const cardWidth = (manifestScreen.display === 'cards' ? 335 : 550) + 32;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const loads = dropzone?.loads?.edges || [];\n  const initialLoading = !loads?.length && loading;\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={state.theme.colors.accent} />\n\n      <View style={styles.container}>\n        {!initialLoading && !isSetupComplete ? (\n          <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }} />\n        ) : (\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              height: Dimensions.get('window').height,\n            }}\n          >\n            <FlatList\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults title=\"No loads so far today\" subtitle=\"How's the weather?\" />\n              )}\n              style={{\n                flex: 1,\n                paddingTop: 35,\n                height: Dimensions.get('window').height,\n              }}\n              testID=\"loads\"\n              keyExtractor={({ item }, idx) => `load-small-${item?.node?.id || idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n              }}\n              numColumns={numColumns}\n              data={initialLoading ? [1, 1, 1, 1, 1] : loads}\n              refreshControl={\n                <RefreshControl refreshing={loading} onRefresh={() => fetchMore({})} />\n              }\n              renderItem={({ item: edge, index }) => {\n                // 1 means loading, because null and undefined\n                // get filtered out\n                if (edge === 1) {\n                  return manifestScreen.display === 'list' ? (\n                    <LoadingCardLarge key={`loading-card-${index}`} />\n                  ) : (\n                    <LoadingCardSmall key={`loading-card-${index}`} />\n                  );\n                }\n\n                return manifestScreen.display === 'list' ? (\n                  <LoadCardLarge\n                    controlsVisible={false}\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onSlotPress={(slot) => {\n                      if (edge?.node) {\n                        dispatch(actions.forms.manifest.setOpen(slot));\n                        dispatch(actions.forms.manifest.setField(['load', edge.node]));\n                      }\n                    }}\n                    onSlotGroupPress={(slots) => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setFromSlots(slots));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                      navigation.navigate('ManifestGroupScreen');\n                    }}\n                    onManifest={() => {\n                      onManifest(edge.node);\n                    }}\n                    onManifestGroup={() => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setOpen(true));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                    }}\n                  />\n                ) : (\n                  <LoadCardSmall\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onPress={() => navigation.navigate('LoadScreen', { load: edge.node })}\n                  />\n                );\n              }}\n            />\n          </View>\n        )}\n        {canCreateLoad && isSetupComplete && (\n          <FAB\n            style={styles.fab}\n            small\n            icon=\"plus\"\n            onPress={() => dispatch(actions.forms.load.setOpen(true))}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n          visible={isDisplayOptionsOpen}\n          onDismiss={() => setDisplayOptionsOpen(false)}\n        >\n          <Menu.Item\n            title=\"Show expanded cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'cards' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <Menu.Item\n            title=\"Show compact cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'list' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n      <ManifestUserSheet\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.manifest.setOpen(false))}\n      />\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n\n      <LoadDialog\n        onSuccess={() => {\n          dispatch(actions.forms.load.setOpen(false));\n          refetch();\n        }}\n        open={forms.load.open}\n        onClose={() => dispatch(actions.forms.load.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Card, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../../components/forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestGroupScreen {\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateMultipleSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupScreen(props: IManifestGroupScreen) {\n  const { onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const navigation = useNavigation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value,\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onSuccess?.();\n        navigation.navigate('Manifest', { screen: 'DropzoneScreen' });\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    navigation,\n    onSuccess,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <ProgressBar\n        indeterminate\n        visible={mutationData.loading}\n        color={globalState.theme.colors.accent}\n      />\n      <Card.Title\n        // eslint-disable-next-line max-len\n        title={`Manifest ${state?.fields?.users?.value?.length} jumpers on Load #${state.fields.load?.value?.loadNumber}`}\n      />\n      <ManifestGroupForm />\n      <Button\n        mode=\"contained\"\n        style={{ width: '100%', marginVertical: 16 }}\n        onPress={() => onManifest()}\n        loading={mutationData.loading}\n      >\n        Save\n      </Button>\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Checkbox, Divider, FAB, List, ProgressBar } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { DropzoneUser, Query } from '../../../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupUserSelectScreen() {\n  const global = useAppSelector((root) => root.global);\n  const manifest = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: manifest.searchText,\n    },\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (manifest.isSearchVisible) {\n      dispatch(actions.screens.manifest.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, manifest.isSearchVisible]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 0 }}>\n        {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n          <NoResults title=\"No users\" subtitle=\"\" />\n        )}\n\n        {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n          <>\n            <List.Item\n              style={{ width: '100%' }}\n              key={`user-${edge?.node?.id}`}\n              title={edge?.node?.user.name}\n              description={edge?.node?.role?.name}\n              left={() =>\n                !edge?.node?.user?.image ? (\n                  <List.Icon icon=\"account\" />\n                ) : (\n                  <Avatar.Image\n                    source={{ uri: edge?.node?.user.image }}\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={32}\n                  />\n                )\n              }\n              right={() => (\n                <Checkbox.Android\n                  status={\n                    manifest.selectedUsers?.map(({ id }) => id).includes(edge?.node?.id || '')\n                      ? 'checked'\n                      : 'unchecked'\n                  }\n                />\n              )}\n              onPress={() =>\n                dispatch(\n                  actions.screens.manifest.setSelected(\n                    manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                      ? manifest.selectedUsers?.filter(({ id }) => id !== `${edge?.node?.id}`)\n                      : [...manifest.selectedUsers, edge?.node as DropzoneUser]\n                  )\n                )\n              }\n            />\n            <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n          </>\n        ))}\n      </ScrollableScreen>\n      <FAB\n        style={styles.fab}\n        small\n        visible={manifest.selectedUsers.length > 0}\n        icon=\"check\"\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(manifest.selectedUsers));\n          navigation.setParams({ select: false });\n          dispatch(actions.screens.manifest.setSearchVisible(false));\n          dispatch(actions.screens.manifest.setSelected([]));\n          navigation.navigate('ManifestGroupScreen');\n        }}\n        label=\"Next\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { DropzoneUser, Slot } from '../../api/schema';\nimport { useAppSelector } from '../../state';\nimport LoadScreen from '../../screens/authenticated/load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from '../../screens/authenticated/weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from '../../screens/authenticated/weather_conditions/JumpRunScreen';\nimport WindScreen from '../../screens/authenticated/weather_conditions/WindScreen';\nimport AppBar from '../AppBar';\n\nimport ManifestScreen from '../../screens/authenticated/manifest/ManifestScreen';\nimport ManifestGroupScreen from '../../screens/authenticated/manifest/ManifestGroupScreen';\n// eslint-disable-next-line max-len\nimport ManifestGroupUserSelectScreen from '../../screens/authenticated/manifest/ManifestGroupUserSelectScreen';\n\nexport type IManifestTabParams = {\n  DropzoneScreen: undefined;\n  LoadScreen: undefined;\n  ManifestGroupUserSelectScreen: undefined;\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  JumpRunScreen: undefined;\n  ManifestGroupScreen: {\n    users?: DropzoneUser[];\n    slots?: Slot[];\n    loadId?: number;\n  };\n};\n\nconst Manifest = createStackNavigator<IManifestTabParams>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n  return (\n    <Manifest.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Manifest.Screen\n        name=\"DropzoneScreen\"\n        component={ManifestScreen}\n        options={{ title: 'Manifest' }}\n      />\n      <Manifest.Screen\n        name=\"WeatherConditionsScreen\"\n        component={WeatherConditionsScreen}\n        options={{ headerShown: false }}\n      />\n      <Manifest.Screen\n        name=\"WindScreen\"\n        component={WindScreen}\n        options={{ title: 'Winds Aloft' }}\n      />\n      <Manifest.Screen\n        name=\"JumpRunScreen\"\n        component={JumpRunScreen}\n        options={{ title: 'Jump Run' }}\n      />\n      <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n      <Manifest.Screen\n        name=\"ManifestGroupScreen\"\n        component={ManifestGroupScreen}\n        options={{ title: 'Manifest group' }}\n      />\n      <Manifest.Screen\n        name=\"ManifestGroupUserSelectScreen\"\n        component={ManifestGroupUserSelectScreen}\n        options={{ title: 'Select users' }}\n      />\n    </Manifest.Navigator>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONE_USER_NOTIFICATIONS = gql`\n  query QueryNotifications($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      currentUser {\n        id\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n\n              resource {\n                ... on Load {\n                  id\n                  loadNumber\n                  dispatchAt\n                }\n                ... on Transaction {\n                  id\n                  amount\n                  message\n                  status\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useNotifications() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const query = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_NOTIFICATIONS, {\n    variables: {\n      dropzoneId,\n    },\n    pollInterval: 30000,\n  });\n\n  return {\n    ...query,\n    notifications: query?.data?.dropzone?.currentUser.notifications,\n  };\n}\n","import * as React from 'react';\nimport { Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Notification } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <Card style={{ margin: 8, borderRadius: 2, width: 370 }}>\n      <List.Item\n        title=\"Manifest\"\n        description={notification.message}\n        style={{ width: '100%' }}\n        left={(p) => <List.Icon {...p} icon=\"airplane\" />}\n        right={() => <Caption>{formatDistanceToNow(notification.createdAt * 1000)}</Caption>}\n      />\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { Caption, Card, List } from 'react-native-paper';\n\nimport { formatDistanceToNow } from 'date-fns';\nimport { Load, Notification } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <Card elevation={2} style={{ borderRadius: 8, margin: 2, width: 370 }}>\n      <List.Item\n        title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n        description={notification.message}\n        style={{ width: '100%' }}\n        left={(p) => <List.Icon {...p} icon=\"airplane-takeoff\" />}\n        right={() => <Caption>{formatDistanceToNow(notification.createdAt * 1000)}</Caption>}\n      />\n    </Card>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useNotifications from '../../../api/hooks/useNotifications';\nimport NoResults from '../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\n\n/* const MUTATION_MARK_AS_SEEN = gql`\n  mutation MarkAsSeen($id: Int) {\n    updateNotification(input: { id: $id, attributes: { isSeen: true } }) {\n      notification {\n        id\n        isSeen\n        message\n        notificationType\n        receivedBy {\n          notifications {\n            edges {\n              node {\n                id\n                message\n                isSeen\n                notificationType\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n*/\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { notifications, loading, refetch } = useNotifications();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      <ScrollableScreen\n        style={{ backgroundColor: '#F4F5F5' }}\n        contentContainerStyle={styles.content}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n      >\n        {!notifications?.edges?.length ? (\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        ) : (\n          notifications?.edges?.map((edge) => {\n            switch (edge?.node?.notificationType) {\n              case 'boarding_call':\n                return <BoardingCallNotification notification={edge.node} />;\n              case 'user_manifested':\n                return <ManifestedCard notification={edge.node} />;\n\n              default:\n                return null;\n            }\n          })\n        )}\n      </ScrollableScreen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    marginHorizontal: 16,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from '../AppBar';\n\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\n\nexport type IProfileTabParams = {\n  NotificationsScreen: undefined;\n};\n\nconst Profile = createStackNavigator<IProfileTabParams>();\n\nexport default function Notifications() {\n  return (\n    <Profile.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} hideWarnings />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Profile.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n    </Profile.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\n\ninterface IDatepicker {\n  label: string;\n  timestamp: number;\n  disabled?: boolean;\n  onChange(timestamp: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, timestamp, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Menu\n        onDismiss={() => setOpen(false)}\n        visible={open}\n        anchor={\n          <List.Item\n            onPress={() => setOpen(true)}\n            disabled={!!disabled}\n            title={label}\n            description={timestamp ? format(timestamp * 1000, 'yyyy/MM/dd') : 'No date selected'}\n            left={() => <List.Icon icon=\"calendar\" />}\n          />\n        }\n      >\n        <DayPicker\n          selectedDays={timestamp ? [new Date(timestamp * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport { Query, UserRole } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRoleSelect {\n  value?: UserRole | null;\n  required?: boolean;\n  disabled?: boolean;\n  onSelect(jt: UserRole): void;\n}\n\nconst QUERY_ROLES = gql`\n  query RolesQuery($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles(selectable: true) {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const { onSelect, disabled, required, value } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useQuery<Query>(QUERY_ROLES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  return (\n    <>\n      <List.Subheader style={{ paddingLeft: 0 }}>Access level</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={!disabled && isMenuOpen}\n        anchor={\n          <List.Item\n            left={() => <List.Icon icon=\"lock\" />}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    setMenuOpen(true);\n                  }\n            }\n            title={value?.name?.replace('_', ' ')?.toUpperCase() || 'Access level'}\n            description={!required ? 'Optional' : null}\n          />\n        }\n      >\n        {data?.dropzone?.roles?.map((role) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(role);\n            }}\n            title={role.name?.replace('_', ' ').toUpperCase() || '-'}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n        required\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Mutation } from '../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUser): void;\n}\n\nconst MUTATION_EDIT_DROPZONE_USER = gql`\n  mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n    updateDropzoneUser(\n      input: { id: $dropzoneUserId, attributes: { userRoleId: $userRoleId, expiresAt: $expiresAt } }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      dropzoneUser {\n        id\n        credits\n        expiresAt\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationUpdateDropzoneUser, createData] = useMutation<Mutation>(\n    MUTATION_EDIT_DROPZONE_USER\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        props.onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    props,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, HelperText, Divider, Dialog, DataTable } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function CreditsForm() {\n  const state = useAppSelector((root) => root.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = state.original?.credits || 0;\n  const amount = state.fields.amount.value || 0;\n\n  const subtotal =\n    state.fields.status.value === 'deposit' ? amount + currentCredits : amount - currentCredits;\n  return (\n    <>\n      <Tabs\n        defaultIndex={0} // default = 0\n        onChangeIndex={(newIndex) => {\n          dispatch(\n            actions.forms.credits.setField(['status', newIndex === 1 ? 'withdrawal' : 'deposit'])\n          );\n        }}\n        mode=\"fixed\"\n      >\n        <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n          <View />\n        </TabScreen>\n        <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n          <View />\n        </TabScreen>\n      </Tabs>\n      <Dialog.Content style={{ paddingTop: 16 }}>\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Message\"\n          error={!!state.fields.message.error}\n          value={state.fields.message.value?.toString() || ''}\n          onChangeText={(newValue: string) =>\n            dispatch(actions.forms.credits.setField(['message', newValue]))\n          }\n        />\n        <HelperText type={state.fields.message.error ? 'error' : 'info'}>\n          {state.fields.message.error || ''}\n        </HelperText>\n        {state.fields.status.value === 'deposit' ? (\n          <View>\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Add amount\"\n              error={!!state.fields.amount.error}\n              value={state.fields.amount.value?.toString() || ''}\n              keyboardType=\"number-pad\"\n              onChangeText={(newValue: string) =>\n                dispatch(actions.forms.credits.setField(['amount', Number(newValue)]))\n              }\n            />\n            <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n              {state.fields.amount.error || ''}\n            </HelperText>\n            <Divider />\n\n            <DataTable>\n              <DataTable.Row>\n                <DataTable.Title>Current balance</DataTable.Title>\n                <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n              </DataTable.Row>\n              <DataTable.Row>\n                <DataTable.Title>Deposit</DataTable.Title>\n                <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n              </DataTable.Row>\n              <DataTable.Row>\n                <DataTable.Title>\n                  <Text style={{ fontWeight: 'bold' }}>New total</Text>\n                </DataTable.Title>\n                <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                  subtotal < 0 ? subtotal * -1 : subtotal\n                }`}</DataTable.Cell>\n              </DataTable.Row>\n            </DataTable>\n          </View>\n        ) : (\n          <View>\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Withdraw amount\"\n              error={!!state.fields.amount.error}\n              value={state.fields.amount.value?.toString() || ''}\n              keyboardType=\"number-pad\"\n              onChangeText={(newValue: string) =>\n                dispatch(actions.forms.credits.setField(['amount', Number(newValue)]))\n              }\n            />\n            <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n              {state.fields.amount.error || ''}\n            </HelperText>\n\n            <Divider />\n\n            <DataTable>\n              <DataTable.Row>\n                <DataTable.Title>Current balance</DataTable.Title>\n                <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n              </DataTable.Row>\n              <DataTable.Row>\n                <DataTable.Title>Withdraw</DataTable.Title>\n                <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n              </DataTable.Row>\n              <DataTable.Row>\n                <DataTable.Title>\n                  <Text style={{ fontWeight: 'bold' }}>New total</Text>\n                </DataTable.Title>\n                <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                  subtotal < 0 ? subtotal * -1 : subtotal\n                }`}</DataTable.Cell>\n              </DataTable.Row>\n            </DataTable>\n          </View>\n        )}\n      </Dialog.Content>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsForm from '../../forms/credits/CreditsForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_TRANSACTION = gql`\n  mutation CreatrTransaction(\n    $message: String\n    $status: String\n    $amount: Float\n    $dropzoneUserId: Int\n  ) {\n    createTransaction(\n      input: {\n        attributes: {\n          amount: $amount\n          dropzoneUserId: $dropzoneUserId\n          message: $message\n          status: $status\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      transaction {\n        id\n        amount\n        message\n\n        dropzoneUser {\n          id\n          credits\n\n          transactions {\n            edges {\n              node {\n                id\n                status\n                amount\n                createdAt\n                message\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.credits);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateTransaction, createData] = useMutation<Mutation>(\n    MUTATION_CREATE_TRANSACTION\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(actions.forms.credits.setFieldError(['amount', 'You must specify an amount']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.amount.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationCreateTransaction({\n        variables: {\n          amount: state.fields.amount.value,\n          message: state.fields.message.value,\n          status: state.fields.status.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = state.original?.id ? response.data?.updateRig : response.data?.createRig;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'amount':\n            return dispatch(actions.forms.credits.setFieldError(['amount', message]));\n          case 'message':\n            return dispatch(actions.forms.credits.setFieldError(['message', message]));\n          case 'status':\n            return dispatch(actions.forms.credits.setFieldError(['status', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        props.onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateTransaction,\n    props,\n    state.fields.amount.value,\n    state.fields.message.value,\n    state.fields.status.value,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <CreditsForm />\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.credits.reset());\n              onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Make\"\n        error={!!state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n      <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n        {state.fields.make.error || 'e.g Javelin, Mirage'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Model\"\n        error={!!state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Serial\"\n        error={!!state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n      <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n        {state.fields.serial.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Current canopy size\"\n        error={!!state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.canopySize.error ? 'error' : 'info'}>\n        {state.fields.canopySize.error || 'Size of canopy in container'}\n      </HelperText>\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          selected={[state.fields.rigType?.value || 'sport']}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField(['rigType', rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Mutation } from '../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateRig(\n    $id: Int!\n    $make: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    updateRig(\n      input: {\n        id: $id\n        attributes: {\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n  const [mutationCreateRig, createData] = useMutation<Mutation>(MUTATION_CREATE_RIG);\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const isLoading = createData.loading || updateData.loading;\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.make.value) {\n      hasErrors = true;\n      dispatch(actions.forms.rig.setFieldError(['make', 'Required']));\n    }\n\n    if (!state.fields.model.value) {\n      hasErrors = true;\n      dispatch(actions.forms.rig.setFieldError(['model', 'Required']));\n    }\n\n    if (!state.fields.serial.value) {\n      hasErrors = true;\n      dispatch(actions.forms.rig.setFieldError(['serial', 'Required']));\n    }\n\n    if (!state.fields.canopySize.value) {\n      hasErrors = true;\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'Required']));\n    }\n\n    if (!state.fields.repackExpiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\n          'repackExpiresAt',\n          'You must select a repack date in the future',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [\n    dispatch,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.serial.value,\n  ]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const mutation = state.original?.id ? mutationUpdateRig : mutationCreateRig;\n      const response = await mutation({\n        variables: {\n          ...(state.original?.id ? { id: Number(state.original?.id) } : {}),\n          make: state.fields.make.value,\n          model: state.fields.model.value,\n          serial: state.fields.serial.value,\n          canopySize: state.fields.canopySize.value,\n          rigType: state.fields.rigType.value,\n          repackExpiresAt: state.fields.repackExpiresAt.value,\n          userId: props.userId ? Number(props.userId) : null,\n          dropzoneId: props.dropzoneId ? Number(props.dropzoneId) : null,\n        },\n      });\n      const result = state.original?.id ? response.data?.updateRig : response.data?.createRig;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'make':\n            return dispatch(actions.forms.rig.setFieldError(['make', message]));\n          case 'model':\n            return dispatch(actions.forms.rig.setFieldError(['model', message]));\n          case 'serial':\n            return dispatch(actions.forms.rig.setFieldError(['serial', message]));\n          case 'canopy_size':\n            return dispatch(actions.forms.rig.setFieldError(['canopySize', message]));\n          case 'repack_expires_at':\n            return dispatch(actions.forms.rig.setFieldError(['repackExpiresAt', message]));\n          case 'rig_type':\n            return dispatch(actions.forms.rig.setFieldError(['rigType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length) {\n        requestAnimationFrame(() => onSuccess());\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateRig,\n    mutationUpdateRig,\n    props,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.serial.value,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={[0, 580]}\n      onClose={() => {\n        requestAnimationFrame(() => {\n          onClose();\n          dispatch(actions.forms.rig.reset());\n        });\n      }}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { License, Query } from '../../../api/schema.d';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: License | null;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<License>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[value].filter(Boolean) as License[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { List, Menu, TextInput } from 'react-native-paper';\nimport { Federation, Query } from '../../../api/schema.d';\n\ninterface IFederationSelect {\n  value?: Federation | null;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const { value, onSelect } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onSelect(data.federations[0]);\n    }\n  }, [data?.federations, onSelect, value]);\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={isMenuOpen}\n        anchor={\n          <TouchableOpacity\n            onPress={() => {\n              setMenuOpen(true);\n            }}\n          >\n            <TextInput\n              mode=\"outlined\"\n              disabled\n              style={{ minWidth: 200 }}\n              value={value?.name || 'Please select federation'}\n            />\n          </TouchableOpacity>\n        }\n      >\n        {data?.federations?.map((federation) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(federation);\n            }}\n            title={federation.name || '-'}\n            key={`federation-select-${federation.id}`}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(actions.forms.user.setField(['exitWeight', state.original.exitWeight || '60']));\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || ''}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['exitWeight', newValue]))}\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Profile has been updated`,\n          variant: 'success',\n        })\n      );\n      requestAnimationFrame(() => dispatch(actions.forms.user.setOpen(false)));\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    const emailRegex = new RegExp(\n      // eslint-disable-next-line max-len\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n    if ((state.fields.name?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(actions.forms.user.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.email?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(actions.forms.user.setFieldError(['email', 'Email is too short']));\n    }\n\n    if ((state.fields.phone?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(actions.forms.user.setFieldError(['phone', 'Phone number is too short']));\n    }\n\n    if (!emailRegex.test(state.fields?.email?.value || '')) {\n      hasError = true;\n      dispatch(actions.forms.user.setFieldError(['email', 'Please enter a valid email']));\n    }\n\n    if ((state.fields.exitWeight?.value || 0) < 30) {\n      hasError = true;\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'Exit weight seems too low?']));\n    }\n\n    return !hasError;\n  }, [state.fields, dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, license, phone, email, exitWeight } = state.fields;\n\n    if (validate()) {\n      try {\n        await mutationUpdateUser.mutate({\n          id: Number(state.original?.id),\n          name: name.value,\n          licenseId: !license.value?.id ? null : Number(license.value?.id),\n          phone: phone.value,\n          exitWeight: parseFloat(exitWeight?.value || '50'),\n          email: email.value,\n        });\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [dispatch, mutationUpdateUser, state.fields, state.original?.id, validate]);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={[0, 740]}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { IconButton, List } from 'react-native-paper';\n\nimport { useAppSelector } from '../../../../state';\n\ninterface ITableCard {\n  children: React.ReactNode;\n  title: string;\n  buttonIcon?: string;\n  onPressButton?(): void;\n}\nexport default function TableCard(props: ITableCard) {\n  const state = useAppSelector((root) => root.global);\n  const { title, children, buttonIcon, onPressButton } = props;\n\n  return (\n    <View style={styles.card}>\n      <View style={styles.container}>\n        <List.Subheader style={styles.title}>{title}</List.Subheader>\n        {buttonIcon && (\n          <IconButton\n            icon={buttonIcon}\n            onPress={() => (!onPressButton ? null : onPressButton())}\n            color={state.theme.colors.primary}\n          />\n        )}\n      </View>\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  title: { flexGrow: 1 },\n  card: {\n    marginVertical: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title, TouchableRipple } from 'react-native-paper';\n\nimport { useAppSelector } from '../../../../state';\nimport { DropzoneUser } from '../../../../api/schema';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUser;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onPressAvatar?(): void;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, onEdit, canEdit, children, onPressAvatar } = props;\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.primary }]}>\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.surface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon\n                size={80}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>{dropzoneUser?.user?.name}</Title>\n          <Paragraph style={styles.paragraph}>\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 48,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n    backgroundColor: 'white',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n    backgroundColor: 'white',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useCurrentDropzone from './useCurrentDropzone';\n\nexport const QUERY_DROPZONE_USER = gql`\n  query QueryDropzoneUser($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n        rigInspections {\n          id\n          isOk\n          rig {\n            id\n          }\n        }\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n            }\n          }\n        }\n\n        transactions {\n          edges {\n            node {\n              id\n              status\n              message\n              amount\n              createdAt\n            }\n          }\n        }\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const currentDropzone = useCurrentDropzone();\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id || Number(currentDropzone?.data?.dropzone?.currentUser?.id),\n    },\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser:\n      !id || id === Number(currentDropzone?.data?.dropzone?.currentUser?.id)\n        ? currentDropzone?.data?.dropzone?.currentUser\n        : dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import * as React from 'react';\nimport { Chip } from 'react-native-paper';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const iconName = {\n    actAsDZSO: 'shield-cross',\n    actAsGCA: 'radio-handheld',\n    actAsLoadMaster: 'shield-account',\n    actAsPilot: 'shield-airplane',\n    actAsRigInspector: 'shield-search',\n  }[type];\n\n  const label = {\n    actAsDZSO: 'DZSO',\n    actAsGCA: 'GCA',\n    actAsLoadMaster: 'Load Master',\n    actAsPilot: 'Pilot',\n    actAsRigInspector: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      icon={iconName}\n      textStyle={selected ? {} : { color: 'white' }}\n      style={[\n        { marginHorizontal: 2, maxHeight: 35 },\n        selected ? undefined : { backgroundColor: 'transparent', borderColor: 'white' },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      {label}\n    </Chip>\n  );\n}\n\nexport default Badge;\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { RevokePermissionPayload } from '../schema';\n\nexport const MUTATION_REVOKE_PERMISSION = gql`\n  mutation RevokePermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    revokePermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  RevokePermissionPayload\n>(MUTATION_REVOKE_PERMISSION, {\n  getPayload: (result) => result.revokePermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { GrantPermissionPayload } from '../schema';\n\nexport const MUTATION_GRANT_PERMISSION = gql`\n  mutation GrantPermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    grantPermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  GrantPermissionPayload\n>(MUTATION_GRANT_PERMISSION, {\n  getPayload: (result) => result.grantPermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Platform, RefreshControl, StyleSheet, Text } from 'react-native';\nimport { Chip, DataTable, Divider, IconButton, ProgressBar } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport gql from 'graphql-tag';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { IconProps } from 'react-native-paper/lib/typescript/components/MaterialCommunityIcon';\nimport * as ImagePicker from 'expo-image-picker';\nimport { QUERY_PERMISSION_USER } from '../../../components/chips/GcaChip';\n\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport DropzoneUserDialog from '../../../components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport EditUserSheet from '../../../components/dialogs/User';\n\nimport TableCard from './UserInfo/TableCard';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport Badge, { IBadgeProps } from '../../../components/Badge';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useMutationRevokePermission from '../../../api/hooks/useMutationRevokePermission';\nimport useMutationGrantPermission from '../../../api/hooks/useMutationGrantPermission';\n\nconst MUTATION_UPDATE_IMAGE = gql`\n  mutation UpdateUserImage($id: Int, $image: String) {\n    updateUser(input: { id: $id, attributes: { image: $image } }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        image\n        phone\n        rigs {\n          id\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const isSelf = currentUser?.id === route.params.userId;\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(Number(route.params.userId));\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const [mutationUpdateUser] = useMutation<Mutation>(MUTATION_UPDATE_IMAGE);\n  const revokePermission = useMutationRevokePermission({\n    onSuccess: (payload) => {\n      refetch();\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission revoked' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n  });\n  const grantPermission = useMutationGrantPermission({\n    onSuccess: (payload) => {\n      refetch();\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission granted' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n  });\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      // Upload image\n      await mutationUpdateUser({\n        variables: {\n          id: Number(dropzoneUser?.user?.id),\n          image: `data:image/jpeg;base64,${result.base64}`,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.user?.id, mutationUpdateUser]);\n\n  const badges = dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const shouldShowBadge = (permission: Permission) =>\n    canGrantPermission || badges.includes(permission);\n\n  console.log(forms.dropzoneUser.open);\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      <ScrollableScreen\n        contentContainerStyle={styles.content}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n      >\n        <ScrollView\n          horizontal\n          style={{ width: '100%' }}\n          contentContainerStyle={{\n            flexGrow: 1,\n            padding: 8,\n            justifyContent: 'space-evenly',\n            backgroundColor: state.theme.colors.primary,\n          }}\n        >\n          {[\n            Permission.ActAsPilot,\n            Permission.ActAsDzso,\n            Permission.ActAsGca,\n            Permission.ActAsRigInspector,\n            Permission.ActAsLoadMaster,\n          ].map((permission) =>\n            !shouldShowBadge(permission) ? null : (\n              <Badge\n                type={permission as IBadgeProps['type']}\n                selected={badges.includes(permission)}\n                onPress={() =>\n                  // eslint-disable-next-line no-nested-ternary\n                  !canGrantPermission\n                    ? null\n                    : badges.includes(permission)\n                    ? revokePermission.mutate(\n                        {\n                          permissionName: permission,\n                          dropzoneUserId: Number(dropzoneUser?.id),\n                        },\n                        {\n                          update: async (client, { data }) => {\n                            const c = client.readQuery<Query>({\n                              query: QUERY_PERMISSION_USER,\n                              variables: {\n                                permissions: [permission],\n                                dropzoneId: Number(state.currentDropzoneId),\n                              },\n                            });\n\n                            const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter(\n                              (edge) => edge?.node?.id !== dropzoneUser?.id\n                            );\n\n                            client.writeQuery({\n                              query: QUERY_PERMISSION_USER,\n                              variables: {\n                                permissions: [permission],\n                                dropzoneId: Number(state.currentDropzoneId),\n                              },\n                              data: {\n                                ...c,\n                                dropzone: {\n                                  ...c?.dropzone,\n                                  dropzoneUsers: updatedList,\n                                },\n                              },\n                            });\n\n                            return {\n                              data: {\n                                ...c,\n                                dropzone: {\n                                  ...c?.dropzone,\n                                  dropzoneUsers: updatedList,\n                                },\n                              },\n                            };\n                          },\n                        }\n                      )\n                    : grantPermission.mutate(\n                        {\n                          permissionName: permission,\n                          dropzoneUserId: Number(dropzoneUser?.id),\n                        },\n                        {\n                          update: async (client, { data }) => {\n                            const c = client.readQuery<Query>({\n                              query: QUERY_PERMISSION_USER,\n                              variables: {\n                                permissions: [permission],\n                                dropzoneId: Number(state.currentDropzoneId),\n                              },\n                            });\n\n                            const current = c?.dropzone?.dropzoneUsers?.edges || [];\n                            const shouldUpdate = !!current.find(\n                              (edge) => edge?.node?.id === dropzoneUser?.id\n                            );\n\n                            const updatedGcaList = shouldUpdate\n                              ? [\n                                  ...(c?.dropzone?.dropzoneUsers?.edges || []).map((edge) =>\n                                    edge?.node?.id !== dropzoneUser?.id\n                                      ? edge\n                                      : {\n                                          ...edge,\n                                          node: {\n                                            ...edge?.node,\n                                            ...data?.grantPermission?.dropzoneUser,\n                                          },\n                                        }\n                                  ),\n                                ]\n                              : [\n                                  ...(c?.dropzone?.dropzoneUsers?.edges || []),\n                                  {\n                                    edge: {\n                                      node: data?.grantPermission?.dropzoneUser,\n                                    },\n                                  },\n                                ];\n                            const newData = {\n                              ...c,\n                              dropzone: {\n                                ...c?.dropzone,\n                                dropzoneUsers: updatedGcaList,\n                              },\n                            };\n                            client.writeQuery({\n                              query: QUERY_PERMISSION_USER,\n                              variables: {\n                                dropzoneId: Number(state.currentDropzoneId),\n                                permissions: [permission],\n                              },\n                              data: newData,\n                            });\n\n                            return {\n                              data: newData,\n                            };\n                          },\n                        }\n                      )\n                }\n              />\n            )\n          )}\n        </ScrollView>\n        {!dropzoneUser ? null : (\n          <Header\n            dropzoneUser={dropzoneUser}\n            canEdit={isSelf}\n            onEdit={() => {\n              if (dropzoneUser?.user) {\n                dispatch(actions.forms.user.setOpen(dropzoneUser?.user));\n              }\n            }}\n            onPressAvatar={onPickImage}\n          >\n            <ScrollView horizontal style={{ marginVertical: 8 }}>\n              <Chip\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore This is a valid prop\n                icon={({ size }: IconProps) => (\n                  <MaterialCommunityIcons name=\"email\" size={size} color=\"#FFFFFF\" />\n                )}\n                mode=\"outlined\"\n                style={styles.chip}\n                textStyle={styles.chipTitle}\n              >\n                {dropzoneUser?.user?.email || '-'}\n              </Chip>\n\n              <Chip\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore This is a valid prop\n                icon={({ size }: IconProps) => (\n                  <MaterialCommunityIcons name=\"phone\" size={size} color=\"#FFFFFF\" />\n                )}\n                mode=\"outlined\"\n                style={styles.chip}\n                textStyle={styles.chipTitle}\n              >\n                {dropzoneUser?.user?.phone || '-'}\n              </Chip>\n\n              <Chip\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore This is a valid prop\n                icon={({ size }: IconProps) => (\n                  <MaterialCommunityIcons\n                    name=\"card-account-details-star-outline\"\n                    size={size}\n                    color=\"#FFFFFF\"\n                  />\n                )}\n                mode=\"outlined\"\n                style={styles.chip}\n                textStyle={styles.chipTitle}\n                onPress={() => {\n                  if (canUpdateUser) {\n                    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                  }\n                }}\n              >\n                {!dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')}\n              </Chip>\n            </ScrollView>\n            <Divider style={styles.divider} />\n            <InfoGrid\n              items={[\n                {\n                  title: 'Funds',\n                  value: `$${dropzoneUser?.credits || 0}`,\n                  onPress: () => {\n                    if (dropzoneUser && canAddTransaction) {\n                      dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                    }\n                  },\n                },\n                {\n                  title: 'License',\n                  value: `${dropzoneUser?.user?.license?.name || '-'}`,\n                },\n                {\n                  title: 'Exit weight',\n                  value: Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                },\n              ]}\n            />\n            <Divider style={[styles.divider, { backgroundColor: 'white' }]} />\n          </Header>\n        )}\n\n        <TableCard\n          title=\"Rigs\"\n          buttonIcon=\"plus\"\n          onPressButton={() => dispatch(actions.forms.rig.setOpen(true))}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Container</DataTable.Title>\n              <DataTable.Title numeric>Repack due</DataTable.Title>\n              <DataTable.Title numeric>Canopy size</DataTable.Title>\n              <DataTable.Title numeric>Inspected</DataTable.Title>\n            </DataTable.Header>\n\n            {dropzoneUser?.user?.rigs?.map((rig) => (\n              <DataTable.Row\n                key={`rig-${rig?.id}`}\n                onPress={() => {\n                  dispatch(actions.forms.rig.setOpen(rig));\n                }}\n                onLongPress={() =>\n                  navigation.navigate('RigInspectionScreen', {\n                    dropzoneUserId: Number(route.params.userId),\n                    rig,\n                  })\n                }\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell>\n                  {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n                <DataTable.Cell numeric>\n                  <IconButton\n                    icon={\n                      dropzoneUser?.rigInspections?.some(\n                        (insp) => insp.rig?.id === rig.id && insp.isOk\n                      )\n                        ? 'eye-check'\n                        : 'eye-minus'\n                    }\n                    color={\n                      dropzoneUser?.rigInspections?.some(\n                        (insp) => insp.rig?.id === rig.id && insp.isOk\n                      )\n                        ? successColor\n                        : warningColor\n                    }\n                    onPress={() =>\n                      navigation.navigate('RigInspectionScreen', {\n                        dropzoneUserId: Number(route.params.userId),\n                        rig,\n                      })\n                    }\n                  />\n                </DataTable.Cell>\n              </DataTable.Row>\n            ))}\n          </DataTable>\n        </TableCard>\n\n        <TableCard\n          title=\"Transactions\"\n          {...(canAddTransaction\n            ? {\n                buttonIcon: 'plus',\n                onPressButton: () => {\n                  if (dropzoneUser) {\n                    dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                  }\n                },\n              }\n            : {})}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Time</DataTable.Title>\n              <DataTable.Title>Type</DataTable.Title>\n              <DataTable.Title>Message</DataTable.Title>\n              <DataTable.Title numeric>Amount</DataTable.Title>\n            </DataTable.Header>\n            {dropzoneUser?.transactions?.edges?.map((edge) => (\n              <DataTable.Row key={`transaction-${edge?.node?.id}`}>\n                <DataTable.Cell>\n                  <Text\n                    style={{\n                      fontSize: 12,\n                      fontStyle: 'italic',\n                      color: '#999999',\n                    }}\n                  >\n                    {!edge?.node?.createdAt\n                      ? null\n                      : format(edge?.node?.createdAt * 1000, 'yyyy/MM/dd hh:mm')}\n                  </Text>\n                </DataTable.Cell>\n                <DataTable.Cell>\n                  <Text\n                    style={{\n                      fontSize: 12,\n                      fontStyle: 'italic',\n                      color: '#999999',\n                    }}\n                  >\n                    {edge?.node?.status}\n                  </Text>\n                </DataTable.Cell>\n                <DataTable.Cell>{edge?.node?.message}</DataTable.Cell>\n                <DataTable.Cell numeric>{edge?.node?.amount}</DataTable.Cell>\n              </DataTable.Row>\n            ))}\n          </DataTable>\n        </TableCard>\n      </ScrollableScreen>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n\n      <DropzoneUserDialog\n        onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n        onSuccess={(user) => {\n          dispatch(actions.forms.dropzoneUser.setOpen(false));\n          if (currentUser?.id === dropzoneUser?.id) {\n            dispatch(actions.global.setUser(user.user));\n          }\n        }}\n        open={forms.dropzoneUser.open}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n\n      <EditUserSheet\n        onClose={() => dispatch(actions.forms.user.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.user.setOpen(false))}\n        open={forms.user.open}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from '../AppBar';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\n\nexport type IProfileTabParams = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\n\nconst Profile = createStackNavigator<IProfileTabParams>();\n\nexport default function ProfileTab() {\n  const { currentUser } = useCurrentDropzone();\n\n  return (\n    <Profile.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} hideWarnings />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Profile.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'Profile' }}\n        initialParams={{\n          userId: currentUser?.id,\n        }}\n      />\n    </Profile.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const state = useAppSelector((root) => root.global);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  return (\n    <ScrollableScreen>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            onPress={() =>\n              navigation.navigate('UpdateDropzoneScreen', {\n                dropzone: state.currentDropzone,\n              })\n            }\n            left={() => <List.Icon color=\"#000\" icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n        <List.Item\n          title=\"Permissions\"\n          left={() => <List.Icon color=\"#000\" icon=\"lock\" />}\n          onPress={() => navigation.navigate('DropzonePermissionScreen')}\n        />\n        <List.Item\n          title=\"Aircrafts\"\n          onPress={() => navigation.navigate('PlanesScreen')}\n          left={() => <List.Icon color=\"#000\" icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color=\"#000\" icon=\"parachute\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() => navigation.navigate('DropzoneRigsScreen')}\n        />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          left={() => <List.Icon color=\"#000\" icon=\"check\" />}\n          onPress={() => navigation.navigate('RigInspectionTemplateScreen')}\n        />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color=\"#000\" icon=\"parachute\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() => navigation.navigate('DropzoneMasterLogScreen')}\n        />\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          title=\"Ticket types\"\n          onPress={() => navigation.navigate('TicketTypesScreen')}\n          left={() => <List.Icon color=\"#000\" icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <List.Item\n          title=\"Ticket add-ons\"\n          onPress={() => navigation.navigate('ExtrasScreen')}\n          left={() => <List.Icon color=\"#000\" icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Menu, List, Divider } from 'react-native-paper';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Extra, Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nconst QUERY_EXTRAS = gql`\n  query QueryExtras($dropzoneId: Int!) {\n    extras(dropzoneId: $dropzoneId) {\n      id\n      cost\n      name\n\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst ALTITUDE_LABEL_MAP: { [key: string]: string } = {\n  '14000': 'Height',\n  '4000': 'Hop n Pop',\n};\n\nexport default function TicketTypeForm() {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const { data } = useQuery<Query>(QUERY_EXTRAS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ticketType.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'Name of the ticket users will see'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ticketType.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || 'Base cost without extra ticket addons'}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <Menu\n          onDismiss={() => setAltitudeMenuOpen(false)}\n          visible={altitudeMenuOpen}\n          style={{ position: 'absolute', right: '10%', left: '10%', flex: 1 }}\n          anchor={\n            <List.Item\n              onPress={() => {\n                setAltitudeMenuOpen(true);\n              }}\n              title={\n                state.fields.altitude.value &&\n                state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                  ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                  : 'Custom'\n              }\n              style={{ width: '100%', flex: 1 }}\n              right={() => (\n                <List.Icon\n                  icon={\n                    state.fields.altitude.value &&\n                    state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                      ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                      : 'pencil-plus'\n                  }\n                />\n              )}\n            />\n          }\n        >\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Hop n Pop\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Height\"\n            right={() => <List.Icon icon=\"airplane-takeoff\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Other\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n        </Menu>\n\n        {(!state.fields.altitude.value || ![4000, 14000].includes(state.fields.altitude.value)) && (\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Custom altitude\"\n            error={!!state.fields.altitude.error}\n            value={state.fields.altitude?.value?.toString()}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n            }\n          />\n        )}\n\n        <Checkbox.Item\n          label=\"Tandem\"\n          style={{ width: '100%' }}\n          status={state.fields.isTandem.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.ticketType.setField(['isTandem', !state.fields.isTandem.value]))\n          }\n        />\n        <HelperText type={state.fields.isTandem.error ? 'error' : 'info'}>\n          {state.fields.isTandem.error ||\n            'Allow also manifesting a passenger when using this ticket type'}\n        </HelperText>\n\n        <Checkbox.Item\n          label=\"Public manifesting\"\n          style={{ width: '100%' }}\n          status={state.fields.allowManifestingSelf.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(\n              actions.forms.ticketType.setField([\n                'allowManifestingSelf',\n                !state.fields.allowManifestingSelf.value,\n              ])\n            )\n          }\n        />\n\n        <HelperText type={state.fields.allowManifestingSelf.error ? 'error' : 'info'}>\n          {state.fields.allowManifestingSelf.error ||\n            'Allow users to manifest themselves with this ticket'}\n        </HelperText>\n\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        {data?.extras.map((extra) => (\n          <Checkbox.Item\n            key={`extra-${extra.id}`}\n            label={extra.name || ''}\n            status={\n              state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.ticketType.setField([\n                  'extras',\n                  state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                    ? state.fields.extras.value?.filter(({ id }) => id !== extra.id)\n                    : [...(state.fields.extras?.value as Required<Extra[]>), extra],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { useIsFocused } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { Mutation } from '../../api/schema';\nimport TicketTypeForm from '../forms/ticket_type/TicketTypeForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n        }\n      }\n    ) {\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketType(\n    $id: Int!\n    $name: String\n    $cost: Float\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n  ) {\n    updateTicketType(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          cost: $cost\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n        }\n      }\n    ) {\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface ITicketTypeDialog {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const [mutationCreateTicketType, create] = useMutation<Mutation>(MUTATION_CREATE_TICKET_TYPE);\n  const [mutationUpdateTicketType, update] = useMutation<Mutation>(MUTATION_UPDATE_TICKET_TYPE);\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (isFocused) {\n      dispatch(actions.forms.ticketType.reset());\n    }\n  }, [dispatch, isFocused]);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if (!state.fields.name.value || state.fields.name.value.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.ticketType.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.cost.value || 0) < 1) {\n      hasError = true;\n      dispatch(actions.forms.ticketType.setFieldError(['cost', 'Cost must be at least $1']));\n    }\n\n    if (!state.fields.altitude.value) {\n      hasError = true;\n      dispatch(actions.forms.ticketType.setFieldError(['altitude', 'Altitude must be specified']));\n    }\n\n    return !hasError;\n  }, [state.fields, dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, cost, allowManifestingSelf, altitude, extras, isTandem } = state.fields;\n\n    if (validate()) {\n      try {\n        const mutation = state.original?.id ? mutationUpdateTicketType : mutationCreateTicketType;\n\n        const result = await mutation({\n          variables: {\n            ...(state.original?.id\n              ? { id: Number(state.original?.id) }\n              : { dropzoneId: Number(currentDropzone?.dropzone?.id) }),\n            name: name.value,\n            cost: cost.value,\n            altitude: altitude.value,\n            allowManifestingSelf: allowManifestingSelf.value,\n            extraIds: extras?.value?.map(({ id }) => id),\n            isTandem: !!isTandem.value,\n          },\n        });\n\n        const payload = state?.original?.id\n          ? result?.data?.updateTicketType\n          : result?.data?.createTicketType;\n\n        if (payload?.fieldErrors) {\n          return payload?.fieldErrors?.map(({ field, message }) => {\n            switch (field) {\n              case 'name':\n                return dispatch(actions.forms.ticketType.setFieldError(['name', message]));\n              case 'altitude':\n                return dispatch(actions.forms.ticketType.setFieldError(['altitude', message]));\n              case 'cost':\n                return dispatch(actions.forms.ticketType.setFieldError(['cost', message]));\n              case 'allow_manifesting_self':\n                return dispatch(\n                  actions.forms.ticketType.setFieldError(['allowManifestingSelf', message])\n                );\n              case 'extras':\n                return dispatch(actions.forms.ticketType.setFieldError(['extras', message]));\n              default:\n                return null;\n            }\n          });\n        }\n\n        if (payload?.errors?.length) {\n          onClose();\n          return dispatch(\n            actions.notifications.showSnackbar({\n              message: payload?.errors[0],\n              variant: 'error',\n            })\n          );\n        }\n\n        if (payload?.ticketType) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Saved`,\n              variant: 'success',\n            })\n          );\n          dispatch(actions.forms.ticketType.reset());\n          onClose();\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n    return null;\n  }, [\n    state.fields,\n    state.original?.id,\n    validate,\n    mutationUpdateTicketType,\n    mutationCreateTicketType,\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    onClose,\n  ]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket' : 'New ticket'}\n      open={open}\n      snapPoints={[550, 650]}\n      onClose={() => {\n        onClose();\n      }}\n      loading={create.loading || update.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useRoute } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport TicketTypesDialog from '../../../components/dialogs/TicketType';\nimport SwipeActions from '../../../components/layout/SwipeActions';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      ticketTypes {\n        id\n        cost\n        currency\n        name\n        altitude\n        allowManifestingSelf\n\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketTypePublic($id: Int!, $allowManifestingSelf: Boolean) {\n    updateTicketType(\n      input: { id: $id, attributes: { allowManifestingSelf: $allowManifestingSelf } }\n    ) {\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        isTandem\n        extras {\n          id\n          name\n          cost\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_DELETE_TICKET_TYPE = gql`\n  mutation DeleteTicketType($id: Int!) {\n    deleteTicketType(input: { id: $id }) {\n      ticketType {\n        id\n        dropzone {\n          id\n          ticketTypes {\n            id\n            cost\n            currency\n            name\n            altitude\n            allowManifestingSelf\n\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n      errors\n    }\n  }\n`;\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const form = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const route = useRoute();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n  const [mutationUpdateTicketType] = useMutation<Mutation>(MUTATION_UPDATE_TICKET_TYPE);\n  const [mutationDeleteTicketType] = useMutation<Mutation>(MUTATION_DELETE_TICKET_TYPE);\n\n  React.useEffect(() => {\n    if (route.name === 'TicketTypesScreen') {\n      refetch();\n    }\n  }, [refetch, route.name]);\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: async () => {\n                const { data: result } = await mutationDeleteTicketType({\n                  variables: { id: Number(ticketType.id) },\n                });\n\n                if (result?.deleteTicketType?.errors?.length) {\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: result?.deleteTicketType?.errors[0],\n                      variant: 'error',\n                    })\n                  );\n                }\n              },\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setOpen(ticketType));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <Switch\n                  onValueChange={() => {\n                    mutationUpdateTicketType({\n                      variables: {\n                        id: Number(ticketType.id),\n                        allowManifestingSelf: !ticketType.allowManifestingSelf,\n                      },\n                    });\n                  }}\n                  value={!!ticketType.allowManifestingSelf}\n                />\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        style={styles.fab}\n        small\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.ticketType.setOpen(true))}\n        label=\"New ticket type\"\n      />\n      <TicketTypesDialog\n        open={form.open}\n        onClose={() => dispatch(actions.forms.ticketType.setOpen(false))}\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\nimport SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={SliderComponent}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#AAAAAA',\n  '#DDDDDD',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { backgroundColor: color },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                {null}\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n  secondaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor, secondaryColor } = props;\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: secondaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: primaryColor }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#DDDDDD',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#DDDDDD',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\n\ninterface IWebPreview {\n  primaryColor?: string;\n  secondaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor, secondaryColor } = props;\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: secondaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: primaryColor }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#DDDDDD',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value.lng === null || value.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      defaultZoom={3}\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        props.onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, TextInput, HelperText, Card, List, Checkbox } from 'react-native-paper';\nimport { getDocumentAsync } from 'expo-document-picker';\nimport { useQuery, gql } from '@apollo/client';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport ColorPicker from '../../input/colorpicker';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport { Query } from '../../../api/schema';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\n\nconst QUERY_FEDERATIONS = gql`\n  query QueryFederations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await getDocumentAsync({\n        multiple: false,\n        type: 'image',\n      })) as { uri: string };\n\n      dispatch(actions.forms.dropzone.setField(['banner', result.uri as string]));\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch]);\n\n  console.log(state.fields);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Banner\" />\n          <Card.Cover\n            source={{\n              uri: state.fields.banner.value || 'https://picsum.photos/700',\n            }}\n            resizeMode=\"cover\"\n            style={{ width: '100%' }}\n          />\n          <Card.Actions style={{ justifyContent: 'flex-end' }}>\n            <Button onPress={onPickImage}>Upload</Button>\n          </Card.Actions>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview\n              primaryColor={state.fields.primaryColor.value || '#000000'}\n              secondaryColor={state.fields.secondaryColor.value || '#FFFFFF'}\n            />\n\n            <WebPreview\n              primaryColor={state.fields.primaryColor.value || '#000000'}\n              secondaryColor={state.fields.secondaryColor.value || '#FFFFFF'}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Accent color\"\n          helperText=\"Accent color is used for highlights, like buttons and loading bars\"\n          error={state.fields.secondaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['secondaryColor', color]))}\n          value={state.fields.secondaryColor.value || '#FFFFFF'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title=\"Public\"\n            description=\"Your dropzone will not be available in the app if this is disabled\"\n            onPress={() =>\n              dispatch(actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic.value]))\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic.value])\n                  )\n                }\n                status={state.fields.isPublic.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n  },\n  skeletonCardCheckbox: {\n    minHeight: 200,\n    marginVertical: 16,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ProgressBar } from 'react-native-paper';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { Dropzone, Mutation, Query } from '../../../api/schema';\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nconst QUERY_DROPZONE_DETAILS = gql`\n  query QueryDropzoneDetails($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n      primaryColor\n      secondaryColor\n      lat\n      lng\n      planes {\n        id\n        name\n        registration\n      }\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $banner: String\n    $lat: Float\n    $lng: Float\n    $federationId: Int!\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n        lat\n        lng\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{ key: string; name: string; params: { dropzone: Dropzone } }>();\n  const { dropzone } = route.params;\n  const navigation = useNavigation();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_DETAILS, {\n    variables: { dropzoneId: Number(dropzone.id) },\n  });\n\n  React.useEffect(() => {\n    if (data?.dropzone?.id) {\n      console.log('dz', data.dropzone);\n      dispatch(actions.forms.dropzone.setOpen(data.dropzone));\n    }\n  }, [data?.dropzone, data?.dropzone?.id, dispatch]);\n\n  const [mutationUpdateDropzone, mutation] = useMutation<Mutation>(MUTATION_UPDATE_DROPZONE);\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n      isPublic,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone({\n          variables: {\n            id: Number(dropzone?.id),\n            name: name.value,\n            lat: lat.value,\n            lng: lng.value,\n            banner: banner.value || null,\n            primaryColor: primaryColor.value,\n            secondaryColor: secondaryColor.value,\n            federationId: Number(federation?.value?.id),\n            isCreditSystemEnabled: !!isCreditSystemEnabled,\n            isPublic: !!isPublic,\n          },\n        });\n\n        result?.data?.updateDropzone?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        if (result?.data?.updateDropzone?.errors?.length) {\n          return dispatch(\n            actions.notifications.showSnackbar({\n              message: result?.data?.updateDropzone?.errors[0],\n              variant: 'error',\n            })\n          );\n        }\n        if (!result?.data?.updateDropzone?.fieldErrors?.length) {\n          // No errors:\n          if (result.data?.updateDropzone?.dropzone) {\n            dispatch(\n              actions.global.setDropzone({\n                ...(globalState.currentDropzone || {}),\n                ...result?.data?.updateDropzone?.dropzone,\n              })\n            );\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `Saved`,\n                variant: 'success',\n              })\n            );\n            navigation.goBack();\n          }\n        }\n        return null;\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n    return null;\n  }, [\n    state.fields,\n    dispatch,\n    mutationUpdateDropzone,\n    dropzone?.id,\n    globalState.currentDropzone,\n    navigation,\n  ]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <ScrollableScreen\n        style={{ backgroundColor: '#f4f5f5' }}\n        contentContainerStyle={styles.content}\n      >\n        <DropzoneForm loading={loading} />\n        <View style={styles.fields}>\n          <Button\n            mode=\"contained\"\n            disabled={mutation.loading}\n            onPress={onSave}\n            loading={mutation.loading}\n          >\n            Save\n          </Button>\n        </View>\n      </ScrollableScreen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 500,\n    padding: 48,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function DropzoneForm() {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value}\n        onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Registration\"\n        error={!!state.fields.registration.error}\n        value={state.fields.registration.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['registration', newValue]))\n        }\n      />\n      <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n        {state.fields.registration.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"hours\"\n        error={!!state.fields.hours.error}\n        value={state.fields.hours?.value?.toString()}\n        placeholder=\"Optional\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['hours', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.hours.error ? 'error' : 'info'}>\n        {state.fields.hours.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Min slots\"\n        error={!!state.fields.minSlots.error}\n        value={state.fields.minSlots.value?.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['minSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.minSlots.error ? 'error' : 'info'}>\n        {state.fields.minSlots.error || 'Minimum tickets required to send it'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Max slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error ||\n          'Maximum amount of jumpers who can be manifested on one load'}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    width: '100%',\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\n\nimport { Mutation } from '../../api/schema';\nimport PlaneForm from '../forms/plane/PlaneForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        ...plane\n\n        dropzone {\n          id\n          planes {\n            ...plane\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n  fragment plane on Plane {\n    id\n    name\n    registration\n    minSlots\n    maxSlots\n    hours\n    nextMaintenanceHours\n\n    dropzone {\n      id\n      name\n      planes {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n      }\n    }\n  }\n`;\n\ninterface IPlaneDialogProps {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function CreatePlaneScreen(props: IPlaneDialogProps) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreatePlane, create] = useMutation<Mutation>(MUTATION_CREATE_PLANE);\n  const [mutationUpdatePlane, update] = useMutation<Mutation>(MUTATION_UPDATE_PLANE);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.registration.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['registration', 'Registration is too short']));\n    }\n\n    if (!state.fields.maxSlots.value) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['maxSlots', 'Max slots must be specified']));\n    }\n\n    return !hasError;\n  }, [\n    dispatch,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.registration.value,\n  ]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots, hours, nextMaintenanceHours } = state.fields;\n\n    const mutation = state.original?.id ? mutationUpdatePlane : mutationCreatePlane;\n\n    if (validate()) {\n      try {\n        const result = await mutation({\n          variables: {\n            ...(state.original?.id\n              ? { id: Number(state.original.id) }\n              : { dropzoneId: Number(currentDropzone?.dropzone?.id) }),\n            name: name.value,\n            registration: registration.value,\n            minSlots: minSlots.value,\n            maxSlots: maxSlots.value,\n            hours: hours.value,\n            nextMaintenanceHours: nextMaintenanceHours.value,\n          },\n        });\n\n        const payload = state.original?.id ? result?.data?.updatePlane : result?.data?.createPlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'hours':\n                return dispatch(actions.forms.plane.setFieldError(['hours', message]));\n              case 'next_maintenance_hours':\n                return dispatch(\n                  actions.forms.plane.setFieldError(['nextMaintenanceHours', message])\n                );\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n    onClose,\n    state.fields,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={[0, 580]}\n      buttonLabel=\"Save\"\n      buttonAction={onSave}\n      loading={create.loading || update.loading}\n      onClose={() => {\n        onClose();\n        dispatch(actions.forms.plane.reset());\n      }}\n    >\n      <PlaneForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PlaneDialog from '../../../components/dialogs/Plane';\nimport useRestriction from '../../../hooks/useRestriction';\nimport SwipeActions from '../../../components/layout/SwipeActions';\n\nconst QUERY_PLANES = gql`\n  query QueryPlanes($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      planes {\n        id\n        name\n        registration\n        hours\n        minSlots\n        maxSlots\n        nextMaintenanceHours\n        createdAt\n      }\n    }\n  }\n`;\n\nconst MUTATION_DELETE_PLANE = gql`\n  mutation DeletePlane($id: Int!) {\n    deletePlane(input: { id: $id }) {\n      errors\n      plane {\n        id\n        dropzone {\n          id\n          planes {\n            name\n            registration\n            hours\n            minSlots\n            maxSlots\n            nextMaintenanceHours\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.plane);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n    },\n  });\n\n  const [deletePlane] = useMutation<Mutation>(MUTATION_DELETE_PLANE);\n  const dispatch = useAppDispatch();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n\n  return (\n    <>\n      <ScrollableScreen\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n      >\n        <ProgressBar visible={loading} color={global.theme.colors.accent} />\n\n        {data?.dropzone?.planes?.length ? null : (\n          <NoResults\n            title=\"No planes?\"\n            subtitle=\"You need to have at least one plane to manifest loads\"\n          />\n        )}\n\n        {!data?.dropzone?.planes?.length ? null : (\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Name</DataTable.Title>\n              <DataTable.Title numeric>Registration</DataTable.Title>\n              <DataTable.Title numeric>Slots</DataTable.Title>\n            </DataTable.Header>\n            {data?.dropzone?.planes?.map((plane) => (\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: async () => {\n                    const { data: result } = await deletePlane({\n                      variables: { id: Number(plane.id) },\n                    });\n\n                    if (result?.deletePlane?.errors?.length) {\n                      dispatch(\n                        actions.notifications.showSnackbar({\n                          message: result.deletePlane.errors[0],\n                          variant: 'error',\n                        })\n                      );\n                    }\n                  },\n                }}\n              >\n                <DataTable.Row\n                  pointerEvents=\"none\"\n                  onPress={() => {\n                    dispatch(actions.forms.plane.setOpen(plane));\n                  }}\n                >\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            ))}\n          </DataTable>\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreatePlane}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.plane.setOpen(true))}\n          label=\"New plane\"\n        />\n      </ScrollableScreen>\n      <PlaneDialog open={state.open} onClose={() => dispatch(actions.forms.plane.setOpen(false))} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List, TextInput } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          mode=\"outlined\"\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChangeText={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          value={value as string}\n          mode=\"outlined\"\n          onChangeText={(text) => onChange({ ...config, value: text as string })}\n          label={config.label || ''}\n          keyboardType=\"number-pad\"\n          style={{ marginVertical: 8 }}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          timestamp={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"delete\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from '../../../components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_RIG_INSPECTION = gql`\n  query RigInspection($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_FORM = gql`\n  mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n    updateFormTemplate(\n      input: { id: $formId, attributes: { dropzoneId: $dropzoneId, definition: $definition } }\n    ) {\n      formTemplate {\n        id\n        name\n        definition\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const { data } = useQuery<Query>(QUERY_RIG_INSPECTION, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useMutation<Mutation>(MUTATION_UPDATE_FORM);\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(actions.forms.rigInspectionTemplate.setOpen(data.dropzone.rigInspectionTemplate));\n    }\n  }, [data?.dropzone.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Template saved',\n          variant: 'success',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <Card style={{ width: '100%' }}>\n        <Card.Title title=\"Rig Inspection Form Template\" />\n\n        <Card.Content>\n          <RigInspectionTemplateForm />\n        </Card.Content>\n\n        <Card.Actions>\n          <Button\n            disabled={!canEdit}\n            mode=\"contained\"\n            loading={mutation.loading}\n            onPress={() => updateForm()}\n            style={{ width: '100%' }}\n          >\n            Save template\n          </Button>\n        </Card.Actions>\n      </Card>\n    </ScrollableScreen>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_DROPZONE_RIGS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigs {\n        id\n        make\n        isPublic\n        model\n        serial\n        rigType\n        repackExpiresAt\n        canopySize\n        packValue\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateDropzoneRig($id: Int!, $isPublic: Boolean) {\n    updateRig(input: { id: $id, attributes: { isPublic: $isPublic } }) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        isPublic\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        dropzone {\n          id\n          rigs {\n            id\n            make\n            model\n            isPublic\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_RIGS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    dispatch(\n                      actions.notifications.showSnackbar({\n                        message: result?.updateRig.errors[0],\n                        variant: 'error',\n                      })\n                    );\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Mutation, Permission, UserRole } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: UserRole;\n  permissionName: string;\n}\n\nconst MUTATION_UPDATE_ROLE = gql`\n  mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n    updateRole(input: { id: $roleId, permission: $permissionName, enabled: $enabled }) {\n      role {\n        id\n        name\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useMutation<Mutation>(MUTATION_UPDATE_ROLE);\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'error',\n                  })\n                )\n              );\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PermissionListItem from '../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        flexGrow: 1,\n        paddingHorizontal: 16,\n      }}\n      layout={[\n        {\n          key: 'first',\n          height: 175,\n          marginTop: 70,\n          marginBottom: 35,\n          width: '100%',\n        },\n        { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n      ]}\n    />\n  ) : (\n    <Tabs defaultIndex={0} mode=\"scrollable\">\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Manifesting\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket types\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket addons\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Query } from '../../../api/schema.d';\nimport DatePicker from '../../../components/input/date_picker/DatePicker';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: Int!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            user {\n              id\n              name\n              license {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          timestamp={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, List } from 'react-native-paper';\nimport { xor } from 'lodash';\nimport { Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_TICKET_TYPES = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    ticketTypes(dropzoneId: $dropzoneId) {\n      id\n      cost\n      currency\n      name\n      allowManifestingSelf\n\n      extras {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function ExtraForm() {\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const { data } = useQuery<Query>(QUERY_TICKET_TYPES, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value}\n        onChangeText={(newValue) => dispatch(actions.forms.extra.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.extra.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || ''}\n      </HelperText>\n\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        {data?.ticketTypes.map((ticket) => (\n          <Checkbox.Item\n            label={ticket.name || ''}\n            status={\n              state.fields.ticketTypeIds.value.includes(Number(ticket.id)) ? 'checked' : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.extra.setField([\n                  'ticketTypeIds',\n                  xor(state.fields.ticketTypeIds.value, [Number(ticket.id)]),\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { gql, useMutation } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { actions as snackbar } from '../../../components/notifications';\n\nimport { Mutation, Extra } from '../../../api/schema';\nimport ExtraForm from '../../../components/forms/extra/ExtraForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        id\n        name\n\n        ticketTypes {\n          id\n          name\n          cost\n          altitude\n          allowManifestingSelf\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateExtraScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n  const route = useRoute<{ key: string; name: string; params: { extra: Extra } }>();\n  const { extra } = route.params;\n\n  React.useEffect(() => {\n    dispatch(actions.forms.extra.setOpen(extra));\n  }, [dispatch, extra, extra.id]);\n\n  const [mutationUpdateExtra, data] = useMutation<Mutation>(MUTATION_UPDATE_EXTRA);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if (state.fields.name.value.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (Number(state.fields.cost.value) < 0) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['cost', 'Price must be a number']));\n    }\n\n    return !hasError;\n  }, [state.fields, dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, cost, ticketTypeIds } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateExtra({\n          variables: {\n            id: Number(state.original?.id),\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value,\n            cost: cost.value,\n            ticketTypeIds: ticketTypeIds.value,\n          },\n        });\n\n        if (result.data?.updateExtra?.extra) {\n          dispatch(snackbar.showSnackbar({ message: `Saved`, variant: 'success' }));\n          navigation.goBack();\n        }\n      } catch (error) {\n        dispatch(snackbar.showSnackbar({ message: error.message, variant: 'error' }));\n      }\n    }\n  }, [\n    state.fields,\n    state.original?.id,\n    validate,\n    mutationUpdateExtra,\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 48 }}>\n      <MaterialCommunityIcons\n        name=\"ticket-percent\"\n        size={100}\n        color=\"#999999\"\n        style={{ alignSelf: 'center' }}\n      />\n      <ExtraForm />\n      <View style={styles.fields}>\n        <Button mode=\"contained\" disabled={data.loading} onPress={onSave} loading={data.loading}>\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { Mutation } from '../../api/schema';\nimport ExtraForm from '../forms/extra/ExtraForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nconst MUTATION_CREATE_EXTRA = gql`\n  mutation CreateExtra($name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n    createExtra(\n      input: {\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\ninterface ITicketTypeExtraDialog {\n  open: boolean;\n  onClose(): void;\n}\nexport default function TicketTypeExtraDialog(props: ITicketTypeExtraDialog) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreateExtra, create] = useMutation<Mutation>(MUTATION_CREATE_EXTRA);\n  const [mutationUpdateExtra, update] = useMutation<Mutation>(MUTATION_UPDATE_EXTRA);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if (state.fields.name.value.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (Number(state.fields.cost.value) < 0) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['cost', 'Price must be a number']));\n    }\n\n    return !hasError;\n  }, [dispatch, state.fields.cost.value, state.fields.name.value.length]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, cost, ticketTypeIds } = state.fields;\n\n    if (validate()) {\n      const mutation = state?.original?.id ? mutationUpdateExtra : mutationCreateExtra;\n\n      try {\n        const result = await mutation({\n          variables: {\n            ...(state.original?.id ? { id: Number(state.original.id) } : {}),\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value,\n            cost: cost.value,\n            ticketTypeIds: ticketTypeIds.value,\n          },\n        });\n\n        const payload = state.original?.id ? result.data?.updateExtra : result.data?.createExtra;\n\n        if (payload?.errors?.length) {\n          return dispatch(\n            actions.notifications.showSnackbar({\n              message: payload.errors[0],\n              variant: 'error',\n            })\n          );\n        }\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors?.forEach(({ field, message }) => {\n            switch (field) {\n              case 'name':\n                return dispatch(actions.forms.extra.setFieldError(['name', message]));\n              case 'cost':\n                return dispatch(actions.forms.extra.setFieldError(['cost', message]));\n              case 'ticket_type_ids':\n                return dispatch(actions.forms.extra.setFieldError(['ticketTypeIds', message]));\n              default:\n                return null;\n            }\n          });\n        } else if (payload?.extra) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Saved ${payload.extra.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.extra.reset());\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n    return null;\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreateExtra,\n    mutationUpdateExtra,\n    onClose,\n    state.fields,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket addon' : 'New ticket addon'}\n      open={open}\n      onClose={onClose}\n      loading={create.loading || update.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      snapPoints={[300, 500]}\n    >\n      <ExtraForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { View } from '../../../components/Themed';\nimport { Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport TicketTypeExtraDialog from '../../../components/dialogs/TicketTypeExtra';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryExtra($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      extras {\n        id\n        cost\n        name\n        ticketTypes {\n          id\n          altitude\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function ExtrasScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const globalState = useAppSelector((root) => root.global);\n  const formState = useAppSelector((root) => root.forms.extra);\n  const { data, loading } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.accent} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.dropzone?.extras?.map((extra) => (\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.extra.setOpen(extra));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.dropzone?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.extra.setOpen(true))}\n          label=\"New ticket addon\"\n        />\n      </View>\n      <TicketTypeExtraDialog\n        open={formState.open}\n        onClose={() => dispatch(actions.forms.extra.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","/* eslint-disable max-len */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from '../AppBar';\nimport { Dropzone } from '../../api/schema';\n\nimport SettingsScreen from '../../screens/authenticated/settings/SettingsScreen';\n\nimport TicketTypeSettingsScreen from '../../screens/authenticated/ticket_types/TicketTypesScreen';\n\nimport UpdateDropzoneScreen from '../../screens/authenticated/dropzones/UpdateDropzoneScreen';\n\nimport PlanesScreen from '../../screens/authenticated/planes/PlanesScreen';\nimport RigInspectionTemplateScreen from '../../screens/authenticated/settings/RigInspectionTemplateScreen';\n\nimport DropzoneRigsScreen from '../../screens/authenticated/settings/DropzoneRigsScreen';\n\nimport DropzonePermissionScreen from '../../screens/authenticated/settings/DropzonePermissionScreen';\n\nimport DropzoneMasterLogScreen from '../../screens/authenticated/settings/DropzoneMasterLogScreen';\n\nimport UpdateExtraScreen from '../../screens/authenticated/extras/UpdateExtraScreen';\n\nimport ExtrasScreen from '../../screens/authenticated/extras/ExtrasScreen';\n\nexport type ISettingsTabParams = {\n  SettingsScreen: undefined;\n  UpdateDropzoneScreen: { dropzone: Dropzone };\n  TicketTypeSettingsScreen: undefined;\n  PlanesScreen: undefined;\n  PlaneScreen: undefined;\n  TicketTypesScreen: undefined;\n  UpdateExtraScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  DropzonePermissionScreen: undefined;\n  DropzoneMasterLogScreen: undefined;\n};\n\nconst Settings = createStackNavigator<ISettingsTabParams>();\n\nexport default function SettingsTab() {\n  return (\n    <Settings.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Settings.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n      <Settings.Screen\n        name=\"UpdateDropzoneScreen\"\n        component={UpdateDropzoneScreen}\n        options={{ title: 'Basic settings' }}\n      />\n      <Settings.Screen name=\"PlanesScreen\" component={PlanesScreen} options={{ title: 'Planes' }} />\n      <Settings.Screen\n        name=\"TicketTypesScreen\"\n        component={TicketTypeSettingsScreen}\n        options={{ title: 'Ticket types' }}\n      />\n      <Settings.Screen\n        name=\"UpdateExtraScreen\"\n        component={UpdateExtraScreen}\n        options={{ title: 'Update ticket add-on' }}\n      />\n      <Settings.Screen\n        name=\"ExtrasScreen\"\n        component={ExtrasScreen}\n        options={{ title: 'Ticket add-ons' }}\n      />\n      <Settings.Screen\n        name=\"RigInspectionTemplateScreen\"\n        component={RigInspectionTemplateScreen}\n        options={{ title: 'Rig Inspection Form' }}\n      />\n      <Settings.Screen\n        name=\"DropzoneRigsScreen\"\n        component={DropzoneRigsScreen}\n        options={{ title: 'Dropzone rigs' }}\n      />\n      <Settings.Screen\n        name=\"DropzonePermissionScreen\"\n        component={DropzonePermissionScreen}\n        options={{ title: 'Permissions' }}\n      />\n      <Settings.Screen\n        name=\"DropzoneMasterLogScreen\"\n        component={DropzoneMasterLogScreen}\n        options={{ title: 'Master log' }}\n      />\n    </Settings.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.ghost.setField([\n            'exitWeight',\n            state.original.exitWeight?.toString() || '60',\n          ])\n        );\n      }\n\n      if (!state.fields.license.value && state.original?.license?.id) {\n        if (state.original.license.federation) {\n          dispatch(actions.forms.ghost.setFederation(state.original.license.federation));\n        }\n        dispatch(actions.forms.ghost.setField(['license', state.original.license]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.license.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || ''}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onSelect={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostPayload, MutationCreateGhostArgs } from '../schema';\n\nconst MUTATION_CREATE_GHOST = gql`\n  mutation CreateGhost(\n    $name: String!\n    $phone: String\n    $email: String!\n    $roleId: Int!\n    $licenseId: Int\n    $dropzoneId: Int!\n    $exitWeight: Float!\n  ) {\n    createGhost(\n      input: {\n        attributes: {\n          roleId: $roleId\n          name: $name\n          phone: $phone\n          email: $email\n          dropzoneId: $dropzoneId\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationCreateGhostArgs['input']['attributes'], CreateGhostPayload>(\n  MUTATION_CREATE_GHOST,\n  {\n    getPayload: (result) => result.createGhost,\n    validates: {\n      exitWeight: [\n        isRequired('Exit weight must be provided'),\n        isNumeric('Please enter a valid number'),\n      ],\n      email: [\n        isRequired('Please provide a valid email address'),\n        isEmail('Please provide a valid email address'),\n      ],\n      name: [isRequired('Name is required')],\n\n      roleId: [isRequired('You must select a role')],\n    },\n    fieldErrorMap: {\n      license: 'licenseId',\n      exit_weight: 'exitWeight',\n      role: 'roleId',\n    },\n  }\n);\n","import * as React from 'react';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n      console.log(field, value);\n    },\n\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    const { name, license, phone, email, exitWeight, role } = state.fields;\n    try {\n      await mutationCreateGhost.mutate({\n        dropzoneId: globalState.currentDropzoneId as number,\n        name: name.value || '',\n        licenseId: !license.value?.id ? null : Number(license.value?.id),\n        phone: phone.value,\n        exitWeight: Number(exitWeight.value),\n        email: email.value || '',\n        roleId: Number(role?.value?.id),\n      });\n\n      requestAnimationFrame(() => {\n        onSuccess();\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${name.value} has been added to your dropzone`,\n            variant: 'success',\n          })\n        );\n      });\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [state.fields, mutationCreateGhost, globalState.currentDropzoneId, onSuccess, dispatch]);\n\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={[400, 740]}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport NoResults from '../../../components/NoResults';\nimport { Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport CreateGhostDialog from '../../../components/dialogs/Ghost';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction UserCardSkeleton({ width }: { width: number }) {\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 110,\n        width,\n        margin: 4,\n      }}\n      layout={[{ key: 'user-card-container', height: 110, width }]}\n    />\n  );\n}\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: state.searchText,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 360;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns + 8;\n\n  const users = data?.dropzone?.dropzoneUsers?.edges || [];\n  const initialLoading = !users?.length && loading;\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      <FlatList\n        data={initialLoading ? [1, 1, 1, 1, 1] : users}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: Number(global.currentDropzoneId),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={({ item }, idx) => `user-${item?.node?.id || idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 35,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        ListEmptyComponent={() => (\n          <View\n            style={{\n              alignSelf: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <NoResults title=\"No users\" subtitle=\"\" />\n          </View>\n        )}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: contentWidth, alignSelf: 'center' }}\n        renderItem={({ item: edge }) =>\n          edge === 1 ? (\n            <UserCardSkeleton width={cardWidth} />\n          ) : (\n            <Card\n              key={`user-${edge?.node?.id}`}\n              elevation={3}\n              style={{ width: cardWidth, margin: 4 }}\n            >\n              <Card.Content>\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={edge?.node?.user.name}\n                  description={edge?.node?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !edge?.node?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                        size={32}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: edge?.node?.user.image }}\n                        style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                        size={32}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('UserProfileScreen', {\n                      userId: edge?.node?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={styles.fab}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  previous,\n  scene,\n  onSearch,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  return (\n    <Appbar.Header>\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={searchText}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n      )}\n      <MaterialIcons\n        name=\"search\"\n        onPress={() => setSearchVisible(!searchVisible)}\n        color=\"#FFFFFF\"\n        size={24}\n        style={styles.icon}\n      />\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    height: '100%',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { format, startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, List } from 'react-native-paper';\nimport { KeyboardAvoidingView } from 'react-native';\nimport RigInspectionForm from '../../../components/forms/rig_inspection/RigInspectionForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone, { QUERY_DROPZONE } from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Query, Rig, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { QUERY_DROPZONE_USER } from '../../../api/hooks/useDropzoneUser';\n\nconst QUERY_RIG_INSPECTIONS = gql`\n  query RigInspections($dropzoneUserId: Int!, $dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        rigInspections {\n          id\n          isOk\n          definition\n          rig {\n            id\n          }\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          formTemplate {\n            id\n            name\n            definition\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_CREATE_RIG_INSPECTION = gql`\n  mutation CreateRigInspection($dropzoneId: Int, $rigId: Int, $isOk: Boolean, $definition: String) {\n    createRigInspection(\n      input: {\n        attributes: { dropzoneId: $dropzoneId, rigId: $rigId, isOk: $isOk, definition: $definition }\n      }\n    ) {\n      rigInspection {\n        id\n        isOk\n        definition\n        dropzoneUser {\n          id\n          rigInspections {\n            id\n            isOk\n            rig {\n              id\n            }\n            inspectedBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n          }\n        }\n        inspectedBy {\n          id\n          user {\n            id\n            name\n          }\n        }\n        rig {\n          id\n          make\n          model\n        }\n\n        formTemplate {\n          id\n          definition\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{\n    key: string;\n    name: string;\n    params: { rig: Rig; dropzoneUserId: number };\n  }>();\n  const { rig, dropzoneUserId } = route.params;\n  const { data, refetch } = useQuery<Query>(QUERY_RIG_INSPECTIONS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      dropzoneUserId,\n    },\n  });\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    refetch();\n  }, [isFocused, refetch]);\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useMutation<Mutation>(\n    MUTATION_CREATE_RIG_INSPECTION\n  );\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = data?.dropzone?.dropzoneUser?.rigInspections?.some(\n      (inspection) => inspection.rig?.id.toString() === rig.id.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = data?.dropzone?.dropzoneUser?.rigInspections?.find(\n        (record) => record.rig?.id === rig.id\n      );\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          data?.dropzone.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    data?.dropzone?.dropzoneUser?.rigInspections,\n    data?.dropzone.rigInspectionTemplate?.definition,\n    dispatch,\n    rig.id,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzoneId: Number(currentDropzone?.dropzone?.id),\n          rigId: Number(rig.id),\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<Query>({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: QUERY_DROPZONE,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: QUERY_DROPZONE,\n              variables: {\n                dropzoneId: Number(currentDropzone?.dropzone?.id),\n                earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            ...result?.dropzone,\n            dropzoneUser: {\n              ...result?.dropzone?.dropzoneUser,\n              rigInspections: [\n                ...(result?.dropzone?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Rig inspection saved',\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig.id,\n    state.fields,\n    state.ok,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <KeyboardAvoidingView\n        behavior=\"position\"\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          maxWidth: 400,\n          backgroundColor: 'transparent',\n        }}\n      >\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title=\"Rig\" />\n          <Card.Content>\n            <List.Item title=\"Make\" description={rig.make} />\n            <List.Item title=\"Model\" description={rig.model} />\n            <List.Item title=\"Serial\" description={rig.serial} />\n            <List.Item\n              title=\"Repack due\"\n              description={\n                rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'\n              }\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={data?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            <RigInspectionForm />\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) === data?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport { Rig } from '../../api/schema';\n\nimport UsersScreen from '../../screens/authenticated/users/UsersScreen';\nimport SearchableAppBar from '../../screens/authenticated/users/AppBar';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\n\nexport type ISettingsTabParams = {\n  UsersScreen: {\n    select?: boolean;\n    loadId: number;\n    onSelect?(): void;\n  };\n  RigInspectionScreen: { dropzoneUserId: number; rig: Rig };\n  UserProfileScreen: undefined;\n};\n\nconst Settings = createStackNavigator<ISettingsTabParams>();\n\nexport default function SettingsTab() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Settings.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => (\n          <SearchableAppBar\n            {...props}\n            searchText={searchText}\n            searchVisible={isSearchVisible}\n            setSearchVisible={(visible) =>\n              dispatch(actions.screens.users.setSearchVisible(visible))\n            }\n            onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n          />\n        ),\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Settings.Screen\n        name=\"UsersScreen\"\n        component={UsersScreen}\n        options={{ title: 'Dropzone users' }}\n      />\n      <Settings.Screen\n        name=\"UserProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'User' }}\n      />\n      <Settings.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Inspection' }}\n      />\n    </Settings.Navigator>\n  );\n}\n","import { useTheme } from 'react-native-paper';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport ManifestTab from './tabs/manifest';\nimport NotificationTab from './tabs/notifications';\nimport ProfileTab from './tabs/profile';\nimport SettingsTab from './tabs/settings';\nimport UsersTab from './tabs/users';\n\nimport useRestriction from '../hooks/useRestriction';\nimport { Permission } from '../api/schema.d';\n\nexport type IAuthenticatedTabParams = {\n  Manifest: undefined;\n  Profile: undefined;\n  Packing: undefined;\n  Users: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n};\n\nconst BottomTab = createBottomTabNavigator<IAuthenticatedTabParams>();\n\nexport default function AuthenticatedTabBar() {\n  const theme = useTheme();\n\n  const canViewUsers = useRestriction(Permission.ReadUser);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Manifest\"\n      tabBarOptions={{\n        activeTintColor: '#FFFFFF',\n        inactiveBackgroundColor: theme.colors.primary,\n        activeBackgroundColor: theme.colors.primary,\n        inactiveTintColor: '#CCCCCC',\n        showLabel: false,\n        style: {\n          backgroundColor: theme.colors.primary,\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Manifest\"\n        component={ManifestTab}\n        options={{\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons name=\"airplane\" color={color} size={size} />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Notifications\"\n        component={NotificationTab}\n        options={{\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons name=\"bell\" color={color} size={size} />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Profile\"\n        component={ProfileTab}\n        options={{\n          tabBarIcon: ({ size, color, focused }) => (\n            <MaterialCommunityIcons {...{ size, color }} name=\"account-circle\" />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n\n      {canViewUsers && (\n        <BottomTab.Screen\n          name=\"Users\"\n          component={UsersTab}\n          options={{\n            tabBarIcon: ({ size, color, focused }) => (\n              <MaterialCommunityIcons {...{ size, color }} name=\"account-group\" />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n\n      {shouldShowSettings && (\n        <BottomTab.Screen\n          name=\"Settings\"\n          component={SettingsTab}\n          options={{\n            tabBarIcon: ({ size, color, focused }) => (\n              <MaterialCommunityIcons {...{ size, color }} name=\"account-cog\" />\n            ),\n          }}\n        />\n      )}\n    </BottomTab.Navigator>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, FlatList, Dimensions, View } from 'react-native';\nimport { Card, Title, FAB, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Query } from '../../../api/schema.d';\n\nimport NoResults from '../../../components/NoResults';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONES);\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data?.dropzones?.edges || []}\n        numColumns={2}\n        refreshing={loading}\n        onRefresh={() => refetch()}\n        style={{ flex: 1, width: '100%' }}\n        contentContainerStyle={{\n          flexGrow: 1,\n          width: '100%',\n          paddingBottom: 100,\n        }}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" color=\"#FFFFFF\" />\n        )}\n        renderItem={({ item }) => {\n          return (\n            <Card\n              style={{\n                width: Dimensions.get('window').width / 2 - 32,\n                margin: 8,\n              }}\n              onPress={async () => {\n                if (item?.node) {\n                  const shouldPushRoute = !!globalState.currentDropzoneId;\n                  dispatch(actions.global.setDropzone(item.node));\n\n                  if (shouldPushRoute) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    navigation.replace('Authenticated', {\n                      screen: 'HomeScreen',\n                    });\n                  }\n                }\n              }}\n            >\n              {item?.node?.banner ? (\n                <Card.Cover source={{ uri: item?.node?.banner as string }} />\n              ) : (\n                <View\n                  style={[\n                    styles.dzIcon,\n                    { backgroundColor: item?.node?.primaryColor || undefined },\n                  ]}\n                >\n                  <Avatar.Icon\n                    style={{ backgroundColor: item?.node?.secondaryColor || undefined }}\n                    icon=\"airplane-takeoff\"\n                  />\n                </View>\n              )}\n\n              <Card.Content>\n                <Title>{item?.node?.name}</Title>\n              </Card.Content>\n            </Card>\n          );\n        }}\n      />\n\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('DropzoneSetupScreen');\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n    backgroundColor: '#FF1414',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzonePayload } from '../schema';\n\nexport const MUTATION_CREATE_DROPZONE = gql`\n  mutation CreateDropzone(\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n  ) {\n    createDropzone(\n      input: {\n        attributes: {\n          name: $name\n          banner: $banner\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          lat: $lat\n          lng: $lng\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string;\n    federationId: number;\n    primaryColor: string;\n    secondaryColor: string;\n    lat: number;\n    lng: number;\n  },\n  CreateDropzonePayload\n>(MUTATION_CREATE_DROPZONE, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federation: 'federationId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\n\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport useMutationCreateDropzone from '../../../api/hooks/useMutationCreateDropzone';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nexport default function CreateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  const createDropzone = useMutationCreateDropzone({\n    onError: (e: string) =>\n      dispatch(actions.notifications.showSnackbar({ message: e, variant: 'error' })),\n    onFieldError: (field, error) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as string, error])),\n    // eslint-disable-next-line max-len\n    onSuccess: (payload) =>\n      payload?.dropzone && dispatch(actions.global.setDropzone(payload.dropzone)),\n  });\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 32 }}>\n      <DropzoneForm loading={createDropzone.loading} />\n      <View style={styles.fields}>\n        <Button\n          mode=\"contained\"\n          disabled={createDropzone.loading}\n          loading={createDropzone.loading}\n          onPress={() =>\n            createDropzone.mutate({\n              name: state.fields.name.value || '',\n              banner: state.fields.banner.value || null,\n              federationId: Number(state.fields.federation.value?.id),\n            })\n          }\n        >\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport CreateDropzoneScreen from '../screens/authenticated/dropzones/CreateDropzoneScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"Dropzones\"\n    >\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n      <Stack.Screen name=\"CreateDropzoneScreen\" component={CreateDropzoneScreen} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, StyleSheet } from 'react-native';\nimport { Button, HelperText, TextInput } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { View } from '../../../components/Themed';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Mutation } from '../../../api/schema';\nimport { primaryColor } from '../../../constants/Colors';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNGs are allowed\nimport logo from '../../../../assets/images/logo.png';\n\nconst MUTATION_LOG_IN = gql`\n  mutation UserLogin($email: String!, $password: String!) {\n    userLogin(email: $email, password: $password) {\n      authenticatable {\n        id\n        email\n        name\n        phone\n        createdAt\n        updatedAt\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useMutation<Mutation>(MUTATION_LOG_IN);\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        console.log({ result });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: e.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [dispatch, mutationLogin, state.fields.email.value, state.fields.password.value]);\n\n  return (\n    <View style={styles.container}>\n      <Image source={logo} style={{ height: 300, width: '100%' }} resizeMode=\"contain\" />\n      <KeyboardAvoidingView style={styles.fields} behavior=\"padding\">\n        <TextInput\n          label=\"Email\"\n          mode=\"outlined\"\n          value={state.fields.email.value}\n          onChangeText={(newValue) => {\n            dispatch(actions.screens.login.setEmail(newValue));\n          }}\n        />\n        <HelperText type=\"error\">{state.fields.email.error || ' '}</HelperText>\n\n        <TextInput\n          label=\"Password\"\n          mode=\"outlined\"\n          value={state.fields.password.value}\n          secureTextEntry\n          onChangeText={(newValue) => {\n            dispatch(actions.screens.login.setPassword(newValue));\n          }}\n          error={!!state.fields.password.error}\n        />\n        <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={onLogin}\n          loading={data.loading}\n        >\n          Log in\n        </Button>\n\n        <Button\n          labelStyle={styles.textButtonLabel}\n          style={styles.textButton}\n          onPress={() => navigation.navigate('SignUpScreen')}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  textButton: {\n    marginTop: 10,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserSignUpArgs, UserSignUpPayload } from '../schema';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserSignUpArgs, UserSignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userSignUp,\n  fieldErrorMap: {\n    license: 'licenseId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, StyleSheet } from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'A confirmation link has been sent to your email',\n          variant: 'success',\n        })\n      );\n\n      navigation.navigate('LoginScreen');\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView style={styles.fields} behavior=\"position\">\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value}\n          onChangeText={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n          {state.fields.exitWeight.error || ''}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Email\"\n          error={!!state.fields.email.error}\n          value={state.fields.email.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['email', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Phone\"\n          error={!!state.fields.phone.error}\n          value={state.fields.phone.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['phone', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.phone.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Repeat password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport LoginScreen from '../screens/unauthenticated/login/LoginScreen';\nimport SignUpScreen from '../screens/unauthenticated/signup/SignUpScreen';\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator();\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport FederationSelect from '../../../../components/input/dropdown_select/FederationSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction NameAndFederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Basic information\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n        </Card>\n        <Card style={styles.card}>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default NameAndFederationWizardSceen;\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { calculateLatLngDelta } from '../../../../utils/calculateLatLngDelta';\nimport Map from '../../../../components/map/Map';\n\nfunction LocationWizardStep(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        console.log(status);\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    console.log({ visible });\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n\n  return (\n    <WizardScreen\n      disableScroll\n      style={styles.container}\n      containerStyle={{ paddingHorizontal: 0 }}\n      {...props}\n    >\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setAnimating(false);\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <Text style={styles.title}>Pick location</Text>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 140,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction AircraftWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.plane);\n  const [minSlots, setMinSlots] = React.useState(state?.fields?.minSlots?.value || 0);\n  const [maxSlots, setMaxSlots] = React.useState(state?.fields?.maxSlots?.value || 0);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Aircraft\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Information</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Name\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value}\n            onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Registration\"\n            error={!!state.fields.registration.error}\n            value={state.fields.registration.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.plane.setField(['registration', newValue]))\n            }\n          />\n          <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n            {state.fields.registration.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Minimum slots</List.Subheader>\n            <Text style={styles.cardValue}>{minSlots || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={maxSlots || 34}\n              step={1}\n              value={minSlots}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onValueChange={(value) => setMinSlots(value)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.plane.setField(['minSlots', minSlots]))\n              }\n            />\n          </View>\n\n          <HelperText type={state.fields.minSlots?.error ? 'error' : 'info'}>\n            {state.fields.minSlots?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Max slots</List.Subheader>\n            <Text style={styles.cardValue}>{maxSlots || 34}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={2}\n              maximumValue={34}\n              step={1}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              value={maxSlots}\n              onValueChange={(value) => setMaxSlots(value)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.plane.setField(['maxSlots', Number(maxSlots)]))\n              }\n            />\n          </View>\n\n          <HelperText type={state.fields.maxSlots?.error ? 'error' : 'info'}>\n            {state.fields.maxSlots?.error || 'Max available slots on this aircraft'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 4 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default AircraftWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { PhonePreview, WebPreview } from '../../../../components/theme_preview';\nimport ColorPicker from '../../../../components/input/colorpicker';\n\nfunction ReserveRepackWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Branding\">\n      <View style={styles.content}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview\n            primaryColor={state.fields.primaryColor.value || '#000000'}\n            secondaryColor={state.fields.secondaryColor.value || '#ffffff'}\n          />\n\n          <WebPreview\n            primaryColor={state.fields.primaryColor.value || '#000000'}\n            secondaryColor={state.fields.secondaryColor.value || '#ffffff'}\n          />\n        </View>\n\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n\n        <ColorPicker\n          title=\"Accent color\"\n          helperText=\"Accent color is used for highlights, like buttons and loading bars\"\n          error={state.fields.secondaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['secondaryColor', color]))}\n          value={state.fields.secondaryColor.value || '#FFFFFF'}\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default ReserveRepackWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { useAppSelector } from '../../../../state';\nimport { Permission, Query } from '../../../../api/schema.d';\nimport PermissionListItem from '../../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzonePermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\ninterface IPermissionWizardScreen extends IWizardScreenProps {\n  permission: Permission;\n  title: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useLazyQuery<Query>(QUERY_DROPZONE_PERMISSIONS);\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          dropzoneId: Number(dropzoneForm.original.id),\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <Card>\n            <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n              {data?.dropzone?.roles?.map((role) => (\n                <PermissionListItem\n                  permissionName={permission}\n                  role={role}\n                  title={capitalize(role?.name?.replace(/_/, ' '))}\n                />\n              ))}\n            </Card.Content>\n          </Card>\n        )}\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n    marginBottom: 16,\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, Menu, Paragraph, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n\nfunction TicketTypeWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [price, setPrice] = React.useState(0);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Tickets\">\n      <Paragraph style={styles.paragraph}>You can add more tickets later under Settings</Paragraph>\n\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['name', newValue]))\n            }\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Price</List.Subheader>\n            <Text style={styles.cardValue}>${price || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={500}\n              step={1}\n              value={price}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onSlidingComplete={() => dispatch(actions.forms.ticketType.setField(['cost', price]))}\n              onValueChange={setPrice}\n            />\n          </View>\n\n          <HelperText type={state.fields.cost?.error ? 'error' : 'info'}>\n            {state.fields.cost?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            contentStyle={{ width: 300 }}\n            anchor={\n              <TouchableOpacity onPress={() => setAltitudeMenuOpen(true)}>\n                <View style={styles.cardTitle}>\n                  <List.Subheader>Altitude</List.Subheader>\n                  <Text style={styles.cardValue}>\n                    {state.fields.altitude.value &&\n                    [4000, 14000].includes(state.fields.altitude.value)\n                      ? {\n                          '14000': 'Height',\n                          '4000': 'Hop n Pop',\n                        }[state.fields.altitude.value.toString()]\n                      : 'Custom'}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            }\n          >\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Hop n Pop\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Height\"\n              right={() => <List.Icon icon=\"airplane-takeoff\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Other\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n          </Menu>\n\n          {(!state.fields.altitude.value ||\n            ![4000, 14000].includes(state.fields.altitude.value)) && (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Custom altitude\"\n              error={!!state.fields.altitude.error}\n              value={state.fields.altitude?.value?.toString()}\n              onChangeText={(newValue) =>\n                dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n              }\n            />\n          )}\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  paragraph: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    // fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    marginHorizontal: 16,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default TicketTypeWizardScreen;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs, UpdateDropzonePayload } from '../schema';\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  UpdateDropzonePayload\n>(MUTATION_UPDATE_DROPZONE, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreatePlanePayload } from '../schema';\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    registration: string;\n    dropzoneId: number;\n    minSlots: number;\n    maxSlots: number;\n    hours?: number;\n    nextMaintenanceHours?: number;\n  },\n  CreatePlanePayload\n>(MUTATION_CREATE_PLANE, {\n  getPayload: (result) => result.createPlane,\n  fieldErrorMap: {\n    dropzone: 'dropzoneId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    registration: [isRequired('Registration is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdatePlaneArgs, UpdatePlanePayload } from '../schema';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdatePlaneArgs['input']['attributes'],\n  UpdatePlanePayload\n>(MUTATION_UPDATE_PLANE, {\n  getPayload: (result) => result.updatePlane,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationCreateTicketTypeArgs, CreateTicketPayload } from '../schema';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  MutationCreateTicketTypeArgs['input']['attributes'],\n  CreateTicketPayload\n>(MUTATION_CREATE_TICKET_TYPE, {\n  getPayload: (result) => result.createTicketType,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateTicketTypeArgs, UpdateTicketPayload } from '../schema';\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketType(\n    $id: Int!\n    $name: String\n    $cost: Float\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n  ) {\n    updateTicketType(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          cost: $cost\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateTicketTypeArgs['input']['attributes'],\n  UpdateTicketPayload\n>(MUTATION_UPDATE_TICKET_TYPE, {\n  getPayload: (result) => result.updateTicketType,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DropzoneFields } from '../../../components/forms/dropzone/slice';\nimport { PlaneFields } from '../../../components/forms/plane/slice';\nimport { TicketTypeFields } from '../../../components/forms/ticket_type/slice';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport NameAndFederationStep from './steps/Name';\nimport LocationStep from './steps/Location';\nimport AircraftStep from './steps/Aircraft';\nimport ThemingStep from './steps/Theming';\nimport PermissionStep from './steps/Permissions';\nimport TicketTypeStep from './steps/TicketType';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useMutationCreateDropzone from '../../../api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from '../../../api/hooks/useMutationUpdateDropzone';\nimport useMutationCreatePlane from '../../../api/hooks/useMutationCreatePlane';\nimport useMutationUpdatePlane from '../../../api/hooks/useMutationUpdatePlane';\nimport useMutationCreateTicketType from '../../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../../api/hooks/useMutationUpdateTicketType';\nimport { Permission } from '../../../api/schema.d';\n\nfunction DropzoneSetupScreen() {\n  const aircraft = useAppSelector((root) => root.forms.plane);\n  const ticket = useAppSelector((root) => root.forms.ticketType);\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationCreatePlane = useMutationCreatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationUpdatePlane = useMutationUpdatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationCreateTicketType = useMutationCreateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n  const mutationUpdateTicketType = useMutationUpdateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n\n  const onBasicInfoNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void): Promise<void> => {\n      if (!dropzone.fields.name.value) {\n        dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n        return;\n      }\n      if (!dropzone.fields.federation.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError([\n            'federation',\n            'Your dropzone must have an associated organization',\n          ])\n        );\n        return;\n      }\n\n      setIndex(index + 1);\n    },\n    [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]\n  );\n\n  const onThemingNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!dropzone.fields.primaryColor.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n        );\n        return;\n      }\n      if (!dropzone.fields.secondaryColor.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError(['secondaryColor', 'Please pick an accent color'])\n        );\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !dropzone.original?.id\n        ? await mutationCreateDropzone.mutate({\n            federationId: Number(dropzone.fields.federation.value?.id),\n            name: dropzone.fields.name.value || '',\n            banner: '',\n            primaryColor: dropzone.fields.primaryColor.value,\n            secondaryColor: dropzone.fields.secondaryColor.value,\n            lat: dropzone.fields.lat.value as number,\n            lng: dropzone.fields.lng.value as number,\n          })\n        : await mutationUpdateDropzone.mutate({\n            id: Number(dropzone.original.id),\n            federationId: Number(dropzone.fields.federation.value?.id),\n            name: dropzone.fields.name.value || '',\n            primaryColor: dropzone.fields.primaryColor.value,\n            secondaryColor: dropzone.fields.secondaryColor.value,\n            lat: dropzone.fields.lat.value,\n            lng: dropzone.fields.lng.value,\n            banner: '',\n          });\n\n      if (!result?.errors?.length && result?.dropzone?.id) {\n        dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n        dispatch(actions.global.setDropzone(result?.dropzone));\n        if (result.dropzone.primaryColor) {\n          dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n        }\n        if (result.dropzone.secondaryColor) {\n          dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n        }\n        setIndex(index + 1);\n      }\n    },\n    [\n      dispatch,\n      dropzone.fields.federation.value?.id,\n      dropzone.fields.lat.value,\n      dropzone.fields.lng.value,\n      dropzone.fields.name.value,\n      dropzone.fields.primaryColor.value,\n      dropzone.fields.secondaryColor.value,\n      dropzone.original?.id,\n      mutationCreateDropzone,\n      mutationUpdateDropzone,\n    ]\n  );\n\n  const onAircraftNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!aircraft.fields.name.value) {\n        dispatch(actions.forms.plane.setFieldError(['name', 'You must name your aircraft']));\n        return;\n      }\n      if (!aircraft.fields.registration.value) {\n        dispatch(\n          actions.forms.plane.setFieldError([\n            'registration',\n            'Please provide aircraft registration',\n          ])\n        );\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !aircraft.original?.id\n        ? await mutationCreatePlane.mutate({\n            dropzoneId: Number(dropzone?.original?.id),\n            name: aircraft.fields.name.value,\n            registration: aircraft.fields.registration.value,\n            minSlots: Number(aircraft.fields.minSlots.value),\n            maxSlots: Number(aircraft.fields.maxSlots.value),\n          })\n        : await mutationUpdatePlane.mutate({\n            id: Number(aircraft.original.id),\n            name: aircraft.fields.name.value,\n            registration: aircraft.fields.registration.value,\n            minSlots: aircraft.fields.minSlots.value,\n            maxSlots: aircraft.fields.maxSlots.value,\n          });\n\n      if (!result?.errors?.length && result?.plane?.id) {\n        dispatch(actions.forms.plane.setOpen(result?.plane));\n        setIndex(index + 1);\n      }\n    },\n    [\n      aircraft.fields.maxSlots.value,\n      aircraft.fields.minSlots.value,\n      aircraft.fields.name.value,\n      aircraft.fields.registration.value,\n      aircraft.original?.id,\n      dispatch,\n      dropzone?.original?.id,\n      mutationCreatePlane,\n      mutationUpdatePlane,\n    ]\n  );\n\n  const onTicketTypeNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!ticket.fields.name.value) {\n        dispatch(actions.forms.ticketType.setFieldError(['name', 'You must name your ticket']));\n        return;\n      }\n\n      if (!ticket.fields.cost.value) {\n        dispatch(actions.forms.ticketType.setFieldError(['cost', 'Tickets must have a price']));\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !ticket.original?.id\n        ? await mutationCreateTicketType.mutate({\n            dropzoneId: Number(dropzone.original?.id),\n            name: ticket.fields.name.value,\n            cost: ticket.fields.cost.value,\n            altitude: ticket.fields.altitude.value,\n            isTandem: false,\n            allowManifestingSelf: true,\n          })\n        : await mutationUpdateTicketType.mutate({\n            id: Number(ticket.original.id),\n            name: ticket.fields.name.value,\n            cost: ticket.fields.cost.value,\n            altitude: ticket.fields.altitude.value,\n            isTandem: false,\n            allowManifestingSelf: true,\n          });\n\n      if (!result?.errors?.length && result?.ticketType?.id) {\n        dispatch(actions.forms.ticketType.setOpen(result.ticketType));\n        setIndex(index + 1);\n      }\n    },\n    [\n      ticket.fields.name.value,\n      ticket.fields.cost.value,\n      ticket.fields.altitude.value,\n      ticket.original?.id,\n      mutationCreateTicketType,\n      dropzone.original?.id,\n      mutationUpdateTicketType,\n      dispatch,\n    ]\n  );\n\n  return (\n    <Wizard>\n      <NameAndFederationStep\n        onBack={() => {\n          dispatch(actions.forms.dropzoneWizard.setOpen(false));\n          dispatch(actions.forms.dropzoneWizard.reset());\n          dispatch(actions.forms.ticketType.setOpen(false));\n          dispatch(actions.forms.plane.setOpen(false));\n          dispatch(actions.forms.dropzone.setOpen(false));\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.goBack();\n        }}\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onNext={onBasicInfoNext}\n      />\n      <LocationStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => setIndex(idx + 1)}\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n      />\n\n      <ThemingStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onThemingNext}\n        loading={mutationCreateDropzone.loading || mutationUpdateDropzone.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <AircraftStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onAircraftNext}\n        loading={mutationCreatePlane.loading || mutationUpdatePlane.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <TicketTypeStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onTicketTypeNext}\n        loading={mutationCreateTicketType.loading || mutationUpdateTicketType.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <PermissionStep\n        title=\"Who can manifest?\"\n        permission={Permission.CreateSlot}\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => setIndex(idx + 1)}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <PermissionStep\n        title=\"Manifest other people?\"\n        permission={Permission.CreateUserSlot}\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => {\n          setIndex(idx + 1);\n        }}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <WizardCompleteStep\n        title=\"Setup complete\"\n        subtitle=\"You can configure settings under the Settings screen\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={() => {\n          dispatch(actions.global.setDropzone(dropzone.original));\n          if (dropzone.fields.primaryColor.value) {\n            dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n          }\n          if (dropzone.fields.secondaryColor.value) {\n            dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n          }\n          dispatch(actions.global.setDropzone(dropzone.original));\n\n          dispatch(actions.forms.dropzoneWizard.setOpen(false));\n          dispatch(actions.forms.dropzoneWizard.reset());\n          dispatch(actions.forms.ticketType.setOpen(false));\n          dispatch(actions.forms.plane.setOpen(false));\n          dispatch(actions.forms.dropzone.setOpen(false));\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.dropzone.reset());\n\n          // Set complete-flag to force navigation from dropzone screen\n          dispatch(actions.forms.dropzoneWizard.complete());\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          navigation.replace('Authenticated', { screen: 'HomeScreen' });\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { account_confirmation_success?: string };\n  }>();\n\n  return route?.params?.account_confirmation_success === 'true' ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong. Please contact support</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#FF0000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    color: '#FFFFFF',\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    color: '#FFFFFF',\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport AuthenticatedRoutes from './Authenticated';\nimport LimboRoutes from './LimboRoutes';\nimport UnauthenticatedRoutes from './Unauthenticated';\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport DropzoneSetupScreen from '../screens/authenticated/dropzone_setup/DropzoneSetupScreen';\nimport ConfirmUserScreen from '../screens/unauthenticated/signup/ConfirmUserScreen';\n\nexport type TRootNavigatorRouteParams = {\n  Authenticated: undefined;\n  Unauthenticated: undefined;\n  // eslint-disable-next-line camelcase\n  confirm: { account_confirmation_success?: boolean };\n  Dropzones: undefined;\n  DropzonesScreen: undefined;\n  DropzoneSetupScreen: undefined;\n  NotFound: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<TRootNavigatorRouteParams>();\nconst Drawer = createDrawerNavigator<TRootNavigatorRouteParams>();\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={AuthenticatedRoutes} />\n        ) : (\n          <Stack.Screen name=\"Dropzones\" component={LimboRoutes} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={UnauthenticatedRoutes} />\n      )}\n      <Stack.Screen name=\"DropzoneSetupScreen\" component={DropzoneSetupScreen} />\n      <Stack.Screen name=\"confirm\" component={ConfirmUserScreen} />\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText } from 'react-native-paper';\nimport LicenseChipSelect from '../../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../../input/dropdown_select/FederationSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction FederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"What license do you have?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <FederationSelect\n            value={state?.fields?.license?.value?.federation || state.federation.value}\n            onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n          />\n          <HelperText type={state.federation.error ? 'error' : 'info'}>\n            {state.federation.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={{ padding: 16 }}>\n          {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n            <>\n              <LicenseChipSelect\n                value={state.fields.license.value}\n                federationId={Number(\n                  state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n                )}\n                onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n              />\n              <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n                {state.fields.license.error || ''}\n              </HelperText>\n            </>\n          )}\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, HelperText, List, Menu, TextInput } from 'react-native-paper';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction RigWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"What're you jumping?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Container manufacturer</List.Subheader>\n          <Menu\n            onDismiss={() => setMenuOpen(false)}\n            visible={isMenuOpen}\n            anchor={\n              <TouchableOpacity onPress={() => setMenuOpen(true)}>\n                <TextInput\n                  pointerEvents=\"box-only\"\n                  style={styles.field}\n                  mode=\"outlined\"\n                  error={!!state.fields.make.error}\n                  value={isOtherMake ? 'Other' : state.fields.make.value || 'Select manufacturer'}\n                  disabled\n                />\n              </TouchableOpacity>\n            }\n          >\n            {[\n              'Icon',\n              'Javelin',\n              'Mirage',\n              'Vector',\n              'PA (Talon)',\n              'Infinity',\n              'Parachutes de France',\n              'Parachute Systems',\n              'Racer',\n            ].map((make) => (\n              <Menu.Item\n                onPress={() => {\n                  setMenuOpen(false);\n                  dispatch(actions.forms.rig.setField(['make', make]));\n                  setIsOtherMake(false);\n                }}\n                title={make}\n              />\n            ))}\n            <Menu.Item\n              onPress={() => {\n                setMenuOpen(false);\n                dispatch(actions.forms.rig.setField(['make', '']));\n                setIsOtherMake(true);\n              }}\n              title=\"Other\"\n            />\n          </Menu>\n          {!isOtherMake ? null : (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          )}\n\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n\n          <List.Subheader>Model</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card}>\n          <List.Subheader>Serial number</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n            {state.fields.serial.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 16, marginVertical: 16 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from '../../../input/date_picker/DatePicker';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction ReserveRepackWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Next reserve repack?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Card, HelperText, List, Paragraph } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { ceil } from 'lodash';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction WingloadingWizardScreen(props: IWizardScreenProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [canopySize, setCanopySize] = React.useState(rigForm.fields.canopySize.value || 120);\n  const [weight, setWeight] = React.useState(Number(userForm.fields.exitWeight.value) || 120);\n\n  React.useEffect(() => {\n    if (rigForm.fields.canopySize.value) {\n      setCanopySize(rigForm.fields.canopySize.value);\n    }\n  }, [rigForm.fields.canopySize.value]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Your wingloading\">\n      <View style={styles.content}>\n        <Card>\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <View style={styles.wingLoadingCardLeft}>\n              <Avatar.Text\n                label={ceil(\n                  (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                    (rigForm.fields.canopySize.value || 150),\n                  2\n                ).toString()}\n                size={100}\n                style={styles.wingLoading}\n              />\n            </View>\n            <View style={styles.wingLoadingCardRight}>\n              <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n              <Paragraph>\n                Your wingloading is an indicator of your descent rate under canopy\n              </Paragraph>\n            </View>\n          </Card.Content>\n        </Card>\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Your exit weight</List.Subheader>\n            <Text style={styles.cardValue}>{weight || 50}kg</Text>\n          </View>\n          <Slider\n            style={styles.sliderControl}\n            minimumValue={50}\n            maximumValue={160}\n            step={0.5}\n            minimumTrackTintColor=\"#FF1414\"\n            maximumTrackTintColor=\"#000000\"\n            onSlidingComplete={() =>\n              dispatch(actions.forms.user.setField(['exitWeight', weight.toString()]))\n            }\n            value={weight}\n            onValueChange={(w) => setWeight(w)}\n          />\n          <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n            {userForm.fields.exitWeight?.error || \"Your weight in kg's with all equipment on\"}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Canopy size</List.Subheader>\n            <Text style={styles.cardValue}>{canopySize || 120}ft</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={34}\n              maximumValue={350}\n              step={1}\n              value={canopySize || 120}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onValueChange={(size) => setCanopySize(size)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.rig.setField(['canopySize', canopySize]))\n              }\n            />\n          </View>\n\n          <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n            {userForm.fields.exitWeight?.error || 'Size of your main canopy in square feet'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateRigArgs, UpdateRigPayload } from '../schema';\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateRig(\n    $id: Int!\n    $make: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    updateRig(\n      input: {\n        id: $id\n        attributes: {\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateRigArgs['input']['attributes'],\n  UpdateRigPayload\n>(MUTATION_UPDATE_RIG, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationCreateRigArgs, CreateRigPayload } from '../schema';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationCreateRigArgs['input']['attributes'], CreateRigPayload>(\n  MUTATION_CREATE_RIG,\n  {\n    getPayload: (result) => result.createRig,\n    fieldErrorMap: {},\n  }\n);\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Portal, Modal } from 'react-native-paper';\nimport Wizard from '../../wizard/Wizard';\nimport WizardCompleteStep from '../../wizard/WizardCompleteStep';\nimport FederationStep from './steps/Federation';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport WingloadingStep from './steps/Wingloading';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useMutationUpdateUser from '../../../api/hooks/useMutationUpdateUser';\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport useMutationCreateRig from '../../../api/hooks/useMutationCreateRig';\nimport { UserFields } from '../../forms/user/slice';\nimport { RigFields } from '../../forms/rig/slice';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.forms.userWizard);\n  const dispatch = useAppDispatch();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const mutationUpdateRig = useMutationUpdateRig({\n    onSuccess: () => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, value])),\n  });\n  const mutationCreateRig = useMutationCreateRig({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, value])),\n  });\n\n  const onFederationNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!userForm.fields.license?.value?.id) {\n        dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n        return false;\n      }\n\n      // Update user license\n      try {\n        await mutationUpdateUser.mutate({\n          id: Number(userForm.original?.id),\n          licenseId: Number(userForm.fields.license?.value?.id),\n        });\n        return setIndex(index + 1);\n      } catch (_) {\n        return false;\n      }\n    },\n    [dispatch, mutationUpdateUser, userForm.fields.license?.value?.id, userForm.original?.id]\n  );\n\n  const onRigNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.make?.value) {\n        dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n        return;\n      }\n\n      if (!rigForm.fields.model?.value) {\n        dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n        return;\n      }\n\n      // Create user rig\n      try {\n        const rig = !rigForm.original?.id\n          ? await mutationCreateRig.mutate({\n              make: rigForm.fields.make.value,\n              model: rigForm.fields.model.value,\n              serial: rigForm.fields.serial.value,\n              userId: Number(userForm.original?.id),\n            })\n          : await mutationUpdateRig.mutate({\n              id: Number(rigForm.original?.id),\n              make: rigForm.fields.make.value,\n              model: rigForm.fields.model.value,\n              serial: rigForm.fields.serial.value,\n              userId: Number(userForm.original?.id),\n            });\n\n        if (rig?.rig) {\n          dispatch(actions.forms.rig.setOpen(rig.rig));\n        }\n        setIndex(index + 1);\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    [\n      rigForm.fields.make.value,\n      rigForm.fields.model.value,\n      rigForm.fields.serial.value,\n      rigForm.original?.id,\n      dispatch,\n      mutationCreateRig,\n      userForm.original?.id,\n      mutationUpdateRig,\n    ]\n  );\n\n  const onReserveRepackNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        return false;\n      }\n\n      // Update repack expiry date\n      try {\n        const rig = await mutationUpdateRig.mutate({\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        });\n        if (rig?.rig) {\n          dispatch(actions.forms.rig.setOpen(rig.rig));\n        }\n        return setIndex(index + 1);\n      } catch (_) {\n        return false;\n      }\n    },\n    [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]\n  );\n\n  const onWingloadingNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.canopySize?.value) {\n        dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n        return false;\n      }\n\n      if (!userForm.fields.exitWeight?.value) {\n        dispatch(\n          actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight'])\n        );\n        return false;\n      }\n\n      // Update repack expiry date\n      try {\n        await mutationUpdateRig.mutate({\n          id: Number(rigForm.original?.id),\n          canopySize: rigForm.fields.canopySize.value,\n        });\n        await mutationUpdateUser.mutate({\n          id: Number(userForm.original?.id),\n          exitWeight: Number(userForm.fields.exitWeight?.value),\n        });\n\n        setIndex(index + 1);\n      } catch (e) {\n        console.error(e);\n      }\n      return null;\n    },\n    [\n      rigForm.fields.canopySize.value,\n      rigForm.original?.id,\n      userForm.fields.exitWeight?.value,\n      userForm.original?.id,\n      dispatch,\n      mutationUpdateRig,\n      mutationUpdateUser,\n    ]\n  );\n\n  return (\n    <Portal>\n      <Modal\n        visible={state.open}\n        dismissable={false}\n        style={styles.modal}\n        contentContainerStyle={{ height: '100%' }}\n      >\n        <Wizard>\n          <FederationStep\n            backButtonLabel=\"Cancel\"\n            nextButtonLabel=\"Next\"\n            onBack={() => {\n              dispatch(actions.forms.userWizard.setOpen(false));\n              dispatch(actions.forms.user.setOpen(false));\n              dispatch(actions.forms.rig.setOpen(false));\n              dispatch(actions.forms.userWizard.reset());\n              dispatch(actions.forms.user.reset());\n              dispatch(actions.forms.rig.reset());\n            }}\n            loading={mutationUpdateUser.loading}\n            onNext={onFederationNext}\n          />\n          <RigStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onNext={onRigNext}\n          />\n          <ReserveRepackStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={onReserveRepackNext}\n          />\n          <WingloadingStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={onWingloadingNext}\n          />\n\n          <WizardCompleteStep\n            title=\"You're all set!\"\n            subtitle=\"You can configure your settings on the profile page\"\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Done\"\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={() => {\n              dispatch(actions.forms.userWizard.setOpen(false));\n              dispatch(actions.forms.user.setOpen(false));\n              dispatch(actions.forms.rig.setOpen(false));\n              dispatch(actions.forms.userWizard.reset());\n              dispatch(actions.forms.user.reset());\n              dispatch(actions.forms.rig.reset());\n            }}\n          />\n        </Wizard>\n      </Modal>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modal: {\n    ...StyleSheet.absoluteFillObject,\n    paddingLeft: 0,\n    marginLeft: 0,\n    marginBottom: 0,\n    marginTop: 0,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    backgroundColor: 'red',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n\nexport default UserWizardScreen;\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider as MaterialProvider, ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { Linking, Platform, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { registerRootComponent } from 'expo';\nimport URI from 'urijs';\nimport Wrapper from './EntrypointWrapper';\n\nimport Apollo from './api/Apollo';\nimport { store, persistor, useAppSelector, useAppDispatch } from './state/store';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport NotificationArea from './components/notifications/Notifications';\nimport LinkingConfiguration from './navigation/Routes';\nimport RootNavigator from './navigation/RootNavigator';\nimport { actions } from './state';\nimport UserWizardScreen from './components/dialogs/UserWizard/UserWizardScreen';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nfunction Content() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = (link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  };\n\n  React.useEffect(() => {\n    if (Platform.OS === 'web') {\n      return undefined;\n    }\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: notification.request.content.body,\n            variant: 'warning',\n          })\n        );\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      console.log(response);\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch]);\n\n  return (\n    <React.Suspense\n      fallback={\n        <View style={{ flex: 1, flexGrow: 1 }}>\n          <ProgressBar indeterminate color={state?.theme?.colors?.accent} visible />\n        </View>\n      }\n    >\n      <Apollo>\n        <MaterialProvider theme={state.theme}>\n          <SafeAreaProvider>\n            <NavigationContainer linking={LinkingConfiguration} theme={state.theme}>\n              <Wrapper>\n                <RootNavigator />\n              </Wrapper>\n            </NavigationContainer>\n\n            <StatusBar />\n            <UserWizardScreen />\n            <NotificationArea />\n          </SafeAreaProvider>\n        </MaterialProvider>\n      </Apollo>\n    </React.Suspense>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default registerRootComponent(App);\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        // console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n"],"sourceRoot":""}