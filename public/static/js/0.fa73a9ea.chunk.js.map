{"version":3,"sources":["components/layout/DialogOrSheet.web.tsx","components/chips/GcaChip.tsx","components/forms/user/UserForm.tsx","components/forms/rig/RigForm.tsx","components/dialogs/Rig.tsx","components/input/dropdown_select/RoleSelect.tsx","components/forms/dropzone_user/DropzoneUserForm.tsx","components/dialogs/DropzoneUserDialog.tsx","components/forms/credits/CreditsForm.tsx","components/dialogs/CreditsDialog/Credits.web.tsx","components/dialogs/User.tsx","screens/authenticated/profile/UserInfo/TableCard.tsx","screens/authenticated/profile/UserInfo/Header.tsx","screens/authenticated/profile/UserInfo/InfoGrid.tsx","graphql/hooks/useDropzoneUser.ts","components/Badge.tsx","graphql/hooks/useMutationRevokePermission.ts","graphql/hooks/useMutationGrantPermission.ts","screens/authenticated/profile/ProfileScreen.tsx"],"names":["DialogOrSheet","props","buttonLabel","buttonAction","title","loading","children","globalState","useAppSelector","state","global","visible","open","dismissable","style","maxWidth","alignSelf","indeterminate","color","theme","colors","accent","Title","Content","pointerEvents","ScrollArea","Actions","justifyContent","onPress","onClose","StyleSheet","create","button","width","borderRadius","padding","contentContainer","paddingHorizontal","paddingBottom","sheet","elevation","backgroundColor","flexGrow","height","display","flexDirection","sheetHeader","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","QUERY_PERMISSION_USER","gql","GCAChip","React","isMenuOpen","setMenuOpen","currentDropzoneId","data","useQuery","variables","dropzoneId","Number","permissions","useRestriction","Permission","UpdateLoad","onDismiss","anchor","mode","icon","marginHorizontal","value","id","user","name","dropzone","dropzoneUsers","edges","map","edge","Item","key","node","onSelect","SlotForm","forms","dispatch","useAppDispatch","original","fields","exitWeight","actions","setField","rigs","styles","field","label","error","toString","onChangeText","newValue","type","email","phone","keyboardType","right","Affix","text","license","federation","setFederation","required","federationId","flex","paddingTop","marginBottom","ticketAddons","RigForm","rig","canCreateRigs","CreateRig","View","TextInput","make","HelperText","model","serial","canopySize","showTypeSelect","ChipSelect","items","renderItemLabel","item","isDisabled","selected","rigType","onChangeSelected","timestamp","repackExpiresAt","Date","getTime","onChange","time","MUTATION_CREATE_RIG","MUTATION_UPDATE_RIG","RigDialog","userId","useMutation","mutationCreateRig","createData","mutationUpdateRig","updateData","isLoading","validate","hasErrors","setFieldError","JSON","stringify","onSave","a","async","mutation","response","result","updateRig","createRig","fieldErrors","message","errors","length","notifications","showSnackbar","variant","onSuccess","snapPoints","reset","QUERY_ROLES","RoleSelect","refetch","Subheader","paddingLeft","Menu","disabled","left","Icon","undefined","description","roles","role","DropzoneUserForm","dropzoneUser","canUpdateRole","GrantPermission","newRole","expiresAt","MUTATION_EDIT_DROPZONE_USER","DropzoneUserDialog","mutationUpdateDropzoneUser","userRoleId","dropzoneUserId","updateDropzoneUser","console","Portal","Dialog","ProgressBar","Button","CreditsForm","credits","currentCredits","amount","subtotal","status","defaultIndex","onChangeIndex","newIndex","Divider","DataTable","Row","Cell","numeric","Text","fontWeight","MUTATION_CREATE_TRANSACTION","mutationCreateTransaction","UpdateUserDialog","mutationUpdateUser","useMutationUpdateUser","payload","onFieldError","onError","hasError","emailRegex","RegExp","test","mutate","licenseId","parseFloat","UserForm","TableCard","buttonIcon","onPressButton","card","container","IconButton","primary","marginVertical","UserHeader","onEdit","canEdit","onPressAvatar","size","surface","avatarContainer","TouchableRipple","image","Image","source","uri","titleContainer","Paragraph","paragraph","alignItems","InfoGrid","divider","i","titleStyle","bold","descriptionStyle","verticalDivider","hairlineWidth","textAlign","QUERY_DROPZONE_USER","Badge","iconName","Chip","textStyle","maxHeight","borderColor","filter","Boolean","MUTATION_REVOKE_PERMISSION","createMutation","getPayload","revokePermission","validates","permissionName","isRequired","MUTATION_GRANT_PERMISSION","grantPermission","MUTATION_UPDATE_IMAGE","ProfileScreen","navigation","useNavigation","currentUser","useCurrentDropzone","route","useRoute","isSelf","params","currentDropzone","useDropzoneUser","canGrantPermission","isFocused","useIsFocused","useMutationRevokePermission","useMutationGrantPermission","Platform","OS","ImagePicker","alert","onPickImage","mediaTypes","Images","allowsEditing","aspect","quality","base64","log","badges","canAddTransaction","CreateUserTransaction","canUpdateUser","UpdateUser","ScrollableScreen","contentContainerStyle","content","refreshControl","RefreshControl","refreshing","onRefresh","horizontal","ActAsPilot","ActAsDzso","ActAsGca","ActAsRigInspector","ActAsLoadMaster","permission","includes","shouldShowBadge","update","client","c","readQuery","query","updatedList","writeQuery","current","shouldUpdate","find","updatedGcaList","newData","setOpen","MaterialCommunityIcons","chip","chipTitle","format","Math","round","Header","onLongPress","navigate","join","rigInspections","some","insp","isOk","successColor","warningColor","transactions","fontSize","fontStyle","createdAt","Rig","setUser","margin","minHeight","borderWidth","lineHeight","textAlignVertical"],"mappings":"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","file":"static/js/0.fa73a9ea.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { Button, Dialog, Portal, ProgressBar } from \"react-native-paper\";\nimport { useAppSelector } from \"../../redux\";\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n\n  snapPoints?: Array<string | number>;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nexport default function DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, buttonAction, title, loading, children } = props;\n  const globalState = useAppSelector(state => state.global);\n\n  return (\n    <Portal>\n      <Dialog visible={!!props.open} dismissable={false} style={{ maxWidth: 500, alignSelf: \"center\" }}>\n        <ProgressBar indeterminate visible={loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>\n          { title }\n        </Dialog.Title>\n        <Dialog.Content pointerEvents=\"box-none\">\n          <Dialog.ScrollArea>\n            <ScrollView>\n              { children }\n            </ScrollView>\n          </Dialog.ScrollArea>\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: \"flex-end\"}}>\n          <Button\n            onPress={() => {\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          \n          <Button onPress={buttonAction}>\n            { buttonLabel }\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: \"100%\",\n    borderRadius: 16,\n    padding: 5,\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: \"white\",\n    flexGrow: 1,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    height: 40,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: \"white\",\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  }\n\n})","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport * as React from \"react\";\nimport { Chip, Menu } from \"react-native-paper\";\nimport useCurrentDropzone from \"../../graphql/hooks/useCurrentDropzone\";\nimport { Query, DropzoneUser, Permission } from \"../../graphql/schema.d\";\nimport useRestriction from \"../../hooks/useRestriction\";\nimport { useAppSelector } from \"../../redux\";\n\ninterface IGCAChipSelect {\n  dropzoneId: number;\n  value?: DropzoneUser | null;\n  onSelect(user: DropzoneUser): void;\n}\n\n\n\nexport const QUERY_PERMISSION_USER = gql`\n  query QueryGCAUsers(\n    $dropzoneId: Int!\n    $permissions: [Permission!]\n  ) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector(state => state.global);\n\n  const { data } = useQuery<Query>(QUERY_PERMISSION_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: [\"actAsGCA\"]\n    }\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return (\n    !allowed ?\n    <Chip mode=\"outlined\" icon=\"radio-handheld\">\n      {props.value?.user?.name || \"No gca\"}\n    </Chip> : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"radio-handheld\"\n          style={{ marginHorizontal: 4 }}\n          onPress={() => setMenuOpen(true)}\n        >\n          {props.value?.id ? props.value?.user?.name : \"No gca\"}\n        </Chip>\n      }>\n      {\n        data?.dropzone?.dropzoneUsers?.edges?.map((edge) => \n          <Menu.Item\n            key={`gca-chip-${edge?.node?.id}`}\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(edge?.node);\n            }}\n            title={\n              edge?.node?.user?.name\n            }\n          />\n        )\n      }\n    </Menu>\n  ))\n}","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nexport default function SlotForm() {\n  const state = useAppSelector(state => state.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField([\"exitWeight\", state.original.exitWeight || \"60\"])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(\n          actions.forms.user.setField([\"rigs\", state.original.rigs])\n        );\n      }\n\n    }\n  }, [state.original?.id]);\n\n  return ( \n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"name\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.name.error ? \"error\" : \"info\"}>\n        { state.fields.name.error || \" \" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"email\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.email.error ? \"error\" : \"info\"}>\n        { state.fields.email.error || \" \" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"phone\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.phone.error ? \"error\" : \"info\"}>\n        { state.fields.phone.error || \"\" }\n      </HelperText>\n\n      \n      \n     <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || \"\"}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"exitWeight\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.exitWeight.error ? \"error\" : \"info\"}>\n        { state.fields.exitWeight.error || \"\" }\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: \"100%\"}}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n          required\n        />\n\n        <HelperText type={!!state.federation.error ? \"error\" : \"info\"}>\n          { state.federation.error || \"\" }\n        </HelperText>\n\n        { (state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(state?.fields?.license?.value?.federation?.id || state.federation?.value?.id)}\n              onSelect={(value) => dispatch(actions.forms.user.setField([\"license\", value]))}\n              required\n            />\n            <HelperText type={!!state.fields.license.error ? \"error\" : \"info\"}>\n              { state.fields.license.error || \"\" }\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: \"100%\",\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: \"100%\",\n  },\n  ticketAddons: {\n    marginBottom: 8\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../graphql/schema.d';\n\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const state = useAppSelector(state => state.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return ( \n    <View>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Make\"\n        error={!!state.fields.make.error}\n        value={state.fields.make.value || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField([\"make\", newValue]))}\n      />\n      <HelperText type={!!state.fields.make.error ? \"error\" : \"info\"}>\n        { state.fields.make.error || \"e.g Javelin, Mirage\" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Model\"\n        error={!!state.fields.model.error}\n        value={state.fields.model.value || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField([\"model\", newValue]))}\n      />\n      <HelperText type={!!state.fields.model.error ? \"error\" : \"info\"}>\n        { state.fields.model.error || \"e.g G4.1\" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Serial\"\n        error={!!state.fields.serial.error}\n        value={state.fields.serial.value || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField([\"serial\", newValue]))}\n      />\n      <HelperText type={!!state.fields.serial.error ? \"error\" : \"info\"}>\n        { state.fields.serial.error || \"\" }\n      </HelperText>\n\n      \n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Current canopy size\"\n        error={!!state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || \"\"}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField([\"canopySize\", Number(newValue)]))}\n      />\n      <HelperText type={!!state.fields.canopySize.error ? \"error\" : \"info\"}>\n        { state.fields.canopySize.error || \"Size of canopy in container\" }\n      </HelperText>\n\n      { !props.showTypeSelect ? null : (\n        <ChipSelect\n          items={[\"student\", \"sport\", \"tandem\"]}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => !canCreateRigs ? item !== \"sport\" : false}\n          selected={[state.fields.rigType?.value || \"sport\"]}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField([\"rigType\", rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField([\"repackExpiresAt\", time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={!!state.fields.repackExpiresAt.error ? \"error\" : \"info\"}>\n        { state.fields.repackExpiresAt.error || \"\" }\n      </HelperText>\n\n      \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  }\n});\n","import { gql, useMutation } from \"@apollo/client\";\nimport * as React from \"react\";\nimport { Mutation } from \"../../graphql/schema.d\";\nimport { actions, useAppDispatch, useAppSelector } from \"../../redux\";\nimport RigForm from \"../forms/rig/RigForm\";\nimport DialogOrSheet from \"../layout/DialogOrSheet\";\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String,\n    $model: String,\n    $serial: String,\n    $rigType: String,\n    $canopySize: Int,\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateRig(\n    $id: Int!\n    $make: String,\n    $model: String,\n    $serial: String,\n    $rigType: String,\n    $canopySize: Int,\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    updateRig(\n      input: {\n        id: $id,\n        attributes: {\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, onClose, userId, dropzoneId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.forms.rig);\n  const [mutationCreateRig, createData] = useMutation<Mutation>(MUTATION_CREATE_RIG);\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const isLoading = createData.loading || updateData.loading;\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.make.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"make\", \"Required\"])\n      );\n    }\n\n    if (!state.fields.model.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"model\", \"Required\"])\n      );\n    }\n\n    if (!state.fields.serial.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"serial\", \"Required\"])\n      );\n    }\n\n    if (!state.fields.canopySize.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"canopySize\", \"Required\"])\n      );\n    }\n\n    if (!state.fields.repackExpiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.rig.setFieldError([\"repackExpiresAt\", \"You must select a repack date in the future\"])\n      );\n    }\n\n    return !hasErrors;\n  }, [JSON.stringify(state.fields)]);\n  \n  const onSave = React.useCallback(async () => {\n\n    if (!validate()) {\n      return;\n    }\n    try {\n      const mutation = state.original?.id ? mutationUpdateRig : mutationCreateRig;\n      const response = await mutation({\n        variables: {\n          ...state.original?.id ? { id: Number(state.original?.id) } : {},\n          make: state.fields.make.value,\n          model: state.fields.model.value,\n          serial: state.fields.serial.value,\n          canopySize: state.fields.canopySize.value,\n          rigType: state.fields.rigType.value,\n          repackExpiresAt: state.fields.repackExpiresAt.value,\n          userId: props.userId ? Number(props.userId) : null,\n          dropzoneId: props.dropzoneId ? Number(props.dropzoneId) : null,\n        }\n      });\n      const result = state.original?.id ? response.data?.updateRig : response.data?.createRig;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case \"make\":\n            return dispatch(actions.forms.rig.setFieldError([\"make\", message]));\n          case \"model\":\n            return dispatch(actions.forms.rig.setFieldError([\"model\", message]));\n          case \"serial\":\n            return dispatch(actions.forms.rig.setFieldError([\"serial\", message]));\n          case \"canopy_size\":\n            return dispatch(actions.forms.rig.setFieldError([\"canopySize\", message]));\n          case \"repack_expires_at\":\n            return dispatch(actions.forms.rig.setFieldError([\"repackExpiresAt\", message]));\n          case \"rig_type\":\n            return dispatch(actions.forms.rig.setFieldError([\"rigType\", message]));\n        }\n      });\n      if (result?.errors?.length) {\n        return dispatch(actions.notifications.showSnackbar({ message: result?.errors[0], variant: \"error\" }));\n      }\n      if (!result?.fieldErrors?.length) {\n        props.onSuccess();\n      }\n\n    } catch(error) {\n      dispatch(actions.notifications.showSnackbar({ message: error.message, variant: \"error\" }));\n    } \n  }, [JSON.stringify(state.fields), mutationCreateRig, mutationUpdateRig, props.onSuccess])\n\n  return (\n    <DialogOrSheet\n      title={ state.original?.id ? \"Edit rig\" : \"New rig\"}\n      open={open}\n      snapPoints={[0, 580]}\n      onClose={() => {\n        props.onClose();\n        dispatch(actions.forms.rig.reset());\n      }}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!props.dropzoneId} />\n    </DialogOrSheet>\n  )\n}\n","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport * as React from \"react\";\nimport { List, Menu } from \"react-native-paper\";\nimport useCurrentDropzone from \"../../../graphql/hooks/useCurrentDropzone\";\nimport { Query, UserRole } from \"../../../graphql/schema.d\";\nimport { useAppSelector } from \"../../../redux\";\n\n\ninterface IRoleSelect {\n  value?: UserRole | null;\n  required?: boolean;\n  disabled?: boolean;\n  onSelect(jt: UserRole): void;\n}\n\nconst QUERY_ROLES = gql`\n  query RolesQuery($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector(state => state.global);\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_ROLES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    }\n  });\n  return (\n    <>\n    <List.Subheader style={{ paddingLeft: 0 }}>\n      Access level\n    </List.Subheader>\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={!props.disabled && isMenuOpen}\n      anchor={\n        <List.Item\n          left={() => <List.Icon icon=\"lock\" />}\n          onPress={props.disabled ? undefined : () => {\n            setMenuOpen(true);\n          }}\n          title={\n            props.value?.name || \"Access level\"\n          }\n          description={!props.required ? \"Optional\" : null}\n        />\n      }>\n      {\n        data?.dropzone?.roles?.map((role) =>\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(role);\n            }}\n            title={\n              role.name || \"-\"\n            }\n          />\n        )\n      }\n    </Menu>\n    </>\n  )\n}","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../graphql/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector(state => state.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return ( \n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField([\"role\", newRole]))}\n        disabled={!canUpdateRole}\n        required\n      />\n      <HelperText type={!!state.fields.role.error ? \"error\" : \"info\"}>\n        { state.fields.role.error }\n      </HelperText>\n\n\n      <List.Subheader style={{ paddingLeft: 0 }}>\n        Financial\n      </List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField([\"expiresAt\", time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={!!state.fields.expiresAt.error ? \"error\" : \"info\"}>\n        { state.fields.expiresAt.error }\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  }\n});\n","import { gql, useMutation } from \"@apollo/client\";\nimport * as React from \"react\";\nimport { Button, Dialog, Portal, ProgressBar } from \"react-native-paper\";\nimport { DropzoneUser, Mutation } from \"../../graphql/schema.d\";\nimport { actions, useAppDispatch, useAppSelector } from \"../../redux\";\nimport DropzoneUserForm from \"../forms/dropzone_user/DropzoneUserForm\";\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUser): void;\n}\n\nconst MUTATION_EDIT_DROPZONE_USER = gql`\n  mutation UpdateDropzoneUser(\n    $userRoleId: Int,\n    $expiresAt: Int,\n    $dropzoneUserId: Int\n  ) {\n    updateDropzoneUser(\n      input: {\n        id: $dropzoneUserId,\n        attributes: {\n          userRoleId: $userRoleId,\n          expiresAt: $expiresAt,\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      dropzoneUser {\n        id\n        credits\n        expiresAt\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.forms.dropzoneUser);\n  const globalState = useAppSelector(state => state.global);\n  const [mutationUpdateDropzoneUser, createData] = useMutation<Mutation>(MUTATION_EDIT_DROPZONE_USER);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    \n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError([\"role\", \"User must have an access level\"])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError([\"expiresAt\", \"Membership expiry must be set\"])\n      );\n    }\n\n    return !hasErrors;\n  }, [JSON.stringify(state.fields)]);\n  \n  const onSave = React.useCallback(async () => {\n\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...state.original?.id ? { id: state.original?.id } : {},\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        }\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case \"user_role\":\n            return dispatch(actions.forms.dropzoneUser.setFieldError([\"role\", message]));\n          case \"expires_at\":\n            return dispatch(actions.forms.dropzoneUser.setFieldError([\"expiresAt\", message]));\n        }\n      });\n      if (result?.errors?.length) {\n        return dispatch(actions.notifications.showSnackbar({ message: result?.errors[0], variant: \"error\" }));\n      }\n      if (!result?.fieldErrors?.length) {\n        props.onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result.fieldErrors);\n      }\n\n    } catch(error) {\n      dispatch(actions.notifications.showSnackbar({ message: error.message, variant: \"error\" }));\n    } \n  }, [JSON.stringify(state.fields), mutationUpdateDropzoneUser, props.onSuccess])\n  \n  return (\n    <Portal>\n      <Dialog visible={!!props.open}>\n        <ProgressBar indeterminate visible={createData.loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>\n          {`${state?.original?.id ? \"Edit\" : \"New\"} dropzone user`}\n        </Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: \"flex-end\"}}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          \n          <Button onPress={onSave}>\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  )\n}","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, HelperText, Divider, Dialog, DataTable } from 'react-native-paper';\nimport { Tabs, TabScreen } from \"react-native-paper-tabs\";\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\nexport default function CreditsForm() {\n  const state = useAppSelector(state => state.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = (state.original?.credits || 0)\n  const amount = (state.fields.amount.value || 0);\n\n  const subtotal = state.fields.status.value === \"deposit\"\n    ? amount + currentCredits\n    : amount - currentCredits;\n  return ( \n    <>\n      <Tabs\n        defaultIndex={0} // default = 0\n        onChangeIndex={(newIndex) => {\n          dispatch(actions.forms.credits.setField([\"status\", newIndex === 1 ? \"withdrawal\" : \"deposit\"]));\n        }}\n        mode=\"fixed\"\n      >\n        <TabScreen label=\"Deposit\" icon=\"arrow-up\"><View /></TabScreen>\n        <TabScreen label=\"Withdraw\" icon=\"arrow-down\"><View /></TabScreen>\n      </Tabs>\n      <Dialog.Content style={{ paddingTop: 16 }}>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Message\"\n            error={!!state.fields.message.error}\n            value={state.fields.message.value?.toString() || \"\"}\n            onChangeText={(newValue: string) => dispatch(actions.forms.credits.setField([\"message\", newValue]))}\n          />\n          <HelperText type={!!state.fields.message.error ? \"error\" : \"info\"}>\n            { state.fields.message.error || \"\" }\n          </HelperText>\n          { state.fields.status.value === \"deposit\" \n            ? (\n                <View>\n                  \n                  <TextInput\n                    style={styles.field}\n                    mode=\"outlined\"\n                    label=\"Add amount\"\n                    error={!!state.fields.amount.error}\n                    value={state.fields.amount.value?.toString() || \"\"}\n                    keyboardType=\"number-pad\"\n                    onChangeText={(newValue: string) => dispatch(actions.forms.credits.setField([\"amount\", Number(newValue)]))}\n                  />\n                  <HelperText type={!!state.fields.amount.error ? \"error\" : \"info\"}>\n                    { state.fields.amount.error || \"\" }\n                  </HelperText>\n                  <Divider />\n\n                  <DataTable>\n                    <DataTable.Row>\n                      <DataTable.Title>Current balance</DataTable.Title>\n                      <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n                    </DataTable.Row>\n                    <DataTable.Row>\n                      <DataTable.Title>Deposit</DataTable.Title>\n                      <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n                    </DataTable.Row>\n                    <DataTable.Row>\n                      <DataTable.Title>\n                        <Text style={{ fontWeight: \"bold\" }}>New total</Text>\n                      </DataTable.Title>\n                      <DataTable.Cell numeric>{`${subtotal < 0 ? \"-\" : \"\"}$${subtotal < 0 ? subtotal * -1 : subtotal}`}</DataTable.Cell>\n                    </DataTable.Row>\n                  </DataTable>\n                </View>\n            ) : (\n                <View>\n                  <TextInput\n                    style={styles.field}\n                    mode=\"outlined\"\n                    label=\"Withdraw amount\"\n                    error={!!state.fields.amount.error}\n                    value={state.fields.amount.value?.toString() || \"\"}\n                    keyboardType=\"number-pad\"\n                    onChangeText={(newValue: string) => dispatch(actions.forms.credits.setField([\"amount\", Number(newValue)]))}\n                  />\n                  <HelperText type={!!state.fields.amount.error ? \"error\" : \"info\"}>\n                    { state.fields.amount.error || \"\" }\n                  </HelperText>\n\n                  <Divider />\n\n                  <DataTable>\n                    <DataTable.Row>\n                      <DataTable.Title>Current balance</DataTable.Title>\n                      <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n                    </DataTable.Row>\n                    <DataTable.Row>\n                      <DataTable.Title>Withdraw</DataTable.Title>\n                      <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n                    </DataTable.Row>\n                    <DataTable.Row>\n                      <DataTable.Title>\n                        <Text style={{ fontWeight: \"bold\" }}>New total</Text>\n                      </DataTable.Title>\n                      <DataTable.Cell numeric>{`${subtotal < 0 ? \"-\" : \"\"}$${subtotal < 0 ? subtotal * -1 : subtotal}`}</DataTable.Cell>\n                    </DataTable.Row>\n                  </DataTable>\n                </View>\n            )}\n      </Dialog.Content>\n      </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  }\n});\n","import { gql, useMutation } from \"@apollo/client\";\nimport * as React from \"react\";\nimport { Button, Dialog, Portal, ProgressBar } from \"react-native-paper\";\nimport { Mutation } from \"../../../graphql/schema.d\";\nimport { actions, useAppDispatch, useAppSelector } from \"../../../redux\";\nimport CreditsForm from \"../../forms/credits/CreditsForm\";\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_TRANSACTION = gql`\n  mutation CreatrTransaction(\n    $message: String,\n    $status: String,\n    $amount: Float,\n    $dropzoneUserId: Int,\n  ) {\n    createTransaction(\n      input: {\n        attributes: {\n          amount: $amount,\n          dropzoneUserId: $dropzoneUserId,\n          message: $message,\n          status: $status,\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      transaction {\n        id\n        amount\n        message\n\n        dropzoneUser {\n          id\n          credits\n\n          transactions {\n            edges {\n              node {\n                id\n                status\n                amount\n                createdAt\n                message\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.forms.credits);\n  const globalState = useAppSelector(state => state.global);\n  const [mutationCreateTransaction, createData] = useMutation<Mutation>(MUTATION_CREATE_TRANSACTION);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.credits.setFieldError([\"amount\", \"You must specify an amount\"])\n      );\n    }\n\n    return !hasErrors;\n  }, [JSON.stringify(state.fields)]);\n  \n  const onSave = React.useCallback(async () => {\n\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationCreateTransaction({\n        variables: {\n          amount: state.fields.amount.value,\n          message: state.fields.message.value,\n          status: state.fields.status.value,\n          dropzoneUserId: Number(state.original?.id),\n        }\n      });\n      const result = state.original?.id ? response.data?.updateRig : response.data?.createRig;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case \"amount\":\n            return dispatch(actions.forms.credits.setFieldError([\"amount\", message]));\n          case \"message\":\n            return dispatch(actions.forms.credits.setFieldError([\"message\", message]));\n          case \"status\":\n            return dispatch(actions.forms.credits.setFieldError([\"status\", message]));\n        }\n      });\n      if (result?.errors?.length) {\n        return dispatch(actions.notifications.showSnackbar({ message: result?.errors[0], variant: \"error\" }));\n      }\n      if (!result?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        props.onSuccess();\n      }\n\n    } catch(error) {\n      dispatch(actions.notifications.showSnackbar({ message: error.message, variant: \"error\" }));\n    } \n  }, [JSON.stringify(state.fields), mutationCreateTransaction, props.onSuccess])\n  \n  return (\n    <Portal>\n      <Dialog visible={!!props.open}>\n        <ProgressBar indeterminate visible={createData.loading} color={globalState.theme.colors.accent} />\n        <CreditsForm />\n        <Dialog.Actions style={{ justifyContent: \"flex-end\"}}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.credits.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          \n          <Button onPress={onSave}>\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  )\n}","import * as React from \"react\";\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from \"../../redux\";\nimport DialogOrSheet from \"../layout/DialogOrSheet\";\nimport useMutationUpdateUser from \"../../graphql/hooks/useMutationUpdateUser\";\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess } = props;\n  const state = useAppSelector(state => state.forms.user);\n  const dispatch = useAppDispatch();\n\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({ message: `Profile has been updated`, variant: \"success\" })\n      );\n      dispatch(actions.forms.user.reset());\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as any, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: \"error\" })),\n  });\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    const emailRegex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if ((state.fields.name?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"name\", \"Name is too short\"])\n      );\n    }\n\n    if ((state.fields.email?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"email\", \"Email is too short\"])\n      );\n    }\n\n    if ((state.fields.phone?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"phone\", \"Phone number is too short\"])\n      );\n    }\n\n    if (!emailRegex.test(state.fields?.email?.value || \"\")) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"email\", \"Please enter a valid email\"])\n      );\n    }\n\n    if ((state.fields.exitWeight?.value || 0) < 30) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"exitWeight\", \"Exit weight seems too low?\"])\n      );\n    }\n\n    return !hasError;\n  }, [JSON.stringify(state.fields), dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, license, phone, email, exitWeight } = state.fields;\n\n    \n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateUser.mutate({\n          id: Number(state.original!.id!),\n          name: name.value,\n          licenseId: !license.value?.id ? null : Number(license.value!.id),\n          phone: phone.value,\n          exitWeight: parseFloat(exitWeight.value!),\n          email: email.value,\n        });        \n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({ message: error.message, variant: \"error\" })\n        );\n      }\n    }\n    \n  }, [JSON.stringify(state.fields), dispatch, mutationUpdateUser]);\n\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={[0, 740]}\n      loading={mutationUpdateUser.loading}\n      onClose={() => {\n        props.onClose();\n        dispatch(actions.forms.user.reset());\n      }}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  )\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { IconButton, List} from 'react-native-paper';\n\n\nimport { useAppSelector } from '../../../../redux';\n\ninterface ITableCard {\n  children: React.ReactNode;\n  title: string;\n  buttonIcon?: string;\n  onPressButton?(): void;\n}\nexport default function TableCard(props: ITableCard) {\n  const state = useAppSelector(state => state.global);\n  const { title, children, buttonIcon, onPressButton } = props;\n\n  return (\n    <View style={styles.card}>\n      <View style={styles.container}>\n        <List.Subheader style={styles.title}>{title}</List.Subheader>\n        {\n          buttonIcon && (\n            <IconButton\n              icon={buttonIcon}\n              onPress={() => !onPressButton ? null : onPressButton()}\n              color={state.theme.colors.primary}\n            />\n        )}\n      </View>\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  title: { flexGrow: 1 },\n  card: {\n    marginVertical: 8,\n    width: \"100%\",\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title, TouchableRipple } from 'react-native-paper';\n\nimport { useAppSelector } from '../../../../redux';\nimport { DropzoneUser } from '../../../../graphql/schema';\n\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUser;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onPressAvatar?(): void;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, onEdit, canEdit, children, onPressAvatar } = props;\n  const { theme } = useAppSelector(state => state.global);\n  return (\n      <View style={[styles.container, { backgroundColor: theme.colors.primary }]}>\n        <View style={styles.actions}>\n        {\n          !canEdit ? null : (\n            <IconButton\n              icon=\"pencil\"\n              size={20}\n              color={theme.colors.surface}\n              onPress={() => onEdit ? onEdit() : null}\n            />\n          )}\n        </View>\n        <View style={styles.avatarContainer}>\n          <View style={{ flex: 1/3 }}>\n            <TouchableRipple onPress={onPressAvatar}>\n              {\n                !dropzoneUser?.user?.image\n                ? <Avatar.Icon\n                    size={80}\n                    icon=\"account\"\n                    color={theme.colors.primary}\n                    style={{ backgroundColor: theme.colors.surface }}\n                  />\n                : <Avatar.Image\n                    size={80}\n                    source={{ uri: dropzoneUser?.user.image }}\n                    style={{ backgroundColor: theme.colors.surface }}\n                  />\n              }\n            </TouchableRipple>\n          </View>\n          <View style={styles.titleContainer}>\n            <Title style={styles.title}>{dropzoneUser?.user?.name}</Title>\n            <Paragraph style={styles.paragraph}>{dropzoneUser?.role?.name}</Paragraph>\n          </View>\n        </View>\n\n        {children}\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    paddingTop: 16\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  avatarContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 48,\n    flex: 2/3,\n    alignItems: \"flex-start\",\n    justifyContent: \"center\"\n  },\n  title: {\n    color: \"white\"\n  },\n  paragraph: {\n    color: \"white\"\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: Array<{ title: string, value: string, onPress?(): void; bold?: boolean }>;\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {\n          items.map((item, i) =>\n          <>\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[styles.title, {\n                  fontWeight: item.bold !== false ? \"bold\" : undefined\n                }]}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />}\n          </>\n          )\n        }\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n container: { width: \"100%\", flexDirection: \"row\" },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n    backgroundColor: \"white\",\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n    backgroundColor: \"white\",\n  },\n  title: {\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  description: {\n    textAlign: \"center\",\n    color: \"white\",\n  }\n});\n","import { useQuery } from \"@apollo/client\";\nimport { startOfDay } from \"date-fns\";\nimport gql from 'graphql-tag';\nimport * as React from \"react\";\nimport { useAppSelector } from \"../../redux\";\nimport { Query } from \"../schema\";\nimport useCurrentDropzone from \"./useCurrentDropzone\";\n\nconst QUERY_DROPZONE_USER = gql`\n  query QueryDropzoneUser($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n        rigInspections {\n          id\n          isOk\n          rig {\n            id\n          }\n        }\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n            }\n          }\n        }\n\n\n        transactions {\n          edges {\n            node {\n              id\n              status\n              message\n              amount\n              createdAt\n            }\n          }\n        }\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: number) {\n  const dropzoneId = useAppSelector(state => state.global.currentDropzoneId);\n  const currentDropzone = useCurrentDropzone();\n\n  const dropzoneUser = useQuery<Pick<Query, \"dropzone\">>(QUERY_DROPZONE_USER, {\n    variables: {\n      dropzoneId: dropzoneId,\n      dropzoneUserId: id || currentDropzone?.data?.dropzone?.currentUser?.id,\n    }\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: !id || id === Number(currentDropzone?.data?.dropzone?.currentUser?.id)\n      ? currentDropzone?.data?.dropzone?.currentUser\n      : dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}","import * as React from \"react\";\nimport { Chip } from \"react-native-paper\";\nimport { Permission } from \"../graphql/schema.d\";\n\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n\n  const { type, selected, disabled, onPress } = props;\n  const iconName = {\n    \"actAsDZSO\": \"shield-cross\",\n    \"actAsGCA\": \"radio-handheld\",\n    \"actAsLoadMaster\": \"shield-account\",\n    \"actAsPilot\": \"shield-airplane\",\n    \"actAsRigInspector\": \"shield-search\"\n  }[props.type];\n\n  const label = {\n    \"actAsDZSO\": \"DZSO\",\n    \"actAsGCA\": \"GCA\",\n    \"actAsLoadMaster\": \"Load Master\",\n    \"actAsPilot\": \"Pilot\",\n    \"actAsRigInspector\": \"Rig Inspector\"\n  }[props.type];\n\n  return (\n    <Chip\n      mode={selected ? \"outlined\" : \"flat\"}\n      icon={iconName}\n      textStyle={selected ? {} : { color: \"white\" }}\n      style={[\n        { marginHorizontal: 2, maxHeight: 35 },\n        selected ?  undefined : { backgroundColor: \"transparent\", borderColor: \"white\" }\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress()}\n    >\n      {label}\n    </Chip>\n  )\n}\n\nexport default Badge;","import gql from \"graphql-tag\";\nimport { createMutation, isRequired } from \"../createMutation\";\nimport { RevokePermissionPayload } from \"../schema\";\n\n\nexport const MUTATION_REVOKE_PERMISSION = gql`\nmutation RevokePermission(\n  $dropzoneUserId: Int!,\n  $permissionName: Permission!,\n){\n  revokePermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n    dropzoneUser {\n      id\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n`;\n\n\nexport default createMutation<{\n  dropzoneUserId: number,\n  permissionName: string,\n}, RevokePermissionPayload>(\n  MUTATION_REVOKE_PERMISSION, {\n    getPayload: (result) => result.revokePermission,\n    validates: {\n      permissionName: [\n        isRequired(\"Permission name is required\")\n      ]\n    }\n  }\n)","import gql from \"graphql-tag\";\nimport { createMutation, isRequired } from \"../createMutation\";\nimport { GrantPermissionPayload } from \"../schema\";\n\n\nexport const MUTATION_GRANT_PERMISSION = gql`\nmutation GrantPermission(\n  $dropzoneUserId: Int!,\n  $permissionName: Permission!,\n){\n  grantPermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n    dropzoneUser {\n      id\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n`;\n\n\nexport default createMutation<{\n  dropzoneUserId: number,\n  permissionName: string,\n}, GrantPermissionPayload>(\n  MUTATION_GRANT_PERMISSION, {\n    getPayload: (result) => result.grantPermission,\n    validates: {\n      permissionName: [\n        isRequired(\"Permission name is required\")\n      ]\n    }\n  }\n)","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Platform, RefreshControl, StyleSheet, Text } from 'react-native';\nimport { Chip, DataTable, Divider, IconButton, ProgressBar } from 'react-native-paper';\nimport format from \"date-fns/format\";\nimport gql from 'graphql-tag';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { IconProps } from 'react-native-paper/lib/typescript/components/MaterialCommunityIcon';\nimport * as ImagePicker from 'expo-image-picker';\nimport { QUERY_PERMISSION_USER } from \"../../../components/chips/GcaChip\";\n\nimport { successColor, warningColor } from \"../../../constants/Colors\";\nimport { actions, useAppDispatch, useAppSelector } from '../../../redux';\nimport { Mutation, Permission, Query } from '../../../graphql/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport DropzoneUserDialog from '../../../components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport EditUserSheet from '../../../components/dialogs/User';\n\nimport TableCard from \"./UserInfo/TableCard\";\nimport Header from \"./UserInfo/Header\";\nimport InfoGrid from './UserInfo/InfoGrid';\nimport useCurrentDropzone from '../../../graphql/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../graphql/hooks/useDropzoneUser';\nimport Badge from '../../../components/Badge';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useMutationRevokePermission from '../../../graphql/hooks/useMutationRevokePermission';\nimport useMutationGrantPermission from '../../../graphql/hooks/useMutationGrantPermission';\n\n\nconst MUTATION_UPDATE_IMAGE = gql`\n  mutation UpdateUserImage(\n    $id: Int,\n    $image: String\n  ){\n    updateUser(input: {\n      id: $id\n      attributes: {\n        image: $image,\n      }\n    }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        image\n        phone\n        rigs {\n          id\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\nexport default function ProfileScreen() {\n  const state = useAppSelector(state => state.global);\n  const forms = useAppSelector(state => state.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string, name: string, params: { userId: string }}>();\n  const isSelf = currentUser?.id === route.params.userId;\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(Number(route.params.userId));\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused])\n\n  const [mutationUpdateUser, mutation] = useMutation<Mutation>(MUTATION_UPDATE_IMAGE);\n  const revokePermission = useMutationRevokePermission({\n    onSuccess: (payload) => {\n      refetch();\n      dispatch(actions.notifications.showSnackbar({ message: \"Permission revoked\" }))\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: \"error\" }))\n    },\n  });\n  const grantPermission = useMutationGrantPermission({\n    onSuccess: (payload) => {\n      refetch();\n      dispatch(actions.notifications.showSnackbar({ message: \"Permission granted\" }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: \"error\" }))\n    },\n  });\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  \n  const onPickImage = React.useCallback(\n    async () => {\n      try {\n        const result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 0.1,\n          base64: true,\n        }) as { base64: string };\n    \n\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            id: Number(dropzoneUser?.user?.id),\n            image: `data:image/jpeg;base64,${result.base64}`,\n          }\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    [dispatch],\n  )\n\n  const badges = dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const shouldShowBadge = (permission: Permission) => canGrantPermission || badges.includes(permission);\n\n  return (\n    <>\n    {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n    <ScrollableScreen contentContainerStyle={styles.content} refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}>\n      <ScrollView horizontal style={{ width: \"100%\" }} contentContainerStyle={{ flexGrow: 1, padding: 8, justifyContent: \"space-evenly\", backgroundColor: state.theme.colors.primary }}>\n        {\n          [\n            Permission.ActAsPilot,\n            Permission.ActAsDzso,\n            Permission.ActAsGca,\n            Permission.ActAsRigInspector,\n            Permission.ActAsLoadMaster,\n          ].map((permission) =>\n            !shouldShowBadge(permission)\n              ? null\n              : <Badge\n                  type={permission as any}\n                  selected={badges.includes(permission)}\n                  onPress={() => !canGrantPermission ? null :\n                    badges.includes(permission) \n                      ? revokePermission.mutate({\n                          permissionName: permission,\n                          dropzoneUserId: Number(dropzoneUser.id)\n                        }, {\n                        update: async (client, { data }) => {\n                          const c = client.readQuery<Query>({\n                            query: QUERY_PERMISSION_USER,\n                            variables: {\n                              permissions: [permission],\n                              dropzoneId: Number(state.currentDropzoneId),\n                            }\n                          });\n\n                          const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter((edge) => edge.node.id !== dropzoneUser.id);\n                          \n                          client.writeQuery({\n                            query: QUERY_PERMISSION_USER,\n                            variables: {\n                              permissions: [permission],\n                              dropzoneId: Number(state.currentDropzoneId),\n                            },\n                            data: {\n                              ...c,\n                              dropzone: {\n                                ...c?.dropzone,\n                                dropzoneUsers: updatedList\n                              }\n                            }\n                          });\n\n                          return {\n                            data: {\n                              ...c,\n                              dropzone: {\n                                ...c?.dropzone,\n                                dropzoneUsers: updatedList\n                              }\n                            }\n                          };\n                        }\n                      })\n                      : grantPermission.mutate({\n                          permissionName: permission,\n                          dropzoneUserId: Number(dropzoneUser.id),\n                        }, {\n                          update: async (client, { data }) => {\n                            const c = client.readQuery<Query>({\n                              query: QUERY_PERMISSION_USER,\n                              variables: {\n                                permissions: [permission],\n                                dropzoneId: Number(state.currentDropzoneId),\n                              },\n                            });\n  \n                            const current = (c?.dropzone?.dropzoneUsers?.edges || []);\n                            const shouldUpdate = !!current.find((edge) => edge.node.id === dropzoneUser.id);\n                            console.log(current);\n                            console.log(\"c:\");\n                            console.log(c);\n                            \n                            const updatedGcaList = shouldUpdate? [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []).map(\n                                (edge) => edge.node.id !== dropzoneUser.id\n                                ? edge\n                                : {\n                                    ...edge,\n                                    node: {\n                                      ...edge.node,\n                                      ...data.grantPermission?.dropzoneUser,\n                                    }\n                                  }\n                              ),\n                            ] : [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []),\n                              { edge: { node: data.grantPermission?.dropzoneUser}}\n                            ]\n                            const newData = {\n                              ...c,\n                              dropzone: {\n                                ...c?.dropzone,\n                                dropzoneUsers: updatedGcaList\n                              }\n                            };\n                            client.writeQuery({\n                              query: QUERY_PERMISSION_USER,\n                              variables: {\n                                dropzoneId: Number(state.currentDropzoneId),\n                                permissions: [permission]\n                              },\n                              data: newData\n                            });\n\n                            return {\n                              data: newData\n                            };\n                          }\n                        })\n                  }\n                />\n          )\n        }\n      </ScrollView>\n      <Header\n        dropzoneUser={dropzoneUser!}\n        canEdit={isSelf}\n        onEdit={() => {\n          if (dropzoneUser?.user) {\n            dispatch(actions.forms.user.setOpen(dropzoneUser?.user));\n          }\n        }}\n        onPressAvatar={onPickImage}\n      >\n       \n\n        <ScrollView horizontal style={{ marginVertical: 8 }}>\n          <Chip\n            // @ts-ignore\n            icon={({ size }: IconProps) =>\n              <MaterialCommunityIcons name=\"email\" size={size} color=\"#FFFFFF\" />\n            }\n            mode=\"outlined\"\n            style={styles.chip}\n            textStyle={styles.chipTitle}\n          >\n            {dropzoneUser?.user?.email  || \"-\"}\n          </Chip>\n\n          <Chip\n            // @ts-ignore\n            icon={({ size }: IconProps) =>\n              <MaterialCommunityIcons name=\"phone\" size={size} color=\"#FFFFFF\" />\n            }\n            mode=\"outlined\"\n            style={styles.chip}\n            textStyle={styles.chipTitle}\n          >\n            {dropzoneUser?.user?.phone  || \"-\"}\n          </Chip>\n\n          <Chip\n            // @ts-ignore\n            icon={({ size }: IconProps) =>\n              <MaterialCommunityIcons name=\"card-account-details-star-outline\" size={size} color=\"#FFFFFF\" />\n            }\n            mode=\"outlined\"\n            style={styles.chip}\n            textStyle={styles.chipTitle}\n            onPress={() => {\n              if (canUpdateUser) {\n                dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser!));\n              }\n            }}\n          >\n            {!dropzoneUser?.expiresAt\n                  ? \"Not a member\"\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, \"yyyy/MM/dd\")}\n          </Chip>\n        </ScrollView>\n        <Divider style={styles.divider} />\n        <InfoGrid\n          items={[\n            {\n              title: \"Funds\",\n              value: `$${dropzoneUser?.credits || 0}`,\n              onPress: () => {\n                if (dropzoneUser && canAddTransaction) {\n                  dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                }\n              }\n            },\n            { title: \"License\", value: `${dropzoneUser?.user?.license?.name || \"-\"}`},\n            { title: \"Exit weight\", value: Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || \"-\" }\n          ]}\n        />\n        <Divider style={[styles.divider, { backgroundColor: \"white\" }]} />\n      </Header>\n      \n      <TableCard title=\"Rigs\" buttonIcon=\"plus\" onPressButton={() => dispatch(actions.forms.rig.setOpen(true))}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>\n              Container\n            </DataTable.Title>\n            <DataTable.Title numeric>\n              Repack due\n            </DataTable.Title>\n            <DataTable.Title numeric>\n              Canopy size\n            </DataTable.Title>\n            <DataTable.Title numeric>\n              Inspected\n            </DataTable.Title>\n          </DataTable.Header>\n\n          {\n            dropzoneUser?.user?.rigs?.map((rig) =>\n              <DataTable.Row\n                key={`rig-${rig!.id}`}\n                onPress={() => {\n                  dispatch(actions.forms.rig.setOpen(rig));\n                }}\n                onLongPress={() =>\n                  navigation.navigate(\"RigInspectionScreen\", {\n                    dropzoneUserId: Number(route.params.userId),\n                    rig\n                  })\n                }\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell>\n                  {[rig?.make, rig?.model, `#${rig?.serial}`].join(\" \")}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, \"yyyy/MM/dd\") : \"-\"}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  {`${rig?.canopySize}`}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  <IconButton\n                    icon={\n                      dropzoneUser?.rigInspections?.some((insp) => insp.rig?.id === rig.id && insp.isOk)\n                      ? \"eye-check\"\n                      : \"eye-minus\"\n                    }\n                    color={\n                      dropzoneUser?.rigInspections?.some((insp) => insp.rig?.id === rig.id && insp.isOk)\n                      ? successColor\n                      : warningColor\n                    }\n                    onPress={() =>\n                      navigation.navigate(\"RigInspectionScreen\", {\n                        dropzoneUserId: Number(route.params.userId),\n                        rig\n                      })\n                    }\n                  />\n                </DataTable.Cell>\n              </DataTable.Row>\n            )\n          }\n        </DataTable>\n      </TableCard>\n        \n      <TableCard\n        title=\"Transactions\"\n        {\n          ...canAddTransaction ? {\n            buttonIcon: \"plus\",\n            onPressButton: () => {\n              if (dropzoneUser) {\n                dispatch(actions.forms.credits.setOpen(dropzoneUser!));\n              }\n            }\n          } : {}\n        }\n      >\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Time</DataTable.Title>\n            <DataTable.Title>Type</DataTable.Title>\n            <DataTable.Title>Message</DataTable.Title>\n            <DataTable.Title numeric>Amount</DataTable.Title>\n          </DataTable.Header>\n          {\n            dropzoneUser?.transactions?.edges?.map((edge) => (\n              <DataTable.Row key={`transaction-${edge?.node?.id}`}>\n                <DataTable.Cell>\n                  <Text style={{ fontSize: 12, fontStyle: \"italic\", color: \"#999999\" }}>{!edge?.node?.createdAt ? null : format(edge?.node?.createdAt * 1000, \"yyyy/MM/dd hh:mm\")}</Text>\n                </DataTable.Cell>\n                <DataTable.Cell>\n                  <Text style={{ fontSize: 12, fontStyle: \"italic\", color: \"#999999\" }}>{edge?.node?.status}</Text>\n                </DataTable.Cell>\n                <DataTable.Cell>\n                  {edge?.node?.message}\n                </DataTable.Cell>\n                <DataTable.Cell numeric>\n                  {edge?.node?.amount}\n                </DataTable.Cell>\n              </DataTable.Row>\n            ))\n          }\n        </DataTable>\n      </TableCard>\n    </ScrollableScreen>\n        \n    <RigDialog\n      onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n      onSuccess={() => dispatch(actions.forms.rig.setOpen(false))}\n      open={forms.rig.open}\n      userId={Number(dropzoneUser?.user?.id)}\n    />\n    \n    <DropzoneUserDialog\n      onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n      onSuccess={(user) => {\n        dispatch(actions.forms.dropzoneUser.setOpen(false));\n        if (currentUser?.id === dropzoneUser?.id) {\n          dispatch(actions.global.setUser(user.user));\n        }\n      }}\n      open={forms.dropzoneUser.open}\n    />\n\n    <CreditsSheet\n      onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n      onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n      open={forms.credits.open}\n      dropzoneUser={dropzoneUser || undefined}\n    />\n\n    <EditUserSheet\n      onClose={() => dispatch(actions.forms.user.setOpen(false))} \n      onSuccess={() => dispatch(actions.forms.user.setOpen(false))}\n      open={forms.user.open}\n    />\n  </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: \"transparent\",\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n  },\n  chipTitle: {\n    color: \"white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: \"center\"\n  }\n});\n"],"sourceRoot":""}