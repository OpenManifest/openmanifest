{"version":3,"sources":["Switch.tsx","context.ts","internal.ts","MaterialCommunityIcon.tsx","TabsHeaderItem.tsx","TabsHeader.tsx","Swiper.tsx","Tabs.tsx","TabScreen.tsx","components/permissions/PermissionListItem.tsx","screens/authenticated/settings/DropzonePermissionScreen.tsx"],"names":["version","NativeModules","withTheme","rest","checkedColor","color","theme","onTintColor","Platform","disabled","setColor","thumbTintColor","value","props","activeTrackColor","thumbColor","activeThumbColor","trackColor","true","false","onValueChange","TabsContext","goTo","index","useTabNavigation","useContext","getIndicatorStyle","num","width","transform","scaleX","translateX","left","roundToTwo","Math","Number","MaterialCommunityIcons","Animated","require","isErrorLogged","test","e","console","selectable","styles","StyleSheet","icon","backgroundColor","name","size","style","lineHeight","AnimatedText","TabsHeaderItem","showTextLabel","rippleColor","React","Color","textColor","active","opacity","useAnimatedText","position","offset","activeColor","tabIndex","childrenCount","key","tab","mode","onLayout","onTabLayout","onPress","onPressIn","iconPosition","accessibilityTraits","accessibilityRole","accessibilityComponentType","accessibilityLabel","accessibilityState","selected","testID","accessibilityElementsHidden","importantForAccessibility","uppercase","tabRoot","tabRootFixed","flex","touchableRipple","height","justifyContent","alignItems","touchableRippleTop","touchableRippleInner","flexDirection","paddingRight","paddingLeft","minWidth","maxWidth","touchableRippleInnerTop","iconContainer","text","textAlign","letterSpacing","web","transitionDuration","transitionProperty","default","textTop","marginTop","marginRight","TabsHeader","dark","themeMode","elevation","restStyle","customBackground","isDarkTheme","overlay","colors","hasPrimaryBackground","isDark","innerScrollSize","scrollX","scrollRef","layouts","indicatorRef","updateIndicator","cl","useIndicator","tabsLayout","children","length","onTabsLayout","setTabsLayout","event","layout","updateScroll","scrollType","tabsWidth","scrolledX","next","prev","relativeX","overflowLeft","overflowRight","x","y","animated","relative","ref","contentContainerStyle","onContentSizeChange","onScroll","scrollEventThrottle","horizontal","showsHorizontalScrollIndicator","alwaysBounceHorizontal","scrollEnabled","scrollablePadding","pointerEvents","top","removeTopShadow","right","zIndex","tabs","tabsTopIcon","fixedContentContainerStyle","indicator","bottom","transformOrigin","willChange","root","defaultIndex","ind","setIndex","onChangeIndex","currentScreen","renderProps","showLeadingSpace","cache","c","set","k","get","createCache","getDefaultIndex","onInnerChangeIndex","newIndex","persistKey","TabScreen","MUTATION_UPDATE_ROLE","gql","PermissionListItem","title","description","role","permissionName","canChangePermissions","useRestriction","Permission","GrantPermission","useMutation","mutationUpdatePermission","dispatch","useAppDispatch","Item","Switch","permissions","includes","a","async","variables","roleId","id","enabled","optimisticResponse","updateRole","filter","result","data","errors","map","message","actions","notifications","showSnackbar","variant","QUERY_DROPZONE_PERMISSIONS","DropzonePermissionScreen","state","useAppSelector","global","useQuery","dropzoneId","currentDropzoneId","loading","refetch","isFocused","useIsFocused","ProgressBar","indeterminate","accent","dropzone","roles","label","ScrollableScreen","Subheader","Section","Accordion","create","container","display","content","flexGrow","fab","margin","empty"],"mappings":"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","file":"static/js/25.ba4e0a4c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { grey400, grey800, grey50, white, black } from '../styles/colors';\nimport {\n  NativeModules,\n  Platform,\n  StyleProp,\n  Switch as NativeSwitch,\n  ViewStyle,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\nconst version = NativeModules.PlatformConstants\n  ? NativeModules.PlatformConstants.reactNativeVersion\n  : undefined;\n\ntype Props = React.ComponentPropsWithRef<typeof NativeSwitch> & {\n  /**\n   * Disable toggling the switch.\n   */\n  disabled?: boolean;\n  /**\n   * Value of the switch, true means 'on', false means 'off'.\n   */\n  value?: boolean;\n  /**\n   * Custom color for switch.\n   */\n  color?: string;\n  /**\n   * Callback called with the new value when it changes.\n   */\n  onValueChange?: Function;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Switch is a visual toggle between two mutually exclusive states — on and off.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Switch } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n *\n *   const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n *\n *   return <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />;\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Switch = ({\n  value,\n  disabled,\n  onValueChange,\n  color,\n  theme,\n  ...rest\n}: Props) => {\n  const checkedColor = color || theme.colors.accent;\n\n  const onTintColor =\n    Platform.OS === 'ios'\n      ? checkedColor\n      : disabled\n      ? theme.dark\n        ? setColor(white).alpha(0.1).rgb().string()\n        : setColor(black).alpha(0.12).rgb().string()\n      : setColor(checkedColor).alpha(0.5).rgb().string();\n\n  const thumbTintColor =\n    Platform.OS === 'ios'\n      ? undefined\n      : disabled\n      ? theme.dark\n        ? grey800\n        : grey400\n      : value\n      ? checkedColor\n      : theme.dark\n      ? grey400\n      : grey50;\n\n  const props =\n    version && version.major === 0 && version.minor <= 56\n      ? {\n          onTintColor,\n          thumbTintColor,\n        }\n      : Platform.OS === 'web'\n      ? {\n          activeTrackColor: onTintColor,\n          thumbColor: thumbTintColor,\n          activeThumbColor: checkedColor,\n        }\n      : {\n          thumbColor: thumbTintColor,\n          trackColor: {\n            true: onTintColor,\n            false: '',\n          },\n        };\n\n  return (\n    <NativeSwitch\n      value={value}\n      disabled={disabled}\n      onValueChange={disabled ? undefined : onValueChange}\n      {...props}\n      {...rest}\n    />\n  );\n};\n\nexport default withTheme(Switch);\n","import * as React from 'react';\nimport { useContext } from 'react';\n\nexport const TabsContext = React.createContext<{\n  goTo: (index: number) => void;\n  index: number;\n}>({\n  goTo: () => null,\n  index: 0,\n});\n\nexport function useTabNavigation() {\n  return useContext(TabsContext).goTo;\n}\nexport function useTabIndex() {\n  return useContext(TabsContext).index;\n}\n","import * as React from 'react';\nimport type { TextStyle, View, ViewStyle } from 'react-native';\nimport type {\n  AnimatedColorArgs,\n  IndicatorArgs,\n  IndicatorReturns,\n  OffsetScrollArgs,\n} from './utils';\n\nfunction getIndicatorStyle({\n  left,\n  width,\n}: {\n  left: number;\n  width: number;\n}): ViewStyle {\n  return {\n    transform: [\n      { scaleX: width },\n      { translateX: roundToTwo(left / width) || 0 },\n    ],\n  };\n}\n\nfunction roundToTwo(num: number) {\n  return Math.round(num * 100 + Number.EPSILON) / 100;\n}\n\nexport function useIndicator({\n  index,\n  layouts,\n}: IndicatorArgs): IndicatorReturns {\n  const indicatorRef = React.useRef<View>(null);\n  const updateIndicator = React.useCallback(() => {\n    if (!indicatorRef.current || !layouts.current) {\n      return;\n    }\n    const cl = layouts.current[index];\n    if (cl) {\n      indicatorRef.current.setNativeProps({\n        style: getIndicatorStyle({ left: cl.x, width: cl.width }),\n      });\n    }\n  }, [index, indicatorRef, layouts]);\n\n  return [indicatorRef, updateIndicator, null];\n}\n\nexport function useOffsetScroller(_: OffsetScrollArgs) {}\nexport function useAnimatedText({\n  activeColor,\n  active,\n  textColor,\n}: AnimatedColorArgs): TextStyle {\n  return React.useMemo(\n    () => ({\n      color: active ? activeColor : textColor,\n      opacity: active ? 1 : 0.6,\n    }),\n    [active, activeColor, textColor]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Animated } from 'react-native';\n\nlet MaterialCommunityIcons: any;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = Animated.createAnimatedComponent(\n    require('react-native-vector-icons/MaterialCommunityIcons').default\n  );\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  // @ts-ignore\n  MaterialCommunityIcons = ({ name, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Animated.Text {...rest} selectable={false}>\n        □\n      </Animated.Text>\n    );\n  };\n}\n\nconst defaultIcon = ({ name, color, size, style, ...rest }: any) => (\n  <MaterialCommunityIcons\n    selectable={false}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        lineHeight: size,\n      },\n      styles.icon,\n      style,\n    ]}\n    {...rest}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n","import * as React from 'react';\nimport {\n  LayoutChangeEvent,\n  Animated,\n  StyleSheet,\n  View,\n  Platform,\n  TextProps,\n} from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport type { ReactElement } from 'react';\nimport type { TabScreenProps } from './TabScreen';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\nimport Color from 'color';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport { useAnimatedText } from './internal';\nimport type { IconPosition, Mode } from './utils';\nconst AnimatedText = Animated.createAnimatedComponent<\n  React.ComponentType<TextProps>\n>(Text as any);\n\nexport default function TabsHeaderItem({\n  tab,\n  tabIndex,\n  active,\n  goTo,\n  onTabLayout,\n  activeColor,\n  textColor,\n  theme,\n  position,\n  offset,\n  childrenCount,\n  uppercase,\n  mode,\n  iconPosition,\n  showTextLabel,\n}: {\n  tab: ReactElement<TabScreenProps>;\n  tabIndex: number;\n  active: boolean;\n  goTo: (index: number) => void;\n  onTabLayout: (index: number, e: LayoutChangeEvent) => void;\n  activeColor: string;\n  textColor: string;\n  theme: Theme;\n  position: Animated.Value | undefined;\n  offset: Animated.Value | undefined;\n  childrenCount: number;\n  uppercase?: boolean;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  mode: Mode;\n}) {\n  const rippleColor = React.useMemo(\n    () =>\n      Color(activeColor as any)\n        .alpha(0.32)\n        .rgb()\n        .string(),\n    [activeColor]\n  );\n\n  const { color, opacity } = useAnimatedText({\n    active,\n    position,\n    offset,\n    activeColor,\n    textColor,\n    tabIndex,\n    childrenCount,\n  });\n\n  return (\n    <View\n      key={tab.props.label}\n      style={[styles.tabRoot, mode === 'fixed' && styles.tabRootFixed]}\n      onLayout={(e) => onTabLayout(tabIndex, e)}\n    >\n      <TouchableRipple\n        onPress={() => goTo(tabIndex)}\n        onPressIn={() => {}}\n        style={[\n          styles.touchableRipple,\n          iconPosition === 'top' && styles.touchableRippleTop,\n        ]}\n        rippleColor={rippleColor}\n        // @ts-ignore\n        accessibilityTraits={'button'}\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={tab.props.label}\n        accessibilityState={{ selected: active }}\n        testID={`tab_${tabIndex}`}\n      >\n        <View\n          style={[\n            styles.touchableRippleInner,\n            iconPosition === 'top' && styles.touchableRippleInnerTop,\n          ]}\n        >\n          {tab.props.icon ? (\n            <View\n              style={[\n                styles.iconContainer,\n                iconPosition !== 'top' && styles.marginRight,\n              ]}\n            >\n              <MaterialCommunityIcon\n                selectable={false}\n                accessibilityElementsHidden={true}\n                importantForAccessibility=\"no\"\n                name={tab.props.icon || ''}\n                style={{ color: color, opacity }}\n                size={24}\n              />\n            </View>\n          ) : null}\n          {showTextLabel ? (\n            <AnimatedText\n              selectable={false}\n              style={[\n                styles.text,\n                iconPosition === 'top' && styles.textTop,\n                { ...theme.fonts.medium, color, opacity },\n              ]}\n            >\n              {uppercase ? tab.props.label.toUpperCase() : tab.props.label}\n            </AnimatedText>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabRoot: { position: 'relative' },\n  tabRootFixed: { flex: 1 },\n  touchableRipple: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchableRippleTop: {\n    height: 72,\n  },\n  touchableRippleInner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingRight: 16,\n    paddingLeft: 16,\n    minWidth: 90,\n    maxWidth: 360,\n  },\n  touchableRippleInnerTop: {\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 24,\n    height: 24,\n  },\n  text: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    ...Platform.select({\n      web: {\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n      },\n      default: {},\n    }),\n  },\n  textTop: { marginTop: 6 },\n  marginRight: { marginRight: 8 },\n});\n","import type { SwiperRenderProps } from './utils';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\nimport { overlay, Surface } from 'react-native-paper';\nimport color from 'color';\nimport * as React from 'react';\nimport { useIndicator, useOffsetScroller } from './internal';\nimport TabsHeaderItem from './TabsHeaderItem';\n\nexport default function TabsHeader({\n  index,\n  goTo,\n  children,\n  position,\n  offset,\n  theme,\n  dark,\n  style,\n  iconPosition,\n  showTextLabel,\n  showLeadingSpace,\n  uppercase,\n  mode,\n}: SwiperRenderProps) {\n  const { colors, dark: isDarkTheme, mode: themeMode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && themeMode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n\n  let hasPrimaryBackground = colors.primary === backgroundColor;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : // @ts-ignore\n          !color(backgroundColor).isLight();\n  }\n  const textColor = isDark ? '#fff' : '#000';\n  const activeColor = hasPrimaryBackground ? textColor : theme.colors.primary;\n\n  const innerScrollSize = React.useRef<number | null>(null);\n  const scrollX = React.useRef<number>(0);\n  const scrollRef = React.useRef<ScrollView>(null);\n  const layouts = React.useRef<Record<string, LayoutRectangle> | null>(null);\n  const [tabsLayout, setTabsLayout] = React.useState<LayoutRectangle | null>(\n    null\n  );\n  const [indicatorRef, updateIndicator, indicatorStyle] = useIndicator({\n    tabsLayout,\n    layouts,\n    index,\n    offset,\n    position,\n    childrenCount: children.length,\n  });\n\n  const onTabsLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      setTabsLayout(e.nativeEvent.layout);\n    },\n    [setTabsLayout]\n  );\n\n  const onTabLayout = React.useCallback(\n    (tabIndex: number, event: LayoutChangeEvent) => {\n      layouts.current = {\n        ...layouts.current,\n        [tabIndex]: event.nativeEvent.layout,\n      };\n      updateIndicator();\n    },\n    [layouts, updateIndicator]\n  );\n\n  const updateScroll = React.useCallback(\n    (scrollType?: 'next' | 'prev') => {\n      if (!layouts.current || mode !== 'scrollable') {\n        return;\n      }\n      let cl = layouts.current[index];\n\n      if (!cl || !scrollRef.current || !tabsLayout) {\n        return;\n      }\n\n      const tabsWidth = tabsLayout.width;\n      let scrolledX = scrollX.current;\n      // console.log({ scrolledX, scrollType });\n      if (scrollType === 'next') {\n        const next = layouts.current?.[index + 1];\n        if (next) {\n          cl = next;\n        }\n      } else if (scrollType === 'prev') {\n        const prev = layouts.current?.[index - 1];\n        if (prev) {\n          cl = prev;\n        }\n      }\n      const relativeX = cl.x - scrolledX;\n      const overflowLeft = relativeX;\n      const overflowRight = -tabsWidth + relativeX + cl.width;\n\n      if (overflowRight > -50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowRight + 50,\n          y: 0,\n          animated: true,\n        });\n      } else if (overflowLeft < 50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowLeft - 50,\n          y: 0,\n          animated: true,\n        });\n      }\n    },\n    [mode, layouts, index, scrollRef, scrollX, tabsLayout]\n  );\n\n  // subscribes to offset on native devices to scroll tab bar faster when scrolling (iOS only since Android bugs)\n  useOffsetScroller({ updateScroll, index, offset, mode });\n\n  // updates scroll when index changes (updateScroll function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateScroll();\n  }, [updateScroll]);\n\n  // update indicator when index changes (updateIndicator function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateIndicator();\n  }, [updateIndicator]);\n\n  return (\n    <View style={styles.relative}>\n      <Surface\n        style={[\n          { backgroundColor, elevation },\n          restStyle,\n          styles.tabs,\n          iconPosition === 'top' && styles.tabsTopIcon,\n        ]}\n        onLayout={onTabsLayout}\n      >\n        <ScrollView\n          ref={scrollRef}\n          contentContainerStyle={\n            mode === 'fixed' ? styles.fixedContentContainerStyle : undefined\n          }\n          onContentSizeChange={(e) => {\n            innerScrollSize.current = e;\n          }}\n          onScroll={(e) => {\n            scrollX.current = e.nativeEvent.contentOffset.x;\n          }}\n          scrollEventThrottle={25}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n          alwaysBounceHorizontal={mode === 'scrollable'}\n          scrollEnabled={mode === 'scrollable'}\n        >\n          {mode === 'scrollable' && showLeadingSpace ? (\n            <View style={styles.scrollablePadding} />\n          ) : null}\n\n          {React.Children.map(children, (tab, tabIndex) => (\n            <TabsHeaderItem\n              theme={theme}\n              tabIndex={tabIndex}\n              tab={tab}\n              active={index === tabIndex}\n              onTabLayout={onTabLayout}\n              goTo={goTo}\n              activeColor={activeColor}\n              textColor={textColor}\n              position={position}\n              offset={offset}\n              childrenCount={children.length}\n              uppercase={uppercase}\n              iconPosition={iconPosition}\n              showTextLabel={showTextLabel}\n              mode={mode}\n            />\n          ))}\n          <Animated.View\n            ref={indicatorRef}\n            pointerEvents=\"none\"\n            style={[\n              styles.indicator,\n              {\n                backgroundColor: activeColor,\n              },\n              indicatorStyle,\n            ]}\n          />\n        </ScrollView>\n        <Animated.View\n          style={[\n            styles.removeTopShadow,\n            {\n              height: elevation,\n              backgroundColor,\n              top: -elevation,\n            },\n          ]}\n        />\n      </Surface>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  relative: { position: 'relative' },\n  removeTopShadow: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    zIndex: 2,\n  },\n  scrollablePadding: {\n    width: 52,\n  },\n  tabs: {\n    height: 48,\n  },\n  tabsTopIcon: {\n    height: 72,\n  },\n  fixedContentContainerStyle: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n    height: 2,\n    width: 1,\n    left: 0,\n    bottom: 0,\n    ...Platform.select({\n      web: {\n        backgroundColor: 'transparent',\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n        transformOrigin: 'left',\n        willChange: 'transform',\n      },\n      default: {},\n    }),\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport type { SwiperProps } from './utils';\nimport type { TabScreenProps } from './TabScreen';\nimport { TabsContext } from './context';\nimport TabsHeader from './TabsHeader';\n\nfunction Swiper(props: SwiperProps) {\n  const {\n    theme,\n    dark,\n    style,\n    defaultIndex,\n    onChangeIndex,\n    iconPosition,\n    showTextLabel,\n    showLeadingSpace,\n    uppercase,\n    mode,\n  } = props;\n  const [index, setIndex] = React.useState<number>(defaultIndex || 0);\n  const goTo = React.useCallback(\n    (ind: number) => {\n      setIndex(ind);\n      onChangeIndex(ind);\n    },\n    [setIndex, onChangeIndex]\n  );\n\n  let children: React.Component<TabScreenProps>[] = props.children;\n\n  const currentScreen = children[index];\n  if (!currentScreen || !currentScreen) {\n    return null;\n  }\n  const renderProps = {\n    index,\n    goTo,\n    children,\n    theme,\n    dark,\n    style,\n    offset: undefined,\n    position: undefined,\n    iconPosition,\n    showTextLabel,\n    showLeadingSpace,\n    uppercase,\n    mode,\n  };\n\n  return (\n    <View style={styles.root}>\n      <TabsHeader {...renderProps} />\n      <TabsContext.Provider value={{ goTo, index }}>\n        {currentScreen}\n      </TabsContext.Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n  },\n});\n\nexport default Swiper;\n","import * as React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport { withTheme } from 'react-native-paper';\nimport Swiper from './Swiper';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport type { IconPosition, Mode } from './utils';\nimport { Platform } from 'react-native';\n\n// used to persist position on web\nconst cache = createCache();\n\nfunction Tabs({\n  onChangeIndex,\n  children,\n  persistKey,\n  theme,\n  dark,\n  style,\n  defaultIndex,\n  mode = 'fixed',\n  uppercase = true,\n  iconPosition = 'leading',\n  showTextLabel = true,\n  showLeadingSpace = true,\n}: {\n  children: any;\n  persistKey?: string;\n  theme: Theme;\n  dark?: boolean;\n  style?: ViewStyle;\n  defaultIndex?: number;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  showLeadingSpace?: boolean;\n  uppercase?: boolean;\n  mode?: Mode;\n  onChangeIndex?: (index: number) => void;\n}) {\n  const onInnerChangeIndex = React.useCallback(\n    (newIndex) => {\n      if (persistKey && Platform.OS === 'web') {\n        cache.set(persistKey, newIndex);\n      }\n      onChangeIndex?.(newIndex);\n    },\n    [persistKey, onChangeIndex]\n  );\n\n  return (\n    <Swiper\n      style={style}\n      dark={dark}\n      theme={theme}\n      defaultIndex={getDefaultIndex(defaultIndex, persistKey)}\n      onChangeIndex={onInnerChangeIndex}\n      uppercase={uppercase}\n      iconPosition={iconPosition}\n      showTextLabel={showTextLabel}\n      showLeadingSpace={showLeadingSpace}\n      mode={mode}\n    >\n      {children}\n    </Swiper>\n  );\n}\n\nfunction getDefaultIndex(\n  defaultIndex: number | undefined,\n  persistKey: string | undefined\n) {\n  if (persistKey) {\n    return cache.get(persistKey) || defaultIndex || 0;\n  }\n  return defaultIndex || 0;\n}\n// used to persist position on web\nfunction createCache() {\n  let c: { [k: string]: number } = {};\n  const set = (k: string, i: number) => {\n    c[k] = i;\n  };\n  const get = (key: string) => c[key];\n  return {\n    set,\n    get,\n  };\n}\n\nexport default withTheme(Tabs);\n","import * as React from 'react';\nimport type { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\n\nexport interface TabScreenProps {\n  label: string;\n  icon?: IconSource;\n  children: any;\n  preload?: () => any;\n}\n\nexport default function TabScreen({ children }: TabScreenProps) {\n  return React.Children.only(children);\n}\n","import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport * as React from \"react\";\nimport { List, Switch } from \"react-native-paper\";\nimport { Mutation, Permission, UserRole } from \"../../graphql/schema.d\";\nimport useRestriction from \"../../hooks/useRestriction\";\nimport { actions, useAppDispatch } from \"../../redux\";\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: UserRole;\n  permissionName: string;\n}\n\nconst MUTATION_UPDATE_ROLE = gql`\n  mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n    updateRole(input: {\n      id: $roleId,\n      permission: $permissionName,\n      enabled: $enabled\n    }) {\n      role {\n        id\n        name\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission, mutation] = useMutation<Mutation>(MUTATION_UPDATE_ROLE);\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: \"100%\" }}\n      right={() =>\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName)\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName]\n                  }\n                }\n              }\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(actions.notifications.showSnackbar({ message, variant: \"error\" }))\n              );\n              return;\n            }\n          }}\n        />\n      }\n      {...{ title, description }}\n    />\n  );\n}","import { useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { Query } from \"../../../graphql/schema.d\";\nimport { useAppSelector } from '../../../redux';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PermissionListItem from '../../../components/permissions/PermissionListItem';\n\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzoneRigs(\n    $dropzoneId: Int!\n  ) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const state = useAppSelector(state => state.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    }\n  });\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused]);\n\n  return (\n      loading\n        ? <ProgressBar indeterminate color={state.theme.colors.accent} />\n        : <Tabs defaultIndex={0} mode=\"scrollable\">\n              {\n                data?.dropzone?.roles?.map((role) =>\n                  <TabScreen label={role.name!} key={`permission-tab-role-${role.id}`}>\n                    <ScrollableScreen>\n                      \n                      <List.Subheader>User Management</List.Subheader>\n                      <PermissionListItem\n                        role={role}\n                        permissionName=\"readUser\"\n                        description=\"View other users' profiles\"\n                        title=\"View Users\"\n                      />\n\n                      <PermissionListItem\n                        role={role}\n                        permissionName=\"updateUser\"\n                        description=\"Update other users\"\n                        title=\"Update Users\"\n                      />\n\n                      <List.Section title=\"Manifest\" style={{ width: \"100%\"}}>\n                        <List.Accordion title=\"Loads\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"readLoad\"\n                            description=\"See available loads on the manifest screen\"\n                            title=\"View Load\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createLoad\"\n                            title=\"Create Loads\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateLoad\"\n                            description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                            title=\"Update Loads\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteLoad\"\n                            description=\"Permanently delete existing loads\"\n                            title=\"Delete Load\"\n                          />\n                        </List.Accordion>\n\n                        <List.Accordion title=\"Manifesting\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createSlot\"\n                            description=\"Create a slot for himself/herself only\"\n                            title=\"Manifest self\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateSlot\"\n                            description=\"Update own slot after manifesting themselves\"\n                            title=\"Update own slot\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteSlot\"\n                            description=\"Take themselves off the load\"\n                            title=\"Remove own slot\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createUserSlot\"\n                            description=\"Manifest other users, e.g yourself + others\"\n                            title=\"Manifest other people\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createUserSlotWithSelf\"\n                            description=\"Allow manifesting others only if the user is part of the group\"\n                            title=\"Manifest own groups\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateUserSlot\"\n                            description=\"Update other people's slots on a load\"\n                            title=\"Update other users slot\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteUserSlot\"\n                            description=\"Delete other users' slots off a load\"\n                            title=\"Take others off the load\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createStudentSlot\"\n                            description=\"Manifest a student on a load\"\n                            title=\"Manifest students\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateStudentSlot\"\n                            description=\"Make changes to an already manifested student\"\n                            title=\"Update student slots\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteStudentSlot\"\n                            description=\"Take a student off the load\"\n                            title=\"Remove student slots\"\n                          />\n                        </List.Accordion>\n                      </List.Section>\n                      \n                      <List.Section title=\"Administration\" style={{ width: \"100%\"}}>\n                        <List.Accordion title=\"Dropzone\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateDropzone\"\n                            description=\"Change dropzone name, visibility, and branding\"\n                            title=\"Update Dropzone\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteDropzone\"\n                            description=\"Permanently delete dropzone\"\n                            title=\"Delete Dropzone\"\n                          />\n                        </List.Accordion>\n\n                        <List.Accordion title=\"Ticket types\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createTicketType\"\n                            description=\"Create new jump tickets\"\n                            title=\"Create Ticket\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateTicketType\"\n                            description=\"Make changes to existing ticket types, including prices\"\n                            title=\"Update Tickets\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteTicketType\"\n                            description=\"Delete existing ticket types\"\n                            title=\"Remove Tickets\"\n                          />\n                        </List.Accordion>\n\n                        <List.Accordion title=\"Ticket addons\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createExtra\"\n                            description=\"Set up new ticket addons\"\n                            title=\"Create Ticket addon\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateExtra\"\n                            description=\"Make changes to existing ticket addons, including prices\"\n                            title=\"Update Ticket addons\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteExtra\"\n                            description=\"Delete existing ticket addons\"\n                            title=\"Remove Ticket addons\"\n                          />\n                        </List.Accordion>\n\n                        <List.Accordion title=\"Planes\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createPlane\"\n                            description=\"Add new aircrafts\"\n                            title=\"Create Aircraft\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updatePlane\"\n                            description=\"Make changes to existing aircrafts\"\n                            title=\"Update Aircraft\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deletePlane\"\n                            description=\"Remove existing aircrafts\"\n                            title=\"Remove Aircraft\"\n                          />\n                        </List.Accordion>\n                        \n                        <List.Accordion title=\"Rigs\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createDropzoneRig\"\n                            description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                            title=\"Create Rig\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateDropzoneRig\"\n                            description=\"Make changes to existing student and tandem rigs\"\n                            title=\"Update Rigs\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteDropzoneRig\"\n                            description=\"Delete existing student and tandem rigs\"\n                            title=\"Remove Rigs\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateFormTemplate\"\n                            description=\"Make changes to the rig inspection template\"\n                            title=\"Modify Rig Inspection Form\"\n                          />\n                        </List.Accordion>\n                      </List.Section>\n                    </ScrollableScreen>\n                  </TabScreen>\n                )\n              }\n          </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\n"],"sourceRoot":""}