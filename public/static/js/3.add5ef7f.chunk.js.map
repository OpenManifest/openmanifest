{"version":3,"sources":["DataTableCell.tsx","DataTableHeader.tsx","DataTableTitle.tsx","DataTablePagination.tsx","DataTableRow.tsx","DataTable.tsx","context.ts","internal.ts","MaterialCommunityIcon.tsx","TabsHeaderItem.tsx","TabsHeader.tsx","Swiper.tsx","Tabs.tsx","TabScreen.tsx","../src/ImagePicker.types.ts","node_modules/expo-image-picker/node_modules/uuid/dist/esm-browser/rng.js","node_modules/expo-image-picker/node_modules/uuid/dist/esm-browser/bytesToUuid.js","node_modules/expo-image-picker/node_modules/uuid/dist/esm-browser/v4.js","../src/ExponentImagePicker.web.ts","../src/ImagePicker.ts"],"names":["DataTableCell","rest","style","styles","numeric","numberOfLines","StyleSheet","container","flex","flexDirection","alignItems","right","justifyContent","DataTableHeader","borderBottomColor","color","theme","header","height","paddingHorizontal","borderBottomWidth","withTheme","DataTableTitle","spinAnim","React","Animated","sortDirection","current","toValue","duration","useNativeDriver","textColor","spin","inputRange","outputRange","icon","transform","rotate","name","size","direction","I18nManager","disabled","onPress","alignContent","paddingVertical","cell","lineHeight","fontSize","fontWeight","sorted","marginLeft","DataTablePagination","labelColor","page","onPageChange","numberOfPages","paddingLeft","label","marginRight","borderStyle","minHeight","content","pointerEvents","DataTable","width","TabsContext","goTo","index","useTabNavigation","useContext","getIndicatorStyle","num","scaleX","translateX","left","roundToTwo","Math","Number","MaterialCommunityIcons","require","isErrorLogged","test","e","console","selectable","backgroundColor","AnimatedText","TabsHeaderItem","showTextLabel","rippleColor","Color","active","opacity","useAnimatedText","position","offset","activeColor","tabIndex","childrenCount","key","tab","mode","onLayout","onTabLayout","onPressIn","iconPosition","accessibilityTraits","accessibilityRole","accessibilityComponentType","accessibilityLabel","accessibilityState","selected","testID","accessibilityElementsHidden","importantForAccessibility","uppercase","tabRoot","tabRootFixed","touchableRipple","touchableRippleTop","touchableRippleInner","paddingRight","minWidth","maxWidth","touchableRippleInnerTop","iconContainer","text","textAlign","letterSpacing","Platform","web","transitionDuration","transitionProperty","default","textTop","marginTop","TabsHeader","dark","themeMode","elevation","restStyle","customBackground","isDarkTheme","overlay","colors","hasPrimaryBackground","isDark","innerScrollSize","scrollX","scrollRef","layouts","indicatorRef","updateIndicator","cl","useIndicator","tabsLayout","children","length","onTabsLayout","setTabsLayout","event","layout","updateScroll","scrollType","tabsWidth","scrolledX","next","prev","relativeX","overflowLeft","overflowRight","x","y","animated","relative","ref","contentContainerStyle","onContentSizeChange","onScroll","scrollEventThrottle","horizontal","showsHorizontalScrollIndicator","alwaysBounceHorizontal","scrollEnabled","scrollablePadding","top","removeTopShadow","zIndex","tabs","tabsTopIcon","fixedContentContainerStyle","indicator","bottom","transformOrigin","willChange","root","props","defaultIndex","ind","setIndex","onChangeIndex","currentScreen","renderProps","showLeadingSpace","value","cache","c","set","k","get","createCache","getDefaultIndex","onInnerChangeIndex","newIndex","persistKey","TabScreen","MediaTypeOptions","VideoExportPreset","UIImagePickerControllerQualityType","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","byteToHex","i","toString","substr","bytesToUuid","buf","bth","join","v4","options","Array","rnds","random","ii","MediaTypeInput","All","Images","Videos","launchImageLibraryAsync","mediaTypes","allowsMultipleSelection","openFileBrowserAsync","launchCameraAsync","capture","getCameraPermissionsAsync","permissionGrantedResponse","requestCameraPermissionsAsync","getMediaLibraryPermissionsAsync","_writeOnly","requestMediaLibraryPermissionsAsync","status","GRANTED","expires","granted","canAskAgain","mediaTypeFormat","input","document","createElement","display","setAttribute","body","appendChild","Promise","resolve","reject","addEventListener","a","async","files","readFile","img","cancelled","all","from","map","imgs","removeChild","MouseEvent","dispatchEvent","targetFile","reader","FileReader","onerror","onload","target","uri","result","returnRaw","image","Image","src","naturalWidth","naturalHeight","readAsDataURL","writeOnly","imagePickerMethod","requestMediaLibaryPermissionsAsync","UnavailabilityError"],"mappings":"8VAqDA,IAAMA,EAAgB,SAAC,GAAD,IAAC,EAAD,EAAC,WAAD,EAAC,QAAD,EAAC,QAA+BC,EAAhC,6CACpB,4BAEEC,MAAO,CAACC,EAAD,UAAmBC,GAAWD,EAA9B,WAEP,qBAAME,cAAe,GALzB,KASAL,+BAEA,IAAMG,EAASG,EAAA,SAAkB,CAC/BC,UAAW,CACTC,KADS,EAETC,cAFS,MAGTC,WAAY,UAGdC,MAAO,CACLC,eAAgB,cAIpB,I,gPCzBA,IAAMC,EAAkB,SAAC,GAAgD,IAAhD,EAA+C,EAA/C,WAA+C,EAA/C,QAA+C,EAA/C,MAA6BZ,EAAkB,oCAChEa,EAAoBC,IAAMC,WAAND,sBAA1B,SAKA,OACE,4BAAgBb,MAAO,CAACC,EAAD,OAAgB,CAAEW,qBAAlB,KADzB,IAOFD,iCAEA,IAAMV,EAASG,EAAA,SAAkB,CAC/BW,OAAQ,CACNR,cADM,MAENS,OAFM,GAGNC,kBAHM,GAINC,kBAA8C,EAA3Bd,qBAIRe,cAAf,G,8OCCA,IAAMC,EAAiB,SAAC,GASV,IATU,EASX,EATW,UASX,EATW,WASX,EATW,UASX,EATW,gBASX,EATW,QASX,EATW,MASX,IAFXjB,qBAEW,MATW,EASX,EADRJ,EACQ,wFACMsB,EAAaC,SAC5B,IAAIC,IAAJ,MAAmBC,kBADrB,IAAQC,QAIRH,aAAgB,WACdC,aAA0B,CACxBG,QAASF,kBADe,EAExBG,SAFwB,IAGxBC,iBAAiB,IAHnBL,UAKC,CAACC,EANJF,IAQA,IAAMO,EAAYhB,IAAMC,SAAND,sBAAlB,SAEMiB,EAAOT,EAAA,YAAqB,CAChCU,WAAY,CAAC,EADmB,GAEhCC,YAAa,CAAC,OAAO,YAGjBC,EAAOT,EACX,gBAACD,EAAA,EAAD,MAAevB,MAAO,CAACC,EAAD,KAAc,CAAEiC,UAAW,CAAC,CAAEC,OAAQL,OAC1D,qBACEM,KADF,WAEEC,KAFF,GAGExB,MAAOC,SAHT,KAIEwB,UAAWC,gBAA4B,SAN7C,KAWA,OACE,uBAA0BC,UAA1B,EAA8CC,QAASA,GAAvD,GACE,qBAAMzC,MAAO,CAACC,EAAD,UAAmBC,GAAWD,EAA9B,UAAb,EAGE,qBACED,MAAO,CACLC,EADK,KAELuB,EAAgBvB,EAAH,OAAmB,CAAEY,MAAOgB,IAE3C1B,cAAeA,GAVvB,MAmBFiB,gCAEA,IAAMnB,EAASG,EAAA,SAAkB,CAC/BC,UAAW,CACTC,KADS,EAETC,cAFS,MAGTmC,aAHS,SAITC,gBAAiB,IAGnBlC,MAAO,CACLC,eAAgB,YAGlBkC,KAAM,CACJ5B,OADI,GAEJ6B,WAFI,GAGJC,SAHI,GAIJC,WAJI,MAKJvC,WAAY,UAGdwC,OAAQ,CACNC,WAAY,GAGdhB,KAAM,CACJjB,OADI,GAEJN,eAAgB,YAILS,cAAf,G,wNC5EA,IAAM+B,EAAsB,SAAC,GAQf,IARe,EAQhB,EARgB,QAQhB,EARgB,OAQhB,EARgB,gBAQhB,EARgB,eAQhB,EARgB,QAQhB,EARgB,MAOxBnD,EACQ,uEACLoD,EAAatC,IAAMC,SAAND,sBAAnB,SAEA,OACE,4BAAgBb,MAAO,CAACC,EAAD,eACrB,qBAAMD,MAAO,CAACC,EAAD,MAAe,CAAEY,MAAOsC,IAAehD,cAAe,GADrE,GAIE,qBACE8B,KAAM,gBAAC,EAAD,EAAC,KAAQpB,EAAT,EAASA,MAAT,OACJ,qBACEuB,KADF,eAEEvB,MAFF,EAGEwB,KAHF,EAIEC,UAAWC,gBAA4B,SAG3C1B,MAAOC,SATT,KAUE0B,SAVF,IAUYY,EACVX,QAAS,kBAAMY,EAAaD,EAAD,MAE7B,qBACEnB,KAAM,gBAAC,EAAD,EAAC,KAAQpB,EAAT,EAASA,MAAT,OACJ,qBACEuB,KADF,gBAEEvB,MAFF,EAGEwB,KAHF,EAIEC,UAAWC,gBAA4B,SAG3C1B,MAAOC,SATT,KAUE0B,SAAUc,OAAuBF,IAASE,EAV5C,EAWEb,QAAS,kBAAMY,EAAaD,EAAD,QAMnCF,qCAEA,IAAMjD,EAASG,EAAA,SAAkB,CAC/BC,UAAW,CACTK,eADS,WAETH,cAFS,MAGTC,WAHS,SAIT+C,YAAa,IAGfC,MAAO,CACLV,SADK,GAELW,YAAa,MAIFtC,cAAf,G,+MC3FA,IA0BMlB,EAASG,EAAA,SAAkB,CAC/BC,UAAW,CACTqD,YADS,QAETxC,kBAAmBd,IAFV,cAGTuD,UAHS,GAIT1C,kBAAmB,IAErB2C,QAAS,CACPtD,KADO,EAEPC,cAAe,SAIJY,eAvCM,SAAC,GAOR,IAPQ,EAOT,EAPS,UAOT,EAPS,QAOT,EAPS,QAOT,EAPS,WAOT,EAPS,cAMjBpB,EACQ,8DACLa,EAAoBC,IAAMC,WAAND,sBAA1B,SAKA,OACE,4BAEE4B,QAFF,EAGEzC,MAAO,CAACC,EAAD,UAAmB,CAAEW,qBAArB,KAEP,qBAAMZ,MAAOC,EAAb,QAA6B4D,cAAeA,GANhD,O,+MCAF,IAAMC,EAAY,SAAC,GAAD,IAAC,EAAD,EAAC,WAAD,EAAC,MAAsB/D,EAAvB,mCAChB,4BAAgBC,MAAO,CAACC,EAAD,eADzB,IAOA6D,WAGAA,UAGAA,QAGAA,SAGAA,eAEA,IAAM7D,EAASG,EAAA,SAAkB,CAC/BC,UAAW,CACT0D,MAAO,UAIX,O,yLCnGaC,EAAc,gBAGxB,CACDC,KAAM,kBADL,MAEDC,MAAO,IAGF,SAASC,IACd,OAAOC,wBAAP,K,4FCHF,SAASC,EAAkB,GAMZ,IASKC,EAfO,EAMb,EANa,KAEzBP,EAIY,EAJZA,MAKA,MAAO,CACL7B,UAAW,CACT,CAAEqC,OAAQR,GACV,CAAES,YAKYF,EALWG,EAAXC,EAMXC,WAAWL,MAAYM,OAAvBD,SAAP,KAN8C,M,IChBhD,E,+NAEA,IAEEE,EAAyBtD,4BACvBuD,OADFD,SAGA,SACA,IAAIE,GADM,EAKVF,EAAyB,YAAwB,IAAvB,EAAsB,EAAtB,KAAW9E,EAAW,gBAmB9C,OAjBA,IAEK,8DAA8DiF,KAC7DC,EAFJ,UAKEC,iBAGFA,gVAKAH,MAIA,gBAACxD,EAAA,EAAD,aAAyB4D,YAAY,IADvC,WAQJ,IAiBMlF,EAASG,EAAA,SAAkB,CAC/B6B,KAAM,CACJmD,gBAAiB,iBAIrB,EAvBoB,SAAC,GAAD,IAAC,EAAD,EAAC,OAAD,EAAC,QAAD,EAAC,OAAD,EAAC,MAA+BrF,EAAhC,8CAClB,qBACEoF,YADF,EAEE/C,KAFF,EAGEvB,MAHF,EAIEwB,KAJF,EAKErC,MAAO,CACL,CACE6C,WAAYR,GAEdpC,EAJK,SANX,K,ikBCzBA,IAAMoF,EAAe9D,4BAArB,KAIe,SAAS+D,EAAe,GAgCnC,IAhCmC,EAgCpC,EAhCoC,MAgCpC,EAhCoC,WAgCpC,EAhCoC,SAgCpC,EAhCoC,OAgCpC,EAhCoC,cAgCpC,EAhCoC,cAgCpC,EAhCoC,YAgCpC,EAhCoC,QAgCpC,EAhCoC,WAgCpC,EAhCoC,SAgCpC,EAhCoC,gBAgCpC,EAhCoC,YAgCpC,EAhCoC,OAgCpC,EAhCoC,aAerCC,EAiBC,EAjBDA,cAkBMC,EAAclE,WAClB,kBACEmE,wBAFgBnE,WAMlB,CANF,IASA,EFdK,SAAyB,GAIE,IAJF,EAIC,EAJD,cAIC,EAJD,OAG9BO,EAC+B,EAD/BA,UAEA,OAAO,WACL,iBAAO,CACLhB,MAAO6E,EAAM,EADR,EAELC,QAASD,EAAM,EAAO,MAExB,CAACA,EAAO,EALV,IES2BE,CAAgB,CACzCF,SACAG,WACAC,SACAC,cACAlE,YACAmE,WACAC,kBAPI,EAAN,EAAM,MAASN,EAAf,EAAeA,QAUf,OACE,qBACEO,IAAKC,QADP,MAEEnG,MAAO,CAACC,EAAD,QAAiBmG,aAAoBnG,EAF9C,cAGEoG,SAAWpB,YAAD,OAAOqB,EAAYN,EAAS,KAEtC,qBACEvD,QAAS,kBAAMwB,EADjB,IAEEsC,UAAW,aACXvG,MAAO,CACLC,EADK,gBAELuG,WAA0BvG,EAL9B,oBAOEuF,YAPF,EASEiB,oBATF,SAUEC,kBAVF,SAWEC,2BAXF,SAYEC,mBAAoBT,QAZtB,MAaEU,mBAAoB,CAAEC,SAAUpB,GAChCqB,OAAM,OAASf,GAEf,qBACEhG,MAAO,CACLC,EADK,qBAELuG,WAA0BvG,EAFrB,0BAKNkG,aACC,qBACEnG,MAAO,CACLC,EADK,cAELuG,WAA0BvG,EAFrB,cAKP,mBACEkF,YADF,EAEE6B,6BAFF,EAGEC,0BAHF,KAIE7E,KAAM+D,cAJR,GAKEnG,MAAO,CAAEa,MAAF,EAAgB8E,WACvBtD,KAAM,MAnBd,KAuBGkD,EACC,mBACEJ,YADF,EAEEnF,MAAO,CACLC,EADK,KAELuG,WAA0BvG,EAFrB,eAGAa,QAAL,QAHK,IAGoBD,QAAO8E,cAGjCuB,EAAYf,cAAH,cAAmCA,QATnC,OA7CtB,QA+DF,IAAMlG,EAASG,EAAA,SAAkB,CAC/B+G,QAAS,CAAEtB,SAAU,YACrBuB,aAAc,CAAE9G,KAAM,GACtB+G,gBAAiB,CACfrG,OADe,GAEfN,eAFe,SAGfF,WAAY,UAEd8G,mBAAoB,CAClBtG,OAAQ,IAEVuG,qBAAsB,CACpBhH,cADoB,MAEpBC,WAFoB,SAGpBE,eAHoB,SAIpB8G,aAJoB,GAKpBjE,YALoB,GAMpBkE,SANoB,GAOpBC,SAAU,KAEZC,wBAAyB,CACvBpH,cAAe,UAEjBqH,cAAe,CACb7D,MADa,GAEb/C,OAAQ,IAEV6G,KAAK,EAAD,CACFC,UADI,SAEJC,cAFI,GAGDC,EAAA,SAAgB,CACjBC,IAAK,CACHC,mBADG,QAEHC,mBAAoB,OAEtBC,QAAS,MAGbC,QAAS,CAAEC,UAAW,GACtB7E,YAAa,CAAEA,YAAa,K,ikBC9Jf,SAAS8E,EAAW,GAcZ,IAdY,EAcb,EAda,QAcb,EAda,OAcb,EAda,WAcb,EAda,WAcb,EAda,SAcb,EAda,QAcb,EAda,OAcb,EAda,QAcb,EAda,eAcb,EAda,gBAcb,EAda,mBAcb,EAda,UAajCnC,EACoB,EADpBA,KAEM,EAAN,EAAM,SAAN,EAAgBoC,KAAyBC,EAAzC,EAAmCrC,KACnC,EAIehG,gBAJf,GAAM,EAAN,EACEgF,gBADF,IAEEsD,iBAFF,MAAM,EAAN,EAGKC,EAHL,uCAQMvD,EAAkBwD,IAEpBC,gBAAeJ,EACfK,YAAQJ,EAAWK,EADnBF,SAEAE,EAJJ,SAMIC,EAAuBD,YAA3B,EAUMlH,GATN,mBAAW2G,EACTS,EAGE7D,oBAGKvE,OAJPoI,WAMsB,OAAxB,OACMlD,EAAciD,EAAoB,EAAelI,SAAvD,QAEMoI,EAAkB5H,SAAxB,MACM6H,EAAU7H,SAAhB,GACM8H,EAAY9H,SAAlB,MACM+H,EAAU/H,SAAhB,MACA,EAAoCA,WAApC,iBAAM,EAAN,KAAM,EAAN,KAGA,EHvCK,SAAsB,GAGQ,IAHR,EAGO,EAHP,MAE3B+H,EACkC,EADlCA,QAEMC,EAAehI,SAArB,MACMiI,EAAkB,eAAkB,WACxC,GAAKD,EAAD,SAA0BD,EAA9B,SAGA,IAAMG,EAAKH,UAAX,GACA,GACEC,yBAAoC,CAClCtJ,MAAOqE,EAAkB,CAAEI,KAAM+E,EAAR,EAAczF,MAAOyF,EAAGzF,aAGpD,CAACG,EAAM,EAVV,IAYA,MAAO,CAACoF,EAAa,EAArB,MGsBwDG,CAAa,CACnEC,aACAL,UACAnF,QACA4B,SACAD,WACAI,cAAe0D,EAASC,SAN1B,WAAM,EAAN,KAAM,EAAN,KAAM,EAAN,KASMC,GAAe,eAClB5E,YACC6E,EAAc7E,cAAd6E,UAEF,CAJF,IAOMxD,GAAc,eAClB,cACE+C,iBACKA,EADa,SAAlBA,UAEE,EAAYU,cAAkBC,SAEhCT,MAEF,CAACF,EARH,IAWMY,GAAe,eAClBC,YACC,GAAKb,EAAD,SAAJ,eAAwBjD,EAAxB,CAGA,IAAIoD,EAAKH,UAAT,GAEA,GAAKG,GAAOJ,EAAR,SAAJ,GAIA,IAAMe,EAAYT,EAAlB,MACIU,EAAYjB,EAXgB,QAahC,YAAIe,EAAuB,CAAC,IAAD,EACnBG,EAAI,UAAGhB,EAAH,4BAAGA,EAAkBnF,EAA/B,GACA,IACEsF,UAEG,YAAIU,EAAuB,CAAC,IAAD,EAC1BI,EAAI,UAAGjB,EAAH,4BAAGA,EAAkBnF,EAA/B,GACA,IACEsF,KAGJ,IAAMe,EAAYf,IAAlB,EACMgB,EAAN,EACMC,GAAiBN,EAAD,EAAyBX,EAA/C,MAEIiB,GAAJ,GACErB,mBAA2B,CACzBsB,EAAGN,IADsB,GAEzBO,EAFyB,EAGzBC,UAAU,IAEHJ,EAAJ,IACLpB,mBAA2B,CACzBsB,EAAGN,IADsB,GAEzBO,EAFyB,EAGzBC,UAAU,QAIhB,CAACxE,EAAK,EAAN,MA1GkB,IA0HpB,OATA9E,aAAgB,WACd2I,OACC,CAnHiB,KAsHpB3I,aAAgB,WACdiI,MACC,CAFHjI,IAKE,qBAAMtB,MAAOC,EAAO4K,UAClB,qBACE7K,MAAO,CACL,CAAEoF,kBAAiBsD,aADd,EAGLzI,EAHK,KAILuG,WAA0BvG,EAL9B,aAOEoG,SAAUwD,IAEV,qBACEiB,IADF,EAEEC,sBACE3E,YAAmBnG,EAAnBmG,gCAHJ,EAKE4E,oBAAsB/F,YACpBiE,aAEF+B,SAAWhG,YACTkE,UAAkBlE,4BAAlBkE,GAEF+B,oBAXF,GAYEC,YAZF,EAaEC,gCAbF,EAcEC,uBAdF,eAc0BjF,EACxBkF,cAAwB,eAATlF,GAEd,eAAAA,GAAA,EACC,qBAAMpG,MAAOC,EAAOsL,oBAlBxB,KAqBG,kBAA6B,qBAC5B,mBACEzK,MADF,EAEEkF,SAFF,EAGEG,IAHF,EAIET,OAAQxB,IAJV,EAKEoC,YALF,GAMErC,KANF,EAOE8B,YAPF,EAQElE,UARF,EASEgE,SATF,EAUEC,OAVF,EAWEG,cAAe0D,EAXjB,OAYEzC,UAZF,EAaEV,aAbF,EAcEjB,cAdF,EAeEa,KAAMA,OAGV,gBAAC7E,EAAA,EAAD,MACEuJ,IADF,EAEEjH,cAFF,OAGE7D,MAAO,CACLC,EADK,UAEL,CACEmF,gBAAiBW,GAHd,MASX,gBAACxE,EAAA,EAAD,MACEvB,MAAO,CACLC,EADK,gBAEL,CACEe,OADF,EAEEoE,kBACAoG,KAAM9C,QASpB,IAAMzI,EAASG,EAAA,SAAkB,CAC/ByK,SAAU,CAAEhF,SAAU,YACtB4F,gBAAiB,CACf5F,SADe,WAEfpB,KAFe,EAGfhE,MAHe,EAIfiL,OAAQ,GAEVH,kBAAmB,CACjBxH,MAAO,IAET4H,KAAM,CACJ3K,OAAQ,IAEV4K,YAAa,CACX5K,OAAQ,IAEV6K,2BAA4B,CAC1BvL,KAAM,GAERwL,UAAU,GACRjG,SADS,WAET7E,OAFS,EAGT+C,MAHS,EAITU,KAJS,EAKTsH,OALS,GAMN/D,EAAA,SAAgB,CACjBC,IAAK,CACH7C,gBADG,cAEH8C,mBAFG,QAGHC,mBAHG,MAIH6D,gBAJG,OAKHC,WAAY,aAEd7D,QAAS,QC5Mf,IAAMnI,EAASG,EAAA,SAAkB,CAC/B8L,KAAM,CACJ5L,KAAM,KAIV,EA5DA,SAAgB6L,GACd,IAAM,EAAN,EAAM,QAAN,EAAM,OAAN,EAAM,QAAN,EAAM,eAAN,EAAM,gBAAN,EAAM,eAAN,EAAM,gBAAN,EAAM,mBAAN,EAAM,UAUJ/F,EAVF,EAUEA,KAEF,EAA0B9E,WAAuB8K,GAAjD,cAAM,EAAN,KAAM,EAAN,KACMnI,EAAO,eACVoI,YACCC,KACAC,OAEF,CAACD,EALH,IAQI3C,EAA8CwC,EAAlD,SAEMK,EAAgB7C,EAAtB,GACA,IAAK6C,IAAL,EACE,OAAO,KAET,IAAMC,EAAc,CAClBvI,QACAD,OACA0F,WACA7I,QACA0H,OACAxI,QACA8F,YAPkB,EAQlBD,cARkB,EASlBW,eACAjB,gBACAmH,mBACAxF,YACAd,QAGF,OACE,qBAAMpG,MAAOC,EAAOiM,MAClB,kBADF,GAEE,gBAAClI,EAAD,UAAsB2I,MAAO,CAAE1I,OAAMC,UAHzC,KCzCI0I,EAmEN,WACE,IAAIC,EAAJ,GAKA,MAAO,CACLC,IALU,SAACC,EAAD,GACVF,QAKAG,IAHW9G,YAAD,OAAiB2G,EAA7B,KAxEYI,GAyDd,SAASC,EAAgB,EAAzB,GAIE,SACSN,aAAP,EAEKR,GAAP,EAeajL,mBA7Ef,SAAc,GA0BV,IA1BU,EA0BX,EA1BW,gBA0BX,EA1BW,WA0BX,EA1BW,aA0BX,EA1BW,QA0BX,EA1BW,OA0BX,EA1BW,QA0BX,EA1BW,aA0BX,IAlBDiF,YAkBC,MA1BW,QA0BX,MAjBDc,iBAiBC,aAhBDV,oBAgBC,MA1BW,UA0BX,MAfDjB,qBAeC,aAdDmH,wBAcC,SACKS,EAAqB,eACxBC,YACKC,GAAJ,QAAkBrF,QAChB4E,WAEFL,eAAa,IAAbA,UAEF,CAACc,EAPH,IAUA,OACE,mBACErN,MADF,EAEEwI,KAFF,EAGE1H,MAHF,EAIEsL,aAAcc,EAAgBd,EAJhC,GAKEG,cALF,EAMErF,UANF,EAOEV,aAPF,EAQEjB,cARF,EASEmH,iBATF,EAUEtG,KAAMA,GAXV,MCvCa,SAASkH,EAAU,GAA+B,IAA7B3D,EAA4B,EAA5BA,SAClC,OAAOrI,gBAAP,K,iCCGF,IAAYiM,EAMAC,EAcAC,EApBZ,2CAAYF,GACV,YACA,kBACA,kBAHF,CAAYA,MAAgB,KAM5B,SAAYC,GACV,iCACA,+BACA,qCACA,uCACA,mCACA,mCACA,qCACA,uCACA,uCACA,uCACA,wCAXF,CAAYA,MAAiB,KAc7B,SAAYC,GACV,mBACA,uBACA,iBACA,+BACA,uCACA,qCANF,CAAYA,MAAkC,M,0KC7B1CC,EAAmC,oBAAVC,QAAyBA,OAAOD,iBAAmBC,OAAOD,gBAAgBE,KAAKD,SAA8B,oBAAZE,UAA8D,mBAA5BA,SAASH,iBAAiCG,SAASH,gBAAgBE,KAAKC,UACpOC,EAAQ,IAAIC,WAAW,IAEZ,SAASC,IACtB,IAAKN,EACH,MAAM,IAAIO,MAAM,4GAGlB,OAAOP,EAAgBI,GCPzB,IAFA,IAAII,EAAY,GAEPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUC,IAAMA,EAAI,KAAOC,SAAS,IAAIC,OAAO,GAUlCC,MAPf,SAAqBC,EAAKzI,GACxB,IAAIqI,EAAIrI,GAAU,EACd0I,EAAMN,EAEV,MAAO,CAACM,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAO,IAAKK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAO,IAAKK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAO,IAAKK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAO,IAAKK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,MAAOK,EAAID,EAAIJ,OAAOM,KAAK,KCYpQC,I,EAAAA,EAvBf,SAAYC,EAASJ,EAAKzI,GACxB,IAAIqI,EAAII,GAAOzI,GAAU,EAEH,iBAAX6I,IACTJ,EAAkB,WAAZI,EAAuB,IAAIC,MAAM,IAAM,KAC7CD,EAAU,MAIZ,IAAIE,GADJF,EAAUA,GAAW,IACFG,SAAWH,EAAQX,KAAOA,KAK7C,GAHAa,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBN,EACF,IAAK,IAAIQ,EAAK,EAAGA,EAAK,KAAMA,EAC1BR,EAAIJ,EAAIY,GAAMF,EAAKE,GAIvB,OAAOR,GAAOD,EAAYO,I,0kBCX5B,IAAMG,GAAc,WACjB,IAAiBC,IAAM,yDADN,MAEjB,IAAiBC,OAAS,WAFT,MAGjB,IAAiBC,OAAS,iDAHT,GAML,GACb,WACE,MAAO,uBAGHC,wBALO,qGAMXC,kBANW,MAME,IAAiBH,OANnB,MAOXI,+BAPW,4BASEC,EAAqB,CAChCF,aACAC,6BAXS,qGAePE,kBAfO,qGAgBXH,kBAhBW,MAgBE,IAAiBH,OAhBnB,MAiBXI,+BAjBW,4BAmBEC,EAAqB,CAChCF,aACAC,0BACAG,SAAS,KAtBA,qGA6BPC,0BA7BO,sGA8BJC,KA9BI,6DAgCPC,8BAhCO,sGAiCJD,KAjCI,6DAwCPE,gCAxCO,SAwCyBC,GAxCzB,2FAyCJH,KAzCI,6DA2CPI,oCA3CO,SA2C6BD,GA3C7B,2FA4CJH,KA5CI,8DAgDf,SAASA,IACP,MAAO,CACLK,OAAQ,IAAiBC,QACzBC,QAAS,QACTC,SAAS,EACTC,aAAa,GAIjB,SAASb,EAAT,GAII,IAHFF,EAGE,EAHFA,WAGE,IAFFI,eAEE,aADFH,+BACE,SACIe,EAAkBrB,EAAeK,GAEjCiB,EAAQC,SAASC,cAAc,SAarC,OAZAF,EAAMtQ,MAAMyQ,QAAU,OACtBH,EAAMI,aAAa,OAAQ,QAC3BJ,EAAMI,aAAa,SAAUL,GAC7BC,EAAMI,aAAa,KAAM,KACrBpB,GACFgB,EAAMI,aAAa,WAAY,YAE7BjB,GACFa,EAAMI,aAAa,UAAW,UAEhCH,SAASI,KAAKC,YAAYN,GAEnB,IAAIO,SAAQ,SAACC,EAASC,GAC3BT,EAAMU,iBAAiB,UAAU,4BAAAC,EAAAC,OAAA,oDAC3BZ,EAAMa,MADqB,oBAExB7B,EAFwB,kCAAA2B,EAAA,MAGEG,EAASd,EAAMa,MAAM,KAHvB,OAGrBE,EAHqB,OAI3BP,EAAQ,EAAD,CACLQ,WAAW,GACRD,IANsB,0CAAAJ,EAAA,MASKJ,QAAQU,IAAI3C,MAAM4C,KAAKlB,EAAMa,OAAOM,IAAIL,KAT7C,QASrBM,EATqB,OAU3BZ,EAAQ,CACNQ,WAAW,EACXxK,SAAU4K,IAZe,gCAgB7BZ,EAAQ,CAAEQ,WAAW,IAhBQ,QAkB/Bf,SAASI,KAAKgB,YAAYrB,GAlBK,gEAqBjC,IAAMvG,EAAQ,IAAI6H,WAAW,SAC7BtB,EAAMuB,cAAc9H,MAIxB,SAASqH,EAASU,GAChB,OAAO,IAAIjB,SAAQ,SAACC,EAASC,GAC3B,IAAMgB,EAAS,IAAIC,WACnBD,EAAOE,QAAU,WACflB,EAAO,IAAI9C,MAAJ,qEAET8D,EAAOG,OAAS,YAAe,IAAZC,EAAY,EAAZA,OACXC,EAAOD,EAAeE,OACtBC,EAAY,kBAChBxB,EAAQ,CACNsB,MACArO,MAAO,EACP/C,OAAQ,KAGZ,GAA8B,kBAA1B,MAAOmR,OAAP,EAAOA,EAAQE,QAAqB,CACtC,IAAME,EAAQ,IAAIC,MAClBD,EAAME,IAAMN,EAAOE,OACnBE,EAAML,OAAS,0BACbpB,EAAQ,CACNsB,MACArO,MAAK,SAAEwO,EAAMG,cAAR,EAAwBH,EAAMxO,MACnC/C,OAAM,SAAEuR,EAAMI,eAAR,EAAyBJ,EAAMvR,UAEzCuR,EAAMN,QAAU,kBAAMK,UAEtBA,KAIJP,EAAOa,cAAcd,MChElB,SAAe,IAAf,6BAAAb,EAAAC,OAAA,uDACL2B,EADK,gCAKCC,EAC8D,oBAA3D,EAAoBC,mCACvB,EAAoBA,mCACpB,EAAoBhD,oCARrB,kBAUE+C,EAAkBD,IAVpB,4DA+BA,SAAe,EACpBlE,GADK,SAAAsC,EAAAC,OAAA,mDAGA,EAAoB9B,wBAHpB,sBAIG,IAAI4D,EAAA,EAAoB,cAAe,2BAJ1C,yBAAA/B,EAAA,MAMQ,EAAoB7B,wBAApB,MAA4CT,IAAW,KAN/D","file":"static/js/3.add5ef7f.chunk.js","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({ children, style, numeric, ...rest }: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text numberOfLines={1}>{children}</Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n","import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = ({ children, style, theme, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n      {children}\n    </View>\n  );\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            sortDirection ? styles.sorted : { color: textColor },\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n","import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTablePagination = ({\n  label,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  return (\n    <View {...rest} style={[styles.container, style]}>\n      <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n        {label}\n      </Text>\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n      />\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n","import * as React from 'react';\nimport color from 'color';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * `pointerEvents` passed to the `View` container, which is wrapping children within `TouchableRipple`.\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({\n  onPress,\n  style,\n  theme,\n  children,\n  pointerEvents,\n  ...rest\n}: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content} pointerEvents={pointerEvents}>\n        {children}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n","import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport DataTableCell from './DataTableCell';\nimport DataTableHeader, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableHeader as _DataTableHeader,\n} from './DataTableHeader';\nimport DataTableTitle, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableTitle as _DataTableTitle,\n} from './DataTableTitle';\nimport DataTablePagination, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTablePagination as _DataTablePagination,\n} from './DataTablePagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DataTableRow, { DataTableRow as _DataTableRow } from './DataTableRow';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTable`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Data tables allow displaying sets of data.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/data-table.png\" />\n *     <figcaption>Data table</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <DataTable>\n *     <DataTable.Header>\n *       <DataTable.Title>Dessert</DataTable.Title>\n *       <DataTable.Title numeric>Calories</DataTable.Title>\n *       <DataTable.Title numeric>Fat</DataTable.Title>\n *     </DataTable.Header>\n *\n *     <DataTable.Row>\n *       <DataTable.Cell>Frozen yogurt</DataTable.Cell>\n *       <DataTable.Cell numeric>159</DataTable.Cell>\n *       <DataTable.Cell numeric>6.0</DataTable.Cell>\n *     </DataTable.Row>\n *\n *     <DataTable.Row>\n *       <DataTable.Cell>Ice cream sandwich</DataTable.Cell>\n *       <DataTable.Cell numeric>237</DataTable.Cell>\n *       <DataTable.Cell numeric>8.0</DataTable.Cell>\n *     </DataTable.Row>\n *\n *     <DataTable.Pagination\n *       page={1}\n *       numberOfPages={3}\n *       onPageChange={page => {\n *         console.log(page);\n *       }}\n *       label=\"1-2 of 6\"\n *     />\n *   </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DataTable = ({ children, style, ...rest }: Props) => (\n  <View {...rest} style={[styles.container, style]}>\n    {children}\n  </View>\n);\n\n// @component ./DataTableHeader.tsx\nDataTable.Header = DataTableHeader;\n\n// @component ./DataTableTitle.tsx\nDataTable.Title = DataTableTitle;\n\n// @component ./DataTableRow.tsx\nDataTable.Row = DataTableRow;\n\n// @component ./DataTableCell.tsx\nDataTable.Cell = DataTableCell;\n\n// @component ./DataTablePagination.tsx\nDataTable.Pagination = DataTablePagination;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n});\n\nexport default DataTable;\n","import * as React from 'react';\nimport { useContext } from 'react';\n\nexport const TabsContext = React.createContext<{\n  goTo: (index: number) => void;\n  index: number;\n}>({\n  goTo: () => null,\n  index: 0,\n});\n\nexport function useTabNavigation() {\n  return useContext(TabsContext).goTo;\n}\nexport function useTabIndex() {\n  return useContext(TabsContext).index;\n}\n","import * as React from 'react';\nimport type { TextStyle, View, ViewStyle } from 'react-native';\nimport type {\n  AnimatedColorArgs,\n  IndicatorArgs,\n  IndicatorReturns,\n  OffsetScrollArgs,\n} from './utils';\n\nfunction getIndicatorStyle({\n  left,\n  width,\n}: {\n  left: number;\n  width: number;\n}): ViewStyle {\n  return {\n    transform: [\n      { scaleX: width },\n      { translateX: roundToTwo(left / width) || 0 },\n    ],\n  };\n}\n\nfunction roundToTwo(num: number) {\n  return Math.round(num * 100 + Number.EPSILON) / 100;\n}\n\nexport function useIndicator({\n  index,\n  layouts,\n}: IndicatorArgs): IndicatorReturns {\n  const indicatorRef = React.useRef<View>(null);\n  const updateIndicator = React.useCallback(() => {\n    if (!indicatorRef.current || !layouts.current) {\n      return;\n    }\n    const cl = layouts.current[index];\n    if (cl) {\n      indicatorRef.current.setNativeProps({\n        style: getIndicatorStyle({ left: cl.x, width: cl.width }),\n      });\n    }\n  }, [index, indicatorRef, layouts]);\n\n  return [indicatorRef, updateIndicator, null];\n}\n\nexport function useOffsetScroller(_: OffsetScrollArgs) {}\nexport function useAnimatedText({\n  activeColor,\n  active,\n  textColor,\n}: AnimatedColorArgs): TextStyle {\n  return React.useMemo(\n    () => ({\n      color: active ? activeColor : textColor,\n      opacity: active ? 1 : 0.6,\n    }),\n    [active, activeColor, textColor]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Animated } from 'react-native';\n\nlet MaterialCommunityIcons: any;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = Animated.createAnimatedComponent(\n    require('react-native-vector-icons/MaterialCommunityIcons').default\n  );\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  // @ts-ignore\n  MaterialCommunityIcons = ({ name, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Animated.Text {...rest} selectable={false}>\n        □\n      </Animated.Text>\n    );\n  };\n}\n\nconst defaultIcon = ({ name, color, size, style, ...rest }: any) => (\n  <MaterialCommunityIcons\n    selectable={false}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        lineHeight: size,\n      },\n      styles.icon,\n      style,\n    ]}\n    {...rest}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n","import * as React from 'react';\nimport {\n  LayoutChangeEvent,\n  Animated,\n  StyleSheet,\n  View,\n  Platform,\n  TextProps,\n} from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport type { ReactElement } from 'react';\nimport type { TabScreenProps } from './TabScreen';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\nimport Color from 'color';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport { useAnimatedText } from './internal';\nimport type { IconPosition, Mode } from './utils';\nconst AnimatedText = Animated.createAnimatedComponent<\n  React.ComponentType<TextProps>\n>(Text as any);\n\nexport default function TabsHeaderItem({\n  tab,\n  tabIndex,\n  active,\n  goTo,\n  onTabLayout,\n  activeColor,\n  textColor,\n  theme,\n  position,\n  offset,\n  childrenCount,\n  uppercase,\n  mode,\n  iconPosition,\n  showTextLabel,\n}: {\n  tab: ReactElement<TabScreenProps>;\n  tabIndex: number;\n  active: boolean;\n  goTo: (index: number) => void;\n  onTabLayout: (index: number, e: LayoutChangeEvent) => void;\n  activeColor: string;\n  textColor: string;\n  theme: Theme;\n  position: Animated.Value | undefined;\n  offset: Animated.Value | undefined;\n  childrenCount: number;\n  uppercase?: boolean;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  mode: Mode;\n}) {\n  const rippleColor = React.useMemo(\n    () =>\n      Color(activeColor as any)\n        .alpha(0.32)\n        .rgb()\n        .string(),\n    [activeColor]\n  );\n\n  const { color, opacity } = useAnimatedText({\n    active,\n    position,\n    offset,\n    activeColor,\n    textColor,\n    tabIndex,\n    childrenCount,\n  });\n\n  return (\n    <View\n      key={tab.props.label}\n      style={[styles.tabRoot, mode === 'fixed' && styles.tabRootFixed]}\n      onLayout={(e) => onTabLayout(tabIndex, e)}\n    >\n      <TouchableRipple\n        onPress={() => goTo(tabIndex)}\n        onPressIn={() => {}}\n        style={[\n          styles.touchableRipple,\n          iconPosition === 'top' && styles.touchableRippleTop,\n        ]}\n        rippleColor={rippleColor}\n        // @ts-ignore\n        accessibilityTraits={'button'}\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={tab.props.label}\n        accessibilityState={{ selected: active }}\n        testID={`tab_${tabIndex}`}\n      >\n        <View\n          style={[\n            styles.touchableRippleInner,\n            iconPosition === 'top' && styles.touchableRippleInnerTop,\n          ]}\n        >\n          {tab.props.icon ? (\n            <View\n              style={[\n                styles.iconContainer,\n                iconPosition !== 'top' && styles.marginRight,\n              ]}\n            >\n              <MaterialCommunityIcon\n                selectable={false}\n                accessibilityElementsHidden={true}\n                importantForAccessibility=\"no\"\n                name={tab.props.icon || ''}\n                style={{ color: color, opacity }}\n                size={24}\n              />\n            </View>\n          ) : null}\n          {showTextLabel ? (\n            <AnimatedText\n              selectable={false}\n              style={[\n                styles.text,\n                iconPosition === 'top' && styles.textTop,\n                { ...theme.fonts.medium, color, opacity },\n              ]}\n            >\n              {uppercase ? tab.props.label.toUpperCase() : tab.props.label}\n            </AnimatedText>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabRoot: { position: 'relative' },\n  tabRootFixed: { flex: 1 },\n  touchableRipple: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchableRippleTop: {\n    height: 72,\n  },\n  touchableRippleInner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingRight: 16,\n    paddingLeft: 16,\n    minWidth: 90,\n    maxWidth: 360,\n  },\n  touchableRippleInnerTop: {\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 24,\n    height: 24,\n  },\n  text: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    ...Platform.select({\n      web: {\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n      },\n      default: {},\n    }),\n  },\n  textTop: { marginTop: 6 },\n  marginRight: { marginRight: 8 },\n});\n","import type { SwiperRenderProps } from './utils';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\nimport { overlay, Surface } from 'react-native-paper';\nimport color from 'color';\nimport * as React from 'react';\nimport { useIndicator, useOffsetScroller } from './internal';\nimport TabsHeaderItem from './TabsHeaderItem';\n\nexport default function TabsHeader({\n  index,\n  goTo,\n  children,\n  position,\n  offset,\n  theme,\n  dark,\n  style,\n  iconPosition,\n  showTextLabel,\n  showLeadingSpace,\n  uppercase,\n  mode,\n}: SwiperRenderProps) {\n  const { colors, dark: isDarkTheme, mode: themeMode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && themeMode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n\n  let hasPrimaryBackground = colors.primary === backgroundColor;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : // @ts-ignore\n          !color(backgroundColor).isLight();\n  }\n  const textColor = isDark ? '#fff' : '#000';\n  const activeColor = hasPrimaryBackground ? textColor : theme.colors.primary;\n\n  const innerScrollSize = React.useRef<number | null>(null);\n  const scrollX = React.useRef<number>(0);\n  const scrollRef = React.useRef<ScrollView>(null);\n  const layouts = React.useRef<Record<string, LayoutRectangle> | null>(null);\n  const [tabsLayout, setTabsLayout] = React.useState<LayoutRectangle | null>(\n    null\n  );\n  const [indicatorRef, updateIndicator, indicatorStyle] = useIndicator({\n    tabsLayout,\n    layouts,\n    index,\n    offset,\n    position,\n    childrenCount: children.length,\n  });\n\n  const onTabsLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      setTabsLayout(e.nativeEvent.layout);\n    },\n    [setTabsLayout]\n  );\n\n  const onTabLayout = React.useCallback(\n    (tabIndex: number, event: LayoutChangeEvent) => {\n      layouts.current = {\n        ...layouts.current,\n        [tabIndex]: event.nativeEvent.layout,\n      };\n      updateIndicator();\n    },\n    [layouts, updateIndicator]\n  );\n\n  const updateScroll = React.useCallback(\n    (scrollType?: 'next' | 'prev') => {\n      if (!layouts.current || mode !== 'scrollable') {\n        return;\n      }\n      let cl = layouts.current[index];\n\n      if (!cl || !scrollRef.current || !tabsLayout) {\n        return;\n      }\n\n      const tabsWidth = tabsLayout.width;\n      let scrolledX = scrollX.current;\n      // console.log({ scrolledX, scrollType });\n      if (scrollType === 'next') {\n        const next = layouts.current?.[index + 1];\n        if (next) {\n          cl = next;\n        }\n      } else if (scrollType === 'prev') {\n        const prev = layouts.current?.[index - 1];\n        if (prev) {\n          cl = prev;\n        }\n      }\n      const relativeX = cl.x - scrolledX;\n      const overflowLeft = relativeX;\n      const overflowRight = -tabsWidth + relativeX + cl.width;\n\n      if (overflowRight > -50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowRight + 50,\n          y: 0,\n          animated: true,\n        });\n      } else if (overflowLeft < 50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowLeft - 50,\n          y: 0,\n          animated: true,\n        });\n      }\n    },\n    [mode, layouts, index, scrollRef, scrollX, tabsLayout]\n  );\n\n  // subscribes to offset on native devices to scroll tab bar faster when scrolling (iOS only since Android bugs)\n  useOffsetScroller({ updateScroll, index, offset, mode });\n\n  // updates scroll when index changes (updateScroll function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateScroll();\n  }, [updateScroll]);\n\n  // update indicator when index changes (updateIndicator function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateIndicator();\n  }, [updateIndicator]);\n\n  return (\n    <View style={styles.relative}>\n      <Surface\n        style={[\n          { backgroundColor, elevation },\n          restStyle,\n          styles.tabs,\n          iconPosition === 'top' && styles.tabsTopIcon,\n        ]}\n        onLayout={onTabsLayout}\n      >\n        <ScrollView\n          ref={scrollRef}\n          contentContainerStyle={\n            mode === 'fixed' ? styles.fixedContentContainerStyle : undefined\n          }\n          onContentSizeChange={(e) => {\n            innerScrollSize.current = e;\n          }}\n          onScroll={(e) => {\n            scrollX.current = e.nativeEvent.contentOffset.x;\n          }}\n          scrollEventThrottle={25}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n          alwaysBounceHorizontal={mode === 'scrollable'}\n          scrollEnabled={mode === 'scrollable'}\n        >\n          {mode === 'scrollable' && showLeadingSpace ? (\n            <View style={styles.scrollablePadding} />\n          ) : null}\n\n          {React.Children.map(children, (tab, tabIndex) => (\n            <TabsHeaderItem\n              theme={theme}\n              tabIndex={tabIndex}\n              tab={tab}\n              active={index === tabIndex}\n              onTabLayout={onTabLayout}\n              goTo={goTo}\n              activeColor={activeColor}\n              textColor={textColor}\n              position={position}\n              offset={offset}\n              childrenCount={children.length}\n              uppercase={uppercase}\n              iconPosition={iconPosition}\n              showTextLabel={showTextLabel}\n              mode={mode}\n            />\n          ))}\n          <Animated.View\n            ref={indicatorRef}\n            pointerEvents=\"none\"\n            style={[\n              styles.indicator,\n              {\n                backgroundColor: activeColor,\n              },\n              indicatorStyle,\n            ]}\n          />\n        </ScrollView>\n        <Animated.View\n          style={[\n            styles.removeTopShadow,\n            {\n              height: elevation,\n              backgroundColor,\n              top: -elevation,\n            },\n          ]}\n        />\n      </Surface>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  relative: { position: 'relative' },\n  removeTopShadow: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    zIndex: 2,\n  },\n  scrollablePadding: {\n    width: 52,\n  },\n  tabs: {\n    height: 48,\n  },\n  tabsTopIcon: {\n    height: 72,\n  },\n  fixedContentContainerStyle: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n    height: 2,\n    width: 1,\n    left: 0,\n    bottom: 0,\n    ...Platform.select({\n      web: {\n        backgroundColor: 'transparent',\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n        transformOrigin: 'left',\n        willChange: 'transform',\n      },\n      default: {},\n    }),\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport type { SwiperProps } from './utils';\nimport type { TabScreenProps } from './TabScreen';\nimport { TabsContext } from './context';\nimport TabsHeader from './TabsHeader';\n\nfunction Swiper(props: SwiperProps) {\n  const {\n    theme,\n    dark,\n    style,\n    defaultIndex,\n    onChangeIndex,\n    iconPosition,\n    showTextLabel,\n    showLeadingSpace,\n    uppercase,\n    mode,\n  } = props;\n  const [index, setIndex] = React.useState<number>(defaultIndex || 0);\n  const goTo = React.useCallback(\n    (ind: number) => {\n      setIndex(ind);\n      onChangeIndex(ind);\n    },\n    [setIndex, onChangeIndex]\n  );\n\n  let children: React.Component<TabScreenProps>[] = props.children;\n\n  const currentScreen = children[index];\n  if (!currentScreen || !currentScreen) {\n    return null;\n  }\n  const renderProps = {\n    index,\n    goTo,\n    children,\n    theme,\n    dark,\n    style,\n    offset: undefined,\n    position: undefined,\n    iconPosition,\n    showTextLabel,\n    showLeadingSpace,\n    uppercase,\n    mode,\n  };\n\n  return (\n    <View style={styles.root}>\n      <TabsHeader {...renderProps} />\n      <TabsContext.Provider value={{ goTo, index }}>\n        {currentScreen}\n      </TabsContext.Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n  },\n});\n\nexport default Swiper;\n","import * as React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport { withTheme } from 'react-native-paper';\nimport Swiper from './Swiper';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport type { IconPosition, Mode } from './utils';\nimport { Platform } from 'react-native';\n\n// used to persist position on web\nconst cache = createCache();\n\nfunction Tabs({\n  onChangeIndex,\n  children,\n  persistKey,\n  theme,\n  dark,\n  style,\n  defaultIndex,\n  mode = 'fixed',\n  uppercase = true,\n  iconPosition = 'leading',\n  showTextLabel = true,\n  showLeadingSpace = true,\n}: {\n  children: any;\n  persistKey?: string;\n  theme: Theme;\n  dark?: boolean;\n  style?: ViewStyle;\n  defaultIndex?: number;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  showLeadingSpace?: boolean;\n  uppercase?: boolean;\n  mode?: Mode;\n  onChangeIndex?: (index: number) => void;\n}) {\n  const onInnerChangeIndex = React.useCallback(\n    (newIndex) => {\n      if (persistKey && Platform.OS === 'web') {\n        cache.set(persistKey, newIndex);\n      }\n      onChangeIndex?.(newIndex);\n    },\n    [persistKey, onChangeIndex]\n  );\n\n  return (\n    <Swiper\n      style={style}\n      dark={dark}\n      theme={theme}\n      defaultIndex={getDefaultIndex(defaultIndex, persistKey)}\n      onChangeIndex={onInnerChangeIndex}\n      uppercase={uppercase}\n      iconPosition={iconPosition}\n      showTextLabel={showTextLabel}\n      showLeadingSpace={showLeadingSpace}\n      mode={mode}\n    >\n      {children}\n    </Swiper>\n  );\n}\n\nfunction getDefaultIndex(\n  defaultIndex: number | undefined,\n  persistKey: string | undefined\n) {\n  if (persistKey) {\n    return cache.get(persistKey) || defaultIndex || 0;\n  }\n  return defaultIndex || 0;\n}\n// used to persist position on web\nfunction createCache() {\n  let c: { [k: string]: number } = {};\n  const set = (k: string, i: number) => {\n    c[k] = i;\n  };\n  const get = (key: string) => c[key];\n  return {\n    set,\n    get,\n  };\n}\n\nexport default withTheme(Tabs);\n","import * as React from 'react';\nimport type { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\n\nexport interface TabScreenProps {\n  label: string;\n  icon?: IconSource;\n  children: any;\n  preload?: () => any;\n}\n\nexport default function TabScreen({ children }: TabScreenProps) {\n  return React.Children.only(children);\n}\n","import { PermissionResponse } from 'unimodules-permissions-interface';\n\nexport { PermissionResponse as CameraPermissionResponse };\n\nexport type MediaLibraryPermissionResponse = PermissionResponse & {\n  // iOS only\n  accessPrivileges?: 'all' | 'limited' | 'none';\n};\n\n/**\n * @deprecated Use `ImagePicker.MediaLibraryPermissionResponse`\n */\nexport type CameraRollPermissionResponse = MediaLibraryPermissionResponse;\n\nexport enum MediaTypeOptions {\n  All = 'All',\n  Videos = 'Videos',\n  Images = 'Images',\n}\n\nexport enum VideoExportPreset {\n  Passthrough = 0,\n  LowQuality = 1,\n  MediumQuality = 2,\n  HighestQuality = 3,\n  H264_640x480 = 4,\n  H264_960x540 = 5,\n  H264_1280x720 = 6,\n  H264_1920x1080 = 7,\n  H264_3840x2160 = 8,\n  HEVC_1920x1080 = 9,\n  HEVC_3840x2160 = 10,\n}\n\nexport enum UIImagePickerControllerQualityType {\n  High = 0,\n  Medium = 1,\n  Low = 2,\n  VGA640x480 = 3,\n  IFrame1280x720 = 4,\n  IFrame960x540 = 5,\n}\n\nexport type ImageInfo = {\n  uri: string;\n  width: number;\n  height: number;\n  type?: 'image' | 'video';\n  exif?: { [key: string]: any };\n  base64?: string;\n};\n\nexport type ImagePickerErrorResult = {\n  code: string;\n  message: string;\n  exception?: string;\n};\n\nexport type ImagePickerResult = { cancelled: true } | ({ cancelled: false } & ImageInfo);\n\nexport type ImagePickerMultipleResult =\n  | { cancelled: true }\n  | { cancelled: false; selected: ImageInfo[] };\n\nexport type ImagePickerOptions = {\n  allowsEditing?: boolean;\n  aspect?: [number, number];\n  quality?: number;\n  mediaTypes?: MediaTypeOptions;\n  exif?: boolean;\n  base64?: boolean;\n  /**\n   * @deprecated see [iOS videoExportPreset](https://developer.apple.com/documentation/uikit/uiimagepickercontroller/2890964-videoexportpreset?language=objc)\n   */\n  videoExportPreset?: VideoExportPreset;\n  videoQuality?: UIImagePickerControllerQualityType;\n  allowsMultipleSelection?: boolean;\n  videoMaxDuration?: number;\n};\n\nexport type OpenFileBrowserOptions = {\n  mediaTypes: MediaTypeOptions;\n  capture?: boolean;\n  allowsMultipleSelection: boolean;\n};\n\nexport type ExpandImagePickerResult<\n  T extends ImagePickerOptions | OpenFileBrowserOptions\n> = T extends {\n  allowsMultipleSelection: true;\n}\n  ? ImagePickerMultipleResult\n  : ImagePickerResult;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","import { PermissionResponse, PermissionStatus } from 'unimodules-permissions-interface';\nimport { v4 } from 'uuid';\n\nimport {\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n  ImagePickerMultipleResult,\n  ImageInfo,\n  ExpandImagePickerResult,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync<T extends OpenFileBrowserOptions>({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n}: T): Promise<ExpandImagePickerResult<T>> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve, reject) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        if (!allowsMultipleSelection) {\n          const img: ImageInfo = await readFile(input.files[0]);\n          resolve({\n            cancelled: false,\n            ...img,\n          } as ExpandImagePickerResult<T>);\n        } else {\n          const imgs: ImageInfo[] = await Promise.all(Array.from(input.files).map(readFile));\n          resolve({\n            cancelled: false,\n            selected: imgs,\n          } as ExpandImagePickerResult<T>);\n        }\n      } else {\n        resolve({ cancelled: true } as ExpandImagePickerResult<T>);\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob): Promise<ImageInfo> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () =>\n        resolve({\n          uri,\n          width: 0,\n          height: 0,\n        });\n\n      if (typeof target?.result === 'string') {\n        const image = new Image();\n        image.src = target.result;\n        image.onload = () =>\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n          });\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n","import { UnavailabilityError, CodedError } from '@unimodules/core';\nimport { PermissionStatus, PermissionExpiration } from 'unimodules-permissions-interface';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  MediaTypeOptions,\n  ImagePickerOptions,\n  VideoExportPreset,\n  ExpandImagePickerResult,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n/**\n * @deprecated in favor of getMediaLibraryPermissionsAsync()\n */\nexport async function getCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()'\n  );\n  return getMediaLibraryPermissionsAsync();\n}\n\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  // due to a typo in iOS, we need to check on the typo too\n  // todo: remove this workaround for SDK 41\n  const imagePickerMethod =\n    typeof ExponentImagePicker.getMediaLibaryPermissionsAsync === 'function'\n      ? ExponentImagePicker.getMediaLibaryPermissionsAsync\n      : ExponentImagePicker.getMediaLibraryPermissionsAsync;\n\n  return imagePickerMethod(writeOnly);\n}\n\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n/**\n * @deprecated in favor of requestMediaLibraryPermissionsAsync()\n */\nexport async function requestCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()'\n  );\n  return requestMediaLibraryPermissionsAsync();\n}\n\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  // due to a typo in iOS, we need to check on the typo too\n  // todo: remove this workaround for SDK 41\n  const imagePickerMethod =\n    typeof ExponentImagePicker.requestMediaLibaryPermissionsAsync === 'function'\n      ? ExponentImagePicker.requestMediaLibaryPermissionsAsync\n      : ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n\n  return imagePickerMethod(writeOnly);\n}\n\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\n\nexport async function launchImageLibraryAsync<T extends ImagePickerOptions>(\n  options?: T\n): Promise<ExpandImagePickerResult<T>> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\n\nexport {\n  MediaTypeOptions,\n  ImagePickerOptions,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  VideoExportPreset,\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n};\n"],"sourceRoot":""}