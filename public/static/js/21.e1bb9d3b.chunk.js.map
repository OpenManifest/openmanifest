{"version":3,"sources":["context.ts","internal.ts","MaterialCommunityIcon.tsx","TabsHeaderItem.tsx","TabsHeader.tsx","Swiper.tsx","Tabs.tsx","TabScreen.tsx","screens/authenticated/settings/DropzonePermissionScreen.tsx"],"names":["TabsContext","goTo","index","useTabNavigation","useContext","getIndicatorStyle","num","width","transform","scaleX","translateX","left","roundToTwo","Math","Number","MaterialCommunityIcons","Animated","require","isErrorLogged","rest","test","e","console","selectable","styles","StyleSheet","icon","backgroundColor","name","color","size","style","lineHeight","AnimatedText","TabsHeaderItem","showTextLabel","rippleColor","React","Color","textColor","active","opacity","useAnimatedText","position","offset","activeColor","tabIndex","childrenCount","key","tab","mode","onLayout","onTabLayout","onPress","onPressIn","iconPosition","accessibilityTraits","accessibilityRole","accessibilityComponentType","accessibilityLabel","accessibilityState","selected","testID","accessibilityElementsHidden","importantForAccessibility","theme","uppercase","tabRoot","tabRootFixed","flex","touchableRipple","height","justifyContent","alignItems","touchableRippleTop","touchableRippleInner","flexDirection","paddingRight","paddingLeft","minWidth","maxWidth","touchableRippleInnerTop","iconContainer","text","textAlign","letterSpacing","Platform","web","transitionDuration","transitionProperty","default","textTop","marginTop","marginRight","TabsHeader","dark","themeMode","elevation","restStyle","customBackground","isDarkTheme","overlay","colors","hasPrimaryBackground","isDark","innerScrollSize","scrollX","scrollRef","layouts","indicatorRef","updateIndicator","cl","useIndicator","tabsLayout","children","length","onTabsLayout","setTabsLayout","event","layout","updateScroll","scrollType","tabsWidth","scrolledX","next","prev","relativeX","overflowLeft","overflowRight","x","y","animated","relative","ref","contentContainerStyle","onContentSizeChange","onScroll","scrollEventThrottle","horizontal","showsHorizontalScrollIndicator","alwaysBounceHorizontal","scrollEnabled","scrollablePadding","pointerEvents","top","removeTopShadow","right","zIndex","tabs","tabsTopIcon","fixedContentContainerStyle","indicator","bottom","transformOrigin","willChange","root","props","defaultIndex","ind","setIndex","onChangeIndex","currentScreen","renderProps","showLeadingSpace","value","cache","c","set","k","get","createCache","getDefaultIndex","withTheme","onInnerChangeIndex","newIndex","persistKey","TabScreen","QUERY_DROPZONE_PERMISSIONS","gql","DropzonePermissionScreen","state","useAppSelector","global","useQuery","variables","dropzoneId","currentDropzoneId","data","loading","refetch","isFocused","useIsFocused","indeterminate","accent","dropzone","roles","map","role","label","id","Subheader","permissionName","description","title","Section","Accordion","create","container","display","content","flexGrow","fab","margin","empty"],"mappings":"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","file":"static/js/21.e1bb9d3b.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\n\nexport const TabsContext = React.createContext<{\n  goTo: (index: number) => void;\n  index: number;\n}>({\n  goTo: () => null,\n  index: 0,\n});\n\nexport function useTabNavigation() {\n  return useContext(TabsContext).goTo;\n}\nexport function useTabIndex() {\n  return useContext(TabsContext).index;\n}\n","import * as React from 'react';\nimport type { TextStyle, View, ViewStyle } from 'react-native';\nimport type {\n  AnimatedColorArgs,\n  IndicatorArgs,\n  IndicatorReturns,\n  OffsetScrollArgs,\n} from './utils';\n\nfunction getIndicatorStyle({\n  left,\n  width,\n}: {\n  left: number;\n  width: number;\n}): ViewStyle {\n  return {\n    transform: [\n      { scaleX: width },\n      { translateX: roundToTwo(left / width) || 0 },\n    ],\n  };\n}\n\nfunction roundToTwo(num: number) {\n  return Math.round(num * 100 + Number.EPSILON) / 100;\n}\n\nexport function useIndicator({\n  index,\n  layouts,\n}: IndicatorArgs): IndicatorReturns {\n  const indicatorRef = React.useRef<View>(null);\n  const updateIndicator = React.useCallback(() => {\n    if (!indicatorRef.current || !layouts.current) {\n      return;\n    }\n    const cl = layouts.current[index];\n    if (cl) {\n      indicatorRef.current.setNativeProps({\n        style: getIndicatorStyle({ left: cl.x, width: cl.width }),\n      });\n    }\n  }, [index, indicatorRef, layouts]);\n\n  return [indicatorRef, updateIndicator, null];\n}\n\nexport function useOffsetScroller(_: OffsetScrollArgs) {}\nexport function useAnimatedText({\n  activeColor,\n  active,\n  textColor,\n}: AnimatedColorArgs): TextStyle {\n  return React.useMemo(\n    () => ({\n      color: active ? activeColor : textColor,\n      opacity: active ? 1 : 0.6,\n    }),\n    [active, activeColor, textColor]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Animated } from 'react-native';\n\nlet MaterialCommunityIcons: any;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = Animated.createAnimatedComponent(\n    require('react-native-vector-icons/MaterialCommunityIcons').default\n  );\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  // @ts-ignore\n  MaterialCommunityIcons = ({ name, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Animated.Text {...rest} selectable={false}>\n        □\n      </Animated.Text>\n    );\n  };\n}\n\nconst defaultIcon = ({ name, color, size, style, ...rest }: any) => (\n  <MaterialCommunityIcons\n    selectable={false}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        lineHeight: size,\n      },\n      styles.icon,\n      style,\n    ]}\n    {...rest}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n","import * as React from 'react';\nimport {\n  LayoutChangeEvent,\n  Animated,\n  StyleSheet,\n  View,\n  Platform,\n  TextProps,\n} from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport type { ReactElement } from 'react';\nimport type { TabScreenProps } from './TabScreen';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\nimport Color from 'color';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport { useAnimatedText } from './internal';\nimport type { IconPosition, Mode } from './utils';\nconst AnimatedText = Animated.createAnimatedComponent<\n  React.ComponentType<TextProps>\n>(Text as any);\n\nexport default function TabsHeaderItem({\n  tab,\n  tabIndex,\n  active,\n  goTo,\n  onTabLayout,\n  activeColor,\n  textColor,\n  theme,\n  position,\n  offset,\n  childrenCount,\n  uppercase,\n  mode,\n  iconPosition,\n  showTextLabel,\n}: {\n  tab: ReactElement<TabScreenProps>;\n  tabIndex: number;\n  active: boolean;\n  goTo: (index: number) => void;\n  onTabLayout: (index: number, e: LayoutChangeEvent) => void;\n  activeColor: string;\n  textColor: string;\n  theme: Theme;\n  position: Animated.Value | undefined;\n  offset: Animated.Value | undefined;\n  childrenCount: number;\n  uppercase?: boolean;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  mode: Mode;\n}) {\n  const rippleColor = React.useMemo(\n    () =>\n      Color(activeColor as any)\n        .alpha(0.32)\n        .rgb()\n        .string(),\n    [activeColor]\n  );\n\n  const { color, opacity } = useAnimatedText({\n    active,\n    position,\n    offset,\n    activeColor,\n    textColor,\n    tabIndex,\n    childrenCount,\n  });\n\n  return (\n    <View\n      key={tab.props.label}\n      style={[styles.tabRoot, mode === 'fixed' && styles.tabRootFixed]}\n      onLayout={(e) => onTabLayout(tabIndex, e)}\n    >\n      <TouchableRipple\n        onPress={() => goTo(tabIndex)}\n        onPressIn={() => {}}\n        style={[\n          styles.touchableRipple,\n          iconPosition === 'top' && styles.touchableRippleTop,\n        ]}\n        rippleColor={rippleColor}\n        // @ts-ignore\n        accessibilityTraits={'button'}\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={tab.props.label}\n        accessibilityState={{ selected: active }}\n        testID={`tab_${tabIndex}`}\n      >\n        <View\n          style={[\n            styles.touchableRippleInner,\n            iconPosition === 'top' && styles.touchableRippleInnerTop,\n          ]}\n        >\n          {tab.props.icon ? (\n            <View\n              style={[\n                styles.iconContainer,\n                iconPosition !== 'top' && styles.marginRight,\n              ]}\n            >\n              <MaterialCommunityIcon\n                selectable={false}\n                accessibilityElementsHidden={true}\n                importantForAccessibility=\"no\"\n                name={tab.props.icon || ''}\n                style={{ color: color, opacity }}\n                size={24}\n              />\n            </View>\n          ) : null}\n          {showTextLabel ? (\n            <AnimatedText\n              selectable={false}\n              style={[\n                styles.text,\n                iconPosition === 'top' && styles.textTop,\n                { ...theme.fonts.medium, color, opacity },\n              ]}\n            >\n              {uppercase ? tab.props.label.toUpperCase() : tab.props.label}\n            </AnimatedText>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabRoot: { position: 'relative' },\n  tabRootFixed: { flex: 1 },\n  touchableRipple: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchableRippleTop: {\n    height: 72,\n  },\n  touchableRippleInner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingRight: 16,\n    paddingLeft: 16,\n    minWidth: 90,\n    maxWidth: 360,\n  },\n  touchableRippleInnerTop: {\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 24,\n    height: 24,\n  },\n  text: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    ...Platform.select({\n      web: {\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n      },\n      default: {},\n    }),\n  },\n  textTop: { marginTop: 6 },\n  marginRight: { marginRight: 8 },\n});\n","import type { SwiperRenderProps } from './utils';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\nimport { overlay, Surface } from 'react-native-paper';\nimport color from 'color';\nimport * as React from 'react';\nimport { useIndicator, useOffsetScroller } from './internal';\nimport TabsHeaderItem from './TabsHeaderItem';\n\nexport default function TabsHeader({\n  index,\n  goTo,\n  children,\n  position,\n  offset,\n  theme,\n  dark,\n  style,\n  iconPosition,\n  showTextLabel,\n  showLeadingSpace,\n  uppercase,\n  mode,\n}: SwiperRenderProps) {\n  const { colors, dark: isDarkTheme, mode: themeMode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && themeMode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n\n  let hasPrimaryBackground = colors.primary === backgroundColor;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : // @ts-ignore\n          !color(backgroundColor).isLight();\n  }\n  const textColor = isDark ? '#fff' : '#000';\n  const activeColor = hasPrimaryBackground ? textColor : theme.colors.primary;\n\n  const innerScrollSize = React.useRef<number | null>(null);\n  const scrollX = React.useRef<number>(0);\n  const scrollRef = React.useRef<ScrollView>(null);\n  const layouts = React.useRef<Record<string, LayoutRectangle> | null>(null);\n  const [tabsLayout, setTabsLayout] = React.useState<LayoutRectangle | null>(\n    null\n  );\n  const [indicatorRef, updateIndicator, indicatorStyle] = useIndicator({\n    tabsLayout,\n    layouts,\n    index,\n    offset,\n    position,\n    childrenCount: children.length,\n  });\n\n  const onTabsLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      setTabsLayout(e.nativeEvent.layout);\n    },\n    [setTabsLayout]\n  );\n\n  const onTabLayout = React.useCallback(\n    (tabIndex: number, event: LayoutChangeEvent) => {\n      layouts.current = {\n        ...layouts.current,\n        [tabIndex]: event.nativeEvent.layout,\n      };\n      updateIndicator();\n    },\n    [layouts, updateIndicator]\n  );\n\n  const updateScroll = React.useCallback(\n    (scrollType?: 'next' | 'prev') => {\n      if (!layouts.current || mode !== 'scrollable') {\n        return;\n      }\n      let cl = layouts.current[index];\n\n      if (!cl || !scrollRef.current || !tabsLayout) {\n        return;\n      }\n\n      const tabsWidth = tabsLayout.width;\n      let scrolledX = scrollX.current;\n      // console.log({ scrolledX, scrollType });\n      if (scrollType === 'next') {\n        const next = layouts.current?.[index + 1];\n        if (next) {\n          cl = next;\n        }\n      } else if (scrollType === 'prev') {\n        const prev = layouts.current?.[index - 1];\n        if (prev) {\n          cl = prev;\n        }\n      }\n      const relativeX = cl.x - scrolledX;\n      const overflowLeft = relativeX;\n      const overflowRight = -tabsWidth + relativeX + cl.width;\n\n      if (overflowRight > -50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowRight + 50,\n          y: 0,\n          animated: true,\n        });\n      } else if (overflowLeft < 50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowLeft - 50,\n          y: 0,\n          animated: true,\n        });\n      }\n    },\n    [mode, layouts, index, scrollRef, scrollX, tabsLayout]\n  );\n\n  // subscribes to offset on native devices to scroll tab bar faster when scrolling (iOS only since Android bugs)\n  useOffsetScroller({ updateScroll, index, offset, mode });\n\n  // updates scroll when index changes (updateScroll function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateScroll();\n  }, [updateScroll]);\n\n  // update indicator when index changes (updateIndicator function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateIndicator();\n  }, [updateIndicator]);\n\n  return (\n    <View style={styles.relative}>\n      <Surface\n        style={[\n          { backgroundColor, elevation },\n          restStyle,\n          styles.tabs,\n          iconPosition === 'top' && styles.tabsTopIcon,\n        ]}\n        onLayout={onTabsLayout}\n      >\n        <ScrollView\n          ref={scrollRef}\n          contentContainerStyle={\n            mode === 'fixed' ? styles.fixedContentContainerStyle : undefined\n          }\n          onContentSizeChange={(e) => {\n            innerScrollSize.current = e;\n          }}\n          onScroll={(e) => {\n            scrollX.current = e.nativeEvent.contentOffset.x;\n          }}\n          scrollEventThrottle={25}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n          alwaysBounceHorizontal={mode === 'scrollable'}\n          scrollEnabled={mode === 'scrollable'}\n        >\n          {mode === 'scrollable' && showLeadingSpace ? (\n            <View style={styles.scrollablePadding} />\n          ) : null}\n\n          {React.Children.map(children, (tab, tabIndex) => (\n            <TabsHeaderItem\n              theme={theme}\n              tabIndex={tabIndex}\n              tab={tab}\n              active={index === tabIndex}\n              onTabLayout={onTabLayout}\n              goTo={goTo}\n              activeColor={activeColor}\n              textColor={textColor}\n              position={position}\n              offset={offset}\n              childrenCount={children.length}\n              uppercase={uppercase}\n              iconPosition={iconPosition}\n              showTextLabel={showTextLabel}\n              mode={mode}\n            />\n          ))}\n          <Animated.View\n            ref={indicatorRef}\n            pointerEvents=\"none\"\n            style={[\n              styles.indicator,\n              {\n                backgroundColor: activeColor,\n              },\n              indicatorStyle,\n            ]}\n          />\n        </ScrollView>\n        <Animated.View\n          style={[\n            styles.removeTopShadow,\n            {\n              height: elevation,\n              backgroundColor,\n              top: -elevation,\n            },\n          ]}\n        />\n      </Surface>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  relative: { position: 'relative' },\n  removeTopShadow: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    zIndex: 2,\n  },\n  scrollablePadding: {\n    width: 52,\n  },\n  tabs: {\n    height: 48,\n  },\n  tabsTopIcon: {\n    height: 72,\n  },\n  fixedContentContainerStyle: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n    height: 2,\n    width: 1,\n    left: 0,\n    bottom: 0,\n    ...Platform.select({\n      web: {\n        backgroundColor: 'transparent',\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n        transformOrigin: 'left',\n        willChange: 'transform',\n      },\n      default: {},\n    }),\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport type { SwiperProps } from './utils';\nimport type { TabScreenProps } from './TabScreen';\nimport { TabsContext } from './context';\nimport TabsHeader from './TabsHeader';\n\nfunction Swiper(props: SwiperProps) {\n  const {\n    theme,\n    dark,\n    style,\n    defaultIndex,\n    onChangeIndex,\n    iconPosition,\n    showTextLabel,\n    showLeadingSpace,\n    uppercase,\n    mode,\n  } = props;\n  const [index, setIndex] = React.useState<number>(defaultIndex || 0);\n  const goTo = React.useCallback(\n    (ind: number) => {\n      setIndex(ind);\n      onChangeIndex(ind);\n    },\n    [setIndex, onChangeIndex]\n  );\n\n  let children: React.Component<TabScreenProps>[] = props.children;\n\n  const currentScreen = children[index];\n  if (!currentScreen || !currentScreen) {\n    return null;\n  }\n  const renderProps = {\n    index,\n    goTo,\n    children,\n    theme,\n    dark,\n    style,\n    offset: undefined,\n    position: undefined,\n    iconPosition,\n    showTextLabel,\n    showLeadingSpace,\n    uppercase,\n    mode,\n  };\n\n  return (\n    <View style={styles.root}>\n      <TabsHeader {...renderProps} />\n      <TabsContext.Provider value={{ goTo, index }}>\n        {currentScreen}\n      </TabsContext.Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n  },\n});\n\nexport default Swiper;\n","import * as React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport { withTheme } from 'react-native-paper';\nimport Swiper from './Swiper';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport type { IconPosition, Mode } from './utils';\nimport { Platform } from 'react-native';\n\n// used to persist position on web\nconst cache = createCache();\n\nfunction Tabs({\n  onChangeIndex,\n  children,\n  persistKey,\n  theme,\n  dark,\n  style,\n  defaultIndex,\n  mode = 'fixed',\n  uppercase = true,\n  iconPosition = 'leading',\n  showTextLabel = true,\n  showLeadingSpace = true,\n}: {\n  children: any;\n  persistKey?: string;\n  theme: Theme;\n  dark?: boolean;\n  style?: ViewStyle;\n  defaultIndex?: number;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  showLeadingSpace?: boolean;\n  uppercase?: boolean;\n  mode?: Mode;\n  onChangeIndex?: (index: number) => void;\n}) {\n  const onInnerChangeIndex = React.useCallback(\n    (newIndex) => {\n      if (persistKey && Platform.OS === 'web') {\n        cache.set(persistKey, newIndex);\n      }\n      onChangeIndex?.(newIndex);\n    },\n    [persistKey, onChangeIndex]\n  );\n\n  return (\n    <Swiper\n      style={style}\n      dark={dark}\n      theme={theme}\n      defaultIndex={getDefaultIndex(defaultIndex, persistKey)}\n      onChangeIndex={onInnerChangeIndex}\n      uppercase={uppercase}\n      iconPosition={iconPosition}\n      showTextLabel={showTextLabel}\n      showLeadingSpace={showLeadingSpace}\n      mode={mode}\n    >\n      {children}\n    </Swiper>\n  );\n}\n\nfunction getDefaultIndex(\n  defaultIndex: number | undefined,\n  persistKey: string | undefined\n) {\n  if (persistKey) {\n    return cache.get(persistKey) || defaultIndex || 0;\n  }\n  return defaultIndex || 0;\n}\n// used to persist position on web\nfunction createCache() {\n  let c: { [k: string]: number } = {};\n  const set = (k: string, i: number) => {\n    c[k] = i;\n  };\n  const get = (key: string) => c[key];\n  return {\n    set,\n    get,\n  };\n}\n\nexport default withTheme(Tabs);\n","import * as React from 'react';\nimport type { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\n\nexport interface TabScreenProps {\n  label: string;\n  icon?: IconSource;\n  children: any;\n  preload?: () => any;\n}\n\nexport default function TabScreen({ children }: TabScreenProps) {\n  return React.Children.only(children);\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { Query } from \"../../../graphql/schema.d\";\nimport { useAppSelector } from '../../../redux';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PermissionListItem from '../../../components/permissions/PermissionListItem';\n\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzoneRigs(\n    $dropzoneId: Int!\n  ) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const state = useAppSelector(state => state.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    }\n  });\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused]);\n\n  return (\n      loading\n        ? <ProgressBar indeterminate color={state.theme.colors.accent} />\n        : <Tabs defaultIndex={0} mode=\"scrollable\">\n              {\n                data?.dropzone?.roles?.map((role) =>\n                  <TabScreen label={role.name!} key={`permission-tab-role-${role.id}`}>\n                    <ScrollableScreen>\n                      \n                      <List.Subheader>User Management</List.Subheader>\n                      <PermissionListItem\n                        role={role}\n                        permissionName=\"readUser\"\n                        description=\"View other users' profiles\"\n                        title=\"View Users\"\n                      />\n\n                      <PermissionListItem\n                        role={role}\n                        permissionName=\"updateUser\"\n                        description=\"Update other users\"\n                        title=\"Update Users\"\n                      />\n\n                      <List.Section title=\"Manifest\" style={{ width: \"100%\"}}>\n                        <List.Accordion title=\"Loads\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"readLoad\"\n                            description=\"See available loads on the manifest screen\"\n                            title=\"View Load\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createLoad\"\n                            title=\"Create Loads\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateLoad\"\n                            description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                            title=\"Update Loads\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteLoad\"\n                            description=\"Permanently delete existing loads\"\n                            title=\"Delete Load\"\n                          />\n                        </List.Accordion>\n\n                        <List.Accordion title=\"Manifesting\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createSlot\"\n                            description=\"Create a slot for himself/herself only\"\n                            title=\"Manifest self\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateSlot\"\n                            description=\"Update own slot after manifesting themselves\"\n                            title=\"Update own slot\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteSlot\"\n                            description=\"Take themselves off the load\"\n                            title=\"Remove own slot\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createUserSlot\"\n                            description=\"Manifest other users, e.g yourself + others\"\n                            title=\"Manifest other people\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createUserSlotWithSelf\"\n                            description=\"Allow manifesting others only if the user is part of the group\"\n                            title=\"Manifest own groups\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateUserSlot\"\n                            description=\"Update other people's slots on a load\"\n                            title=\"Update other users slot\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteUserSlot\"\n                            description=\"Delete other users' slots off a load\"\n                            title=\"Take others off the load\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createStudentSlot\"\n                            description=\"Manifest a student on a load\"\n                            title=\"Manifest students\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateStudentSlot\"\n                            description=\"Make changes to an already manifested student\"\n                            title=\"Update student slots\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteStudentSlot\"\n                            description=\"Take a student off the load\"\n                            title=\"Remove student slots\"\n                          />\n                        </List.Accordion>\n                      </List.Section>\n                      \n                      <List.Section title=\"Administration\" style={{ width: \"100%\"}}>\n                        <List.Accordion title=\"Dropzone\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateDropzone\"\n                            description=\"Change dropzone name, visibility, and branding\"\n                            title=\"Update Dropzone\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteDropzone\"\n                            description=\"Permanently delete dropzone\"\n                            title=\"Delete Dropzone\"\n                          />\n                        </List.Accordion>\n\n                        <List.Accordion title=\"Ticket types\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createTicketType\"\n                            description=\"Create new jump tickets\"\n                            title=\"Create Ticket\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateTicketType\"\n                            description=\"Make changes to existing ticket types, including prices\"\n                            title=\"Update Tickets\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteTicketType\"\n                            description=\"Delete existing ticket types\"\n                            title=\"Remove Tickets\"\n                          />\n                        </List.Accordion>\n\n                        <List.Accordion title=\"Ticket addons\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createExtra\"\n                            description=\"Set up new ticket addons\"\n                            title=\"Create Ticket addon\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateExtra\"\n                            description=\"Make changes to existing ticket addons, including prices\"\n                            title=\"Update Ticket addons\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteExtra\"\n                            description=\"Delete existing ticket addons\"\n                            title=\"Remove Ticket addons\"\n                          />\n                        </List.Accordion>\n\n                        <List.Accordion title=\"Planes\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createPlane\"\n                            description=\"Add new aircrafts\"\n                            title=\"Create Aircraft\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updatePlane\"\n                            description=\"Make changes to existing aircrafts\"\n                            title=\"Update Aircraft\"\n                          />\n\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deletePlane\"\n                            description=\"Remove existing aircrafts\"\n                            title=\"Remove Aircraft\"\n                          />\n                        </List.Accordion>\n                        \n                        <List.Accordion title=\"Rigs\">\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"createDropzoneRig\"\n                            description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                            title=\"Create Rig\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateDropzoneRig\"\n                            description=\"Make changes to existing student and tandem rigs\"\n                            title=\"Update Rigs\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"deleteDropzoneRig\"\n                            description=\"Delete existing student and tandem rigs\"\n                            title=\"Remove Rigs\"\n                          />\n                          <PermissionListItem\n                            role={role}\n                            permissionName=\"updateFormTemplate\"\n                            description=\"Make changes to the rig inspection template\"\n                            title=\"Modify Rig Inspection Form\"\n                          />\n                        </List.Accordion>\n                      </List.Section>\n                    </ScrollableScreen>\n                  </TabScreen>\n                )\n              }\n          </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\n"],"sourceRoot":""}