{"version":3,"sources":["screens/authenticated/users/AppBar.tsx"],"names":["styles","StyleSheet","create","inputContainer","flexGrow","input","backgroundColor","height","color","icon","marginHorizontal","AppBar","navigation","previous","scene","onSearch","searchText","searchVisible","setSearchVisible","useAppSelector","state","global","currentDropzone","theme","useAppDispatch","Header","BackAction","onPress","goBack","style","value","onChangeText","text","autoFocus","Content","title","descriptor","options","titleStyle","fontWeight","name","size"],"mappings":"uFAAA,mEA+CA,IAAMA,EAASC,IAAWC,OAAO,CAC/BC,eAAgB,CACdC,SAAU,GAEZC,MAAO,CACLC,gBAAiB,cACjBC,OAAQ,OACRC,MAAO,WAETC,KAAM,CACJC,iBAAkB,KAIPC,UA5Cf,YAA4H,IAA1GC,EAAyG,EAAzGA,WAAYC,EAA6F,EAA7FA,SAAUC,EAAmF,EAAnFA,MAAOC,EAA4E,EAA5EA,SAAUC,EAAkE,EAAlEA,WAAYC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,iBAClF,EAAmCC,aAAe,SAAAC,GAAK,OAAIA,EAAMC,UAGjE,OAHA,EAAQC,gBAAR,EAAyBC,MACRC,cAGf,gBAAC,IAAOC,OAAR,KACGZ,EAAW,gBAAC,IAAOa,WAAR,CAAmBC,QAASf,EAAWgB,SAAa,KAC/DX,EAAgB,gBAAC,IAAOS,WAAR,CAAmBC,QAAS,kBAAMT,GAAiB,MAAa,KAChFD,EACG,gBAAC,IAAD,CAAMY,MAAO7B,EAAOG,gBAClB,gBAAC,IAAD,CACE0B,MAAO7B,EAAOK,MACdyB,MAAOd,EACPe,aAAc,SAACC,GAAD,OAAUjB,EAASiB,IACjCC,WAAS,KAGb,gBAAC,IAAOC,QAAR,CAAgBC,MAAOrB,EAAMsB,WAAWC,QAAQF,MAAOG,WAAY,CAAEC,WAAY,UAErF,gBAAC,IAAD,CACEC,KAAK,SACLb,QAAS,kBAAMT,GAAkBD,IACjCT,MAAM,UACNiC,KAAM,GACNZ,MAAO7B,EAAOS","file":"static/js/32.39f16ced.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Appbar, TextInput } from \"react-native-paper\";\nimport { StackHeaderProps } from \"@react-navigation/stack\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux\";\nimport { StyleSheet, View } from \"react-native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\n\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\n\nfunction AppBar({ navigation, previous, scene, onSearch, searchText, searchVisible, setSearchVisible }: ISearchableAppBar) {\n  const { currentDropzone, theme } = useAppSelector(state => state.global);\n  const dispatch = useAppDispatch();\n  \n  return (\n    <Appbar.Header>\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible\n        ? <View style={styles.inputContainer}>\n            <TextInput\n              style={styles.input}\n              value={searchText}\n              onChangeText={(text) => onSearch(text)}\n              autoFocus\n            />\n          </View>\n        : <Appbar.Content title={scene.descriptor.options.title} titleStyle={{ fontWeight: \"bold\" }} />\n      }\n      <MaterialIcons\n        name=\"search\"\n        onPress={() => setSearchVisible(!searchVisible)}\n        color=\"#FFFFFF\"\n        size={24}\n        style={styles.icon}\n      />\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1\n  },\n  input: {\n    backgroundColor: \"transparent\",\n    height: \"100%\",\n    color: \"#FFFFFF\"\n  },\n  icon: {\n    marginHorizontal: 8\n  },\n})\n\nexport default AppBar;"],"sourceRoot":""}