{"version":3,"sources":["components/input/chip_select/ChipSelect.tsx","components/input/chip_select/LicenseChipSelect.tsx","components/input/dropdown_select/FederationSelect.tsx","components/forms/user/UserForm.tsx","screens/authenticated/profile/UpdateUserScreen.tsx"],"names":["ChipSelect","props","items","selected","isSelected","isDisabled","icon","renderItemLabel","onChangeSelected","autoSelectFirst","React","length","JSON","stringify","style","flexDirection","flexWrap","map","item","key","mode","some","value","isEqual","undefined","margin","disabled","onPress","xorBy","QUERY_LICENSES","gql","LicenseChipSelect","data","useQuery","variables","federationId","Subheader","licenses","filter","Boolean","id","license","name","first","onSelect","QUERY_FEDERATIONS","FederationSelect","isMenuOpen","setMenuOpen","federations","Menu","onDismiss","visible","anchor","Item","title","description","required","federation","SlotForm","state","useAppSelector","forms","user","dispatch","useAppDispatch","original","fields","exitWeight","actions","setField","rigs","TextInput","styles","field","label","error","toString","onChangeText","newValue","HelperText","type","email","phone","keyboardType","right","Affix","text","Divider","View","width","setFederation","Number","StyleSheet","create","flex","paddingTop","marginBottom","ticketAddons","MUTATION_CREATE_USER","UpdateUserScreen","global","navigation","useNavigation","useRoute","params","setOpen","useMutation","mutationUpdateUser","validate","hasError","emailRegex","RegExp","setFieldError","test","onSave","a","async","licenseId","parseFloat","result","updateUser","fieldErrors","errors","message","notifications","showSnackbar","variant","goBack","reset","contentContainerStyle","paddingHorizontal","loading","container","alignItems","fontSize","fontWeight","separator","marginVertical","height"],"mappings":"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","file":"static/js/24.113ce1bf.chunk.js","sourcesContent":["import { isEqual, xorBy } from \"lodash\";\nimport * as React from \"react\";\nimport { View } from \"react-native\";\nimport { Chip } from \"react-native-paper\";\n\n\ninterface IChipSelect<T extends any> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  icon?: string;\n  isSelected?(item: T): boolean;\n  isDisabled(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends any>(props: IChipSelect<T>) {\n  const { items, selected, isSelected, isDisabled, icon, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || !selected.length && items.length && autoSelectFirst) {\n      onChangeSelected(\n        [items[0]]\n      );\n    }\n  }, [JSON.stringify(selected), JSON.stringify(items), autoSelectFirst])\n\n  return (\n    <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n      { items.map((item) =>\n        <Chip\n          key={JSON.stringify(item)}\n          mode=\"outlined\"\n          icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n          style={{ margin: 1 }}\n          disabled={isDisabled(item)}\n          selected={\n            isSelected\n              ? isSelected(item)\n              : selected.some((value) => isEqual(item, value))\n          }\n          onPress={() =>\n            onChangeSelected(\n              selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify),\n            )\n          }\n        >\n          { renderItemLabel(item) }\n        </Chip>\n      )}\n    </View>\n  )\n}\n\nexport default ChipSelect;","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport * as React from \"react\";\nimport { List } from \"react-native-paper\";\nimport { License, Query } from \"../../../graphql/schema.d\";\nimport ChipSelect from \"./ChipSelect\";\n\n\ninterface ILicenseSelect {\n  value?: License | null;\n  required?: boolean;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n\n    }\n  }\n`;\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId: props.federationId,\n    }\n  });\n  return (\n    <>\n      <List.Subheader>\n        License\n      </List.Subheader>\n      <ChipSelect<License>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[props.value].filter(Boolean) as License[]}\n        isSelected={(item) => item.id === props.value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) =>\n          first ? props.onSelect(first) : null\n        }\n      />\n    </>\n  )\n}","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport * as React from \"react\";\nimport { List, Menu } from \"react-native-paper\";\nimport { Federation, Query } from \"../../../graphql/schema.d\";\n\n\ninterface IFederationSelect {\n  value?: Federation | null;\n  required?: boolean;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !props.value) {\n      props.onSelect(data.federations![0]);\n    }\n  }, [JSON.stringify(data?.federations)])\n\n  return (\n    <>\n    <List.Subheader>\n      Federation\n    </List.Subheader>\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <List.Item\n          onPress={() => {\n            setMenuOpen(true);\n          }}\n          title={\n            props.value?.name || \"Please select federation\"\n          }\n          description={!props.required ? \"Optional\" : null}\n        />\n      }>\n      {\n        data?.federations?.map((federation) => \n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(federation);\n            }}\n            title={\n              federation.name || \"-\"\n            }\n            key={`federation-select-${federation.id}`}\n          />\n        )\n      }\n    </Menu>\n    </>\n  )\n}","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nexport default function SlotForm() {\n  const state = useAppSelector(state => state.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField([\"exitWeight\", state.original.exitWeight || \"60\"])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(\n          actions.forms.user.setField([\"rigs\", state.original.rigs])\n        );\n      }\n\n    }\n  }, [state.original?.id]);\n\n  return ( \n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"name\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.name.error ? \"error\" : \"info\"}>\n        { state.fields.name.error || \" \" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"email\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.email.error ? \"error\" : \"info\"}>\n        { state.fields.email.error || \" \" }\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || \"\"}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"phone\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.phone.error ? \"error\" : \"info\"}>\n        { state.fields.phone.error || \"\" }\n      </HelperText>\n\n      \n      \n     <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || \"\"}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField([\"exitWeight\", newValue]))}\n      />\n      \n      <HelperText type={!!state.fields.exitWeight.error ? \"error\" : \"info\"}>\n        { state.fields.exitWeight.error || \"\" }\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: \"100%\"}}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n          required\n        />\n\n        <HelperText type={!!state.federation.error ? \"error\" : \"info\"}>\n          { state.federation.error || \"\" }\n        </HelperText>\n\n        { (state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(state?.fields?.license?.value?.federation?.id || state.federation?.value?.id)}\n              onSelect={(value) => dispatch(actions.forms.user.setField([\"license\", value]))}\n              required\n            />\n            <HelperText type={!!state.fields.license.error ? \"error\" : \"info\"}>\n              { state.fields.license.error || \"\" }\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: \"100%\",\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: \"100%\",\n  },\n  ticketAddons: {\n    marginBottom: 8\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { gql, useMutation } from \"@apollo/client\";\nimport { actions, useAppSelector, useAppDispatch } from '../../../redux';\n\nimport { View } from '../../../components/Themed';\n\nimport { Mutation, User } from '../../../graphql/schema';\nimport UserForm from '../../../components/forms/user/UserForm';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\n\nconst MUTATION_CREATE_USER = gql`\n  mutation UpdateUser(\n    $id: Int,\n    $name: String,\n    $phone: String,\n    $email: String,\n    $licenseId: Int,\n    $exitWeight: Float,\n  ){\n    updateUser(input: {\n      id: $id\n      attributes: {\n        name: $name,\n        phone: $phone,\n        email: $email,\n        licenseId: $licenseId,\n        exitWeight: $exitWeight,\n      }\n    }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n        rigs {\n          id\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateUserScreen() {\n  const state = useAppSelector(state => state.forms.user);\n  const globalState = useAppSelector(state => state.global);\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n  const route = useRoute<{ key: string, name: string, params: { user: User }}>();\n  const user = route.params!.user;\n\n  React.useEffect(() => {\n    dispatch(actions.forms.user.setOpen(user));\n  }, [user?.id]);\n\n  const [mutationUpdateUser, data] = useMutation<Mutation>(MUTATION_CREATE_USER);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    const emailRegex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if ((state.fields.name?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"name\", \"Name is too short\"])\n      );\n    }\n\n    if ((state.fields.email?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"email\", \"Email is too short\"])\n      );\n    }\n\n    if ((state.fields.phone?.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"phone\", \"Phone number is too short\"])\n      );\n    }\n\n    if (!emailRegex.test(state.fields?.email?.value || \"\")) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"email\", \"Please enter a valid email\"])\n      );\n    }\n\n    if ((state.fields.exitWeight?.value || 0) < 30) {\n      hasError = true;\n      dispatch(\n        actions.forms.user.setFieldError([\"exitWeight\", \"Exit weight seems too low?\"])\n      );\n    }\n\n    return !hasError;\n  }, [JSON.stringify(state.fields), dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, license, phone, email, exitWeight } = state.fields;\n\n    \n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateUser({\n          variables: {\n            id: Number(state.original!.id!),\n            name: name.value,\n            licenseId: !license.value?.id ? null : Number(license.value!.id),\n            phone: phone.value,\n            exitWeight: parseFloat(exitWeight.value!),\n            email: email.value,\n          }\n        });\n        \n        if (result.data?.updateUser?.user) {\n          const { fieldErrors, errors } = result.data.updateUser;\n\n          if (fieldErrors) {\n            fieldErrors?.map(({ field, message }) => {\n              switch (field) {\n                case \"name\":\n                  return dispatch(actions.forms.user.setFieldError([\"name\", message]));\n                case \"exit_weight\":\n                  return dispatch(actions.forms.user.setFieldError([\"exitWeight\", message]));\n                case \"license_id\":\n                  return dispatch(actions.forms.user.setFieldError([\"license\", message]));\n                case \"phone\":\n                  return dispatch(actions.forms.user.setFieldError([\"phone\", message]));\n                case \"email\":\n                  return dispatch(actions.forms.user.setFieldError([\"email\", message]));\n              }\n            });\n          } else if (errors?.length) {\n            errors.map((message) =>\n              dispatch(\n                actions.notifications.showSnackbar({ message: message, variant: \"error\" })\n              )\n            );\n          } else {\n            dispatch(\n              actions.notifications.showSnackbar({ message: `Profile has been updated`, variant: \"success\" })\n            );\n            navigation.goBack();\n            dispatch(actions.forms.user.reset());\n          }\n\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({ message: error.message, variant: \"error\" })\n        );\n      }\n    }\n    \n  }, [JSON.stringify(state.fields), dispatch, mutationUpdateUser]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 48 }}>\n        <UserForm />\n        <View style={styles.fields}>\n          <Button mode=\"contained\" disabled={data.loading} onPress={onSave} loading={data.loading}>\n            Save\n          </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    paddingTop: 56,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: \"100%\",\n    marginBottom: 16\n  },\n  field: {\n    marginBottom: 8,\n  }\n});\n"],"sourceRoot":""}