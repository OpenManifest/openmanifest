/* eslint-disable */
import type * as Types from './schema.d';

export type CurrentUserEssentialsFragment = { __typename?: 'DropzoneUser', id: string, credits?: Types.Maybe<number>, hasCredits: boolean, hasExitWeight: boolean, hasMembership: boolean, hasReserveInDate: boolean, hasRigInspection: boolean, hasLicense: boolean, permissions?: Types.Maybe<Array<Types.Permission>>, expiresAt?: Types.Maybe<number>, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> };

export type CurrentUserDetailedFragment = { __typename?: 'DropzoneUser', id: string, credits?: Types.Maybe<number>, hasCredits: boolean, hasExitWeight: boolean, hasMembership: boolean, hasReserveInDate: boolean, hasRigInspection: boolean, hasLicense: boolean, permissions?: Types.Maybe<Array<Types.Permission>>, expiresAt?: Types.Maybe<number>, rigInspections?: Types.Maybe<Array<{ __typename?: 'RigInspection', id: string, isOk: boolean, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }>>, orders?: Types.Maybe<{ __typename?: 'OrderConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'OrderEdge', node?: Types.Maybe<{ __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> }> }>>> }>, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', pushToken?: Types.Maybe<string>, id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, jumpTypes?: Types.Maybe<Array<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> };

export type DropzoneUserEssentialsFragment = { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } };

export type DropzoneUserDetailsFragment = { __typename?: 'DropzoneUser', credits?: Types.Maybe<number>, id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string>, federation?: Types.Maybe<{ __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> };

export type DropzoneUserProfileFragment = { __typename?: 'DropzoneUser', permissions?: Types.Maybe<Array<Types.Permission>>, credits?: Types.Maybe<number>, id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, rigInspections?: Types.Maybe<Array<{ __typename?: 'RigInspection', id: string, isOk: boolean, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }>>, orders?: Types.Maybe<{ __typename?: 'OrderConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'OrderEdge', node?: Types.Maybe<{ __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> }> }>>> }>, slots?: Types.Maybe<{ __typename?: 'SlotConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'SlotEdge', node?: Types.Maybe<{ __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, load: { __typename?: 'Load', id: string, name?: Types.Maybe<string>, createdAt: number, dispatchAt?: Types.Maybe<number>, hasLanded?: Types.Maybe<boolean>, loadNumber: number, isFull: boolean, state: Types.LoadState, isOpen: boolean, weight: number, maxSlots: number, availableSlots: number, occupiedSlots: number }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> }> }>>> }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string>, federation?: Types.Maybe<{ __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> };

export type DropzoneEssentialsFragment = { __typename?: 'Dropzone', id: string, lat?: Types.Maybe<number>, lng?: Types.Maybe<number>, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, isPublic: boolean, requestPublication: boolean, banner?: Types.Maybe<string>, isCreditSystemEnabled: boolean };

export type DropzoneDetailedFragment = { __typename?: 'Dropzone', id: string, lat?: Types.Maybe<number>, lng?: Types.Maybe<number>, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, isPublic: boolean, requestPublication: boolean, banner?: Types.Maybe<string>, isCreditSystemEnabled: boolean, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, planes: Array<{ __typename?: 'Plane', id: string, minSlots?: Types.Maybe<number>, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string>, registration?: Types.Maybe<string> }>, ticketTypes: Array<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, currentConditions: { __typename?: 'WeatherCondition', id: string, jumpRun?: Types.Maybe<number>, temperature?: Types.Maybe<number>, offsetDirection?: Types.Maybe<number>, offsetMiles?: Types.Maybe<number>, createdAt: number, exitSpotMiles?: Types.Maybe<number>, winds?: Types.Maybe<Array<{ __typename?: 'Wind', temperature?: Types.Maybe<string>, altitude?: Types.Maybe<string>, speed?: Types.Maybe<string>, direction?: Types.Maybe<string> }>> }, loads: { __typename?: 'LoadConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'LoadEdge', node?: Types.Maybe<{ __typename?: 'Load', id: string, name?: Types.Maybe<string>, loadNumber: number, isOpen: boolean, maxSlots: number, state: Types.LoadState }> }>>> } };

export type DropzoneExtensiveFragment = { __typename?: 'Dropzone', id: string, lat?: Types.Maybe<number>, lng?: Types.Maybe<number>, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, isPublic: boolean, requestPublication: boolean, banner?: Types.Maybe<string>, isCreditSystemEnabled: boolean, currentUser: { __typename?: 'DropzoneUser', id: string, credits?: Types.Maybe<number>, hasCredits: boolean, hasExitWeight: boolean, hasMembership: boolean, hasReserveInDate: boolean, hasRigInspection: boolean, hasLicense: boolean, permissions?: Types.Maybe<Array<Types.Permission>>, expiresAt?: Types.Maybe<number>, rigInspections?: Types.Maybe<Array<{ __typename?: 'RigInspection', id: string, isOk: boolean, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }>>, orders?: Types.Maybe<{ __typename?: 'OrderConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'OrderEdge', node?: Types.Maybe<{ __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> }> }>>> }>, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', pushToken?: Types.Maybe<string>, id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, jumpTypes?: Types.Maybe<Array<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> }, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, planes: Array<{ __typename?: 'Plane', id: string, minSlots?: Types.Maybe<number>, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string>, registration?: Types.Maybe<string> }>, ticketTypes: Array<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, currentConditions: { __typename?: 'WeatherCondition', id: string, jumpRun?: Types.Maybe<number>, temperature?: Types.Maybe<number>, offsetDirection?: Types.Maybe<number>, offsetMiles?: Types.Maybe<number>, createdAt: number, exitSpotMiles?: Types.Maybe<number>, winds?: Types.Maybe<Array<{ __typename?: 'Wind', temperature?: Types.Maybe<string>, altitude?: Types.Maybe<string>, speed?: Types.Maybe<string>, direction?: Types.Maybe<string> }>> }, loads: { __typename?: 'LoadConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'LoadEdge', node?: Types.Maybe<{ __typename?: 'Load', id: string, name?: Types.Maybe<string>, loadNumber: number, isOpen: boolean, maxSlots: number, state: Types.LoadState }> }>>> } };

export type FederationEssentialsFragment = { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> };

export type UserFederationEssentialsFragment = { __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> };

export type JumpTypeEssentialsFragment = { __typename?: 'JumpType', id: string, name?: Types.Maybe<string> };

export type LicenseEssentialsFragment = { __typename?: 'License', id: string, name?: Types.Maybe<string> };

export type LicenseDetailsFragment = { __typename?: 'License', id: string, name?: Types.Maybe<string>, federation?: Types.Maybe<{ __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }> };

export type LoadEssentialsFragment = { __typename?: 'Load', id: string, name?: Types.Maybe<string>, createdAt: number, dispatchAt?: Types.Maybe<number>, hasLanded?: Types.Maybe<boolean>, loadNumber: number, isFull: boolean, state: Types.LoadState, isOpen: boolean, weight: number, maxSlots: number, availableSlots: number, occupiedSlots: number };

export type LoadDetailsFragment = { __typename?: 'Load', id: string, name?: Types.Maybe<string>, createdAt: number, dispatchAt?: Types.Maybe<number>, hasLanded?: Types.Maybe<boolean>, loadNumber: number, isFull: boolean, state: Types.LoadState, isOpen: boolean, weight: number, maxSlots: number, availableSlots: number, occupiedSlots: number, plane: { __typename?: 'Plane', id: string, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string> }, gca?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, pilot?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, loadMaster?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, slots?: Types.Maybe<Array<{ __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> }>> };

export type OrderEssentialsFragment = { __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> };

export type PlaneEssentialsFragment = { __typename?: 'Plane', id: string, minSlots?: Types.Maybe<number>, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string>, registration?: Types.Maybe<string> };

export type RigInspectionEssentialsFragment = { __typename?: 'RigInspection', id: string, isOk: boolean, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> };

export type RigInspectionDetailedFragment = { __typename?: 'RigInspection', id: string, isOk: boolean, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } } };

export type RigEssentialsFragment = { __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> };

export type UserRigDetailedFragment = { __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> };

export type RoleEssentialsFragment = { __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number };

export type RoleDetailedFragment = { __typename?: 'UserRole', permissions: Array<string>, id: string, name?: Types.Maybe<string>, dropzoneId: number };

export type SlotEssentialsFragment = { __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> };

export type SlotDetailsFragment = { __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> };

export type UserSlotDetailsFragment = { __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, load: { __typename?: 'Load', id: string, name?: Types.Maybe<string>, createdAt: number, dispatchAt?: Types.Maybe<number>, hasLanded?: Types.Maybe<boolean>, loadNumber: number, isFull: boolean, state: Types.LoadState, isOpen: boolean, weight: number, maxSlots: number, availableSlots: number, occupiedSlots: number }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> };

export type SlotExhaustiveFragment = { __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', credits?: Types.Maybe<number>, id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string>, federation?: Types.Maybe<{ __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> }>, load: { __typename?: 'Load', id: string, name?: Types.Maybe<string>, createdAt: number, dispatchAt?: Types.Maybe<number>, hasLanded?: Types.Maybe<boolean>, loadNumber: number, isFull: boolean, state: Types.LoadState, isOpen: boolean, weight: number, maxSlots: number, availableSlots: number, occupiedSlots: number, plane: { __typename?: 'Plane', id: string, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string> }, gca?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, pilot?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, loadMaster?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, slots?: Types.Maybe<Array<{ __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> }>> }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> };

export type TicketTypeEssentialsFragment = { __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> };

export type TransactionEssentialsFragment = { __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } };

export type UserEssentialsFragment = { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> };

export type UserDetailedFragment = { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> };

export type CurrentUserFragment = { __typename?: 'User', pushToken?: Types.Maybe<string>, id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, jumpTypes?: Types.Maybe<Array<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> };

export type WeatherConditionEssentialsFragment = { __typename?: 'WeatherCondition', id: string, jumpRun?: Types.Maybe<number>, temperature?: Types.Maybe<number>, offsetDirection?: Types.Maybe<number>, offsetMiles?: Types.Maybe<number>, createdAt: number, exitSpotMiles?: Types.Maybe<number>, winds?: Types.Maybe<Array<{ __typename?: 'Wind', temperature?: Types.Maybe<string>, altitude?: Types.Maybe<string>, speed?: Types.Maybe<string>, direction?: Types.Maybe<string> }>> };

export type ArchivePlaneMutationVariables = Types.Exact<{
  id: Types.Scalars['Int'];
}>;


export type ArchivePlaneMutation = { __typename?: 'Mutation', deletePlane?: Types.Maybe<{ __typename?: 'DeletePlanePayload', plane?: Types.Maybe<{ __typename?: 'Plane', id: string, minSlots?: Types.Maybe<number>, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string>, registration?: Types.Maybe<string> }> }> };

export type ArchiveRigMutationVariables = Types.Exact<{
  id: Types.Scalars['Int'];
}>;


export type ArchiveRigMutation = { __typename?: 'Mutation', archiveRig?: Types.Maybe<{ __typename?: 'DeleteRigPayload', rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }> };

export type ArchiveTicketTypeMutationVariables = Types.Exact<{
  id: Types.Scalars['Int'];
}>;


export type ArchiveTicketTypeMutation = { __typename?: 'Mutation', archiveTicketType?: Types.Maybe<{ __typename?: 'DeleteTicketPayload', ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }> }> };

export type ArchiveUserMutationVariables = Types.Exact<{
  id: Types.Scalars['Int'];
}>;


export type ArchiveUserMutation = { __typename?: 'Mutation', deleteUser?: Types.Maybe<{ __typename?: 'DeleteUserPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }> }> };

export type ConfirmUserMutationVariables = Types.Exact<{
  token: Types.Scalars['String'];
}>;


export type ConfirmUserMutation = { __typename?: 'Mutation', userConfirmRegistrationWithToken?: Types.Maybe<{ __typename?: 'UserConfirmRegistrationWithTokenPayload', authenticatable: { __typename?: 'User', id: string, apfNumber?: Types.Maybe<string>, phone?: Types.Maybe<string>, pushToken?: Types.Maybe<string>, email?: Types.Maybe<string> }, credentials?: Types.Maybe<{ __typename?: 'Credential', accessToken: string, client: string, expiry: number, tokenType: string, uid: string }> }> };

export type CreateDropzoneMutationVariables = Types.Exact<{
  name: Types.Scalars['String'];
  banner?: Types.Maybe<Types.Scalars['String']>;
  federationId: Types.Scalars['Int'];
  lat?: Types.Maybe<Types.Scalars['Float']>;
  lng?: Types.Maybe<Types.Scalars['Float']>;
  primaryColor?: Types.Maybe<Types.Scalars['String']>;
  secondaryColor?: Types.Maybe<Types.Scalars['String']>;
  earliestTimestamp?: Types.Maybe<Types.Scalars['Int']>;
}>;


export type CreateDropzoneMutation = { __typename?: 'Mutation', createDropzone?: Types.Maybe<{ __typename?: 'CreateDropzonePayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string, lat?: Types.Maybe<number>, lng?: Types.Maybe<number>, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, isPublic: boolean, requestPublication: boolean, banner?: Types.Maybe<string>, isCreditSystemEnabled: boolean, currentUser: { __typename?: 'DropzoneUser', id: string, credits?: Types.Maybe<number>, hasCredits: boolean, hasExitWeight: boolean, hasMembership: boolean, hasReserveInDate: boolean, hasRigInspection: boolean, hasLicense: boolean, permissions?: Types.Maybe<Array<Types.Permission>>, expiresAt?: Types.Maybe<number>, rigInspections?: Types.Maybe<Array<{ __typename?: 'RigInspection', id: string, isOk: boolean, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }>>, orders?: Types.Maybe<{ __typename?: 'OrderConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'OrderEdge', node?: Types.Maybe<{ __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> }> }>>> }>, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', pushToken?: Types.Maybe<string>, id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, jumpTypes?: Types.Maybe<Array<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> }, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, planes: Array<{ __typename?: 'Plane', id: string, minSlots?: Types.Maybe<number>, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string>, registration?: Types.Maybe<string> }>, ticketTypes: Array<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, currentConditions: { __typename?: 'WeatherCondition', id: string, jumpRun?: Types.Maybe<number>, temperature?: Types.Maybe<number>, offsetDirection?: Types.Maybe<number>, offsetMiles?: Types.Maybe<number>, createdAt: number, exitSpotMiles?: Types.Maybe<number>, winds?: Types.Maybe<Array<{ __typename?: 'Wind', temperature?: Types.Maybe<string>, altitude?: Types.Maybe<string>, speed?: Types.Maybe<string>, direction?: Types.Maybe<string> }>> }, loads: { __typename?: 'LoadConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'LoadEdge', node?: Types.Maybe<{ __typename?: 'Load', id: string, name?: Types.Maybe<string>, loadNumber: number, isOpen: boolean, maxSlots: number, state: Types.LoadState }> }>>> } }> }> };

export type CreateOrderMutationVariables = Types.Exact<{
  buyer: Types.WalletInput;
  seller: Types.WalletInput;
  dropzoneId: Types.Scalars['Int'];
  title?: Types.Maybe<Types.Scalars['String']>;
  amount: Types.Scalars['Int'];
}>;


export type CreateOrderMutation = { __typename?: 'Mutation', createOrder?: Types.Maybe<{ __typename?: 'CreateOrderPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, order?: Types.Maybe<{ __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> }> }> };

export type CreateRigMutationVariables = Types.Exact<{
  make?: Types.Maybe<Types.Scalars['String']>;
  name?: Types.Maybe<Types.Scalars['String']>;
  model?: Types.Maybe<Types.Scalars['String']>;
  serial?: Types.Maybe<Types.Scalars['String']>;
  rigType?: Types.Maybe<Types.Scalars['String']>;
  canopySize?: Types.Maybe<Types.Scalars['Int']>;
  repackExpiresAt?: Types.Maybe<Types.Scalars['Int']>;
  userId?: Types.Maybe<Types.Scalars['Int']>;
  dropzoneId?: Types.Maybe<Types.Scalars['Int']>;
}>;


export type CreateRigMutation = { __typename?: 'Mutation', createRig?: Types.Maybe<{ __typename?: 'CreateRigPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }> };

export type FinalizeLoadMutationVariables = Types.Exact<{
  id: Types.Scalars['Int'];
  state: Types.LoadState;
}>;


export type FinalizeLoadMutation = { __typename?: 'Mutation', finalizeLoad?: Types.Maybe<{ __typename?: 'FinalizeLoadPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', message: string, field: string }>>, load?: Types.Maybe<{ __typename?: 'Load', id: string, name?: Types.Maybe<string>, createdAt: number, dispatchAt?: Types.Maybe<number>, hasLanded?: Types.Maybe<boolean>, loadNumber: number, isFull: boolean, state: Types.LoadState, isOpen: boolean, weight: number, maxSlots: number, availableSlots: number, occupiedSlots: number, plane: { __typename?: 'Plane', id: string, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string> }, gca?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, pilot?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, loadMaster?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, slots?: Types.Maybe<Array<{ __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> }>> }> }> };

export type GrantPermissionMutationVariables = Types.Exact<{
  dropzoneUserId: Types.Scalars['Int'];
  permissionName: Types.Permission;
}>;


export type GrantPermissionMutation = { __typename?: 'Mutation', grantPermission?: Types.Maybe<{ __typename?: 'GrantPermissionPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', message: string, field: string }>>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', permissions?: Types.Maybe<Array<Types.Permission>>, id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }> }> };

export type JoinFederationMutationVariables = Types.Exact<{
  federationId: Types.Scalars['Int'];
  uid?: Types.Maybe<Types.Scalars['String']>;
  licenseId?: Types.Maybe<Types.Scalars['Int']>;
}>;


export type JoinFederationMutation = { __typename?: 'Mutation', joinFederation?: Types.Maybe<{ __typename?: 'JoinFederationPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, userFederation?: Types.Maybe<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, qualifications?: Types.Maybe<Array<{ __typename?: 'UserQualification', id: string, name?: Types.Maybe<string>, uid?: Types.Maybe<string>, expiresAt?: Types.Maybe<number> }>>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>> } }> }> };

export type RecoverPasswordMutationVariables = Types.Exact<{
  email: Types.Scalars['String'];
  redirectUrl: Types.Scalars['String'];
}>;


export type RecoverPasswordMutation = { __typename?: 'Mutation', userSendPasswordReset?: Types.Maybe<{ __typename?: 'UserSendPasswordResetPayload', message: string }> };

export type ReloadWeatherMutationVariables = Types.Exact<{
  id: Types.Scalars['Int'];
}>;


export type ReloadWeatherMutation = { __typename?: 'Mutation', reloadWeatherCondition?: Types.Maybe<{ __typename?: 'ReloadWeatherConditionPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, weatherCondition?: Types.Maybe<{ __typename?: 'WeatherCondition', createdAt: number, exitSpotMiles?: Types.Maybe<number>, id: string, jumpRun?: Types.Maybe<number>, offsetDirection?: Types.Maybe<number>, offsetMiles?: Types.Maybe<number>, temperature?: Types.Maybe<number>, updatedAt: number, winds?: Types.Maybe<Array<{ __typename?: 'Wind', altitude?: Types.Maybe<string>, direction?: Types.Maybe<string>, speed?: Types.Maybe<string>, temperature?: Types.Maybe<string> }>> }> }> };

export type RevokePermissionMutationVariables = Types.Exact<{
  dropzoneUserId: Types.Scalars['Int'];
  permissionName: Types.Permission;
}>;


export type RevokePermissionMutation = { __typename?: 'Mutation', revokePermission?: Types.Maybe<{ __typename?: 'RevokePermissionPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', message: string, field: string }>>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', permissions?: Types.Maybe<Array<Types.Permission>>, id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }> }> };

export type UpdateDropzoneMutationVariables = Types.Exact<{
  id: Types.Scalars['Int'];
  name: Types.Scalars['String'];
  requestPublication?: Types.Maybe<Types.Scalars['Boolean']>;
  banner?: Types.Maybe<Types.Scalars['String']>;
  federationId: Types.Scalars['Int'];
  lat?: Types.Maybe<Types.Scalars['Float']>;
  lng?: Types.Maybe<Types.Scalars['Float']>;
  primaryColor?: Types.Maybe<Types.Scalars['String']>;
  secondaryColor?: Types.Maybe<Types.Scalars['String']>;
  isCreditSystemEnabled?: Types.Maybe<Types.Scalars['Boolean']>;
  isPublic?: Types.Maybe<Types.Scalars['Boolean']>;
  earliestTimestamp?: Types.Maybe<Types.Scalars['Int']>;
}>;


export type UpdateDropzoneMutation = { __typename?: 'Mutation', updateDropzone?: Types.Maybe<{ __typename?: 'UpdateDropzonePayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string, lat?: Types.Maybe<number>, lng?: Types.Maybe<number>, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, isPublic: boolean, requestPublication: boolean, banner?: Types.Maybe<string>, isCreditSystemEnabled: boolean, currentUser: { __typename?: 'DropzoneUser', id: string, credits?: Types.Maybe<number>, hasCredits: boolean, hasExitWeight: boolean, hasMembership: boolean, hasReserveInDate: boolean, hasRigInspection: boolean, hasLicense: boolean, permissions?: Types.Maybe<Array<Types.Permission>>, expiresAt?: Types.Maybe<number>, rigInspections?: Types.Maybe<Array<{ __typename?: 'RigInspection', id: string, isOk: boolean, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }>>, orders?: Types.Maybe<{ __typename?: 'OrderConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'OrderEdge', node?: Types.Maybe<{ __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> }> }>>> }>, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', pushToken?: Types.Maybe<string>, id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, jumpTypes?: Types.Maybe<Array<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> }, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, planes: Array<{ __typename?: 'Plane', id: string, minSlots?: Types.Maybe<number>, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string>, registration?: Types.Maybe<string> }>, ticketTypes: Array<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, currentConditions: { __typename?: 'WeatherCondition', id: string, jumpRun?: Types.Maybe<number>, temperature?: Types.Maybe<number>, offsetDirection?: Types.Maybe<number>, offsetMiles?: Types.Maybe<number>, createdAt: number, exitSpotMiles?: Types.Maybe<number>, winds?: Types.Maybe<Array<{ __typename?: 'Wind', temperature?: Types.Maybe<string>, altitude?: Types.Maybe<string>, speed?: Types.Maybe<string>, direction?: Types.Maybe<string> }>> }, loads: { __typename?: 'LoadConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'LoadEdge', node?: Types.Maybe<{ __typename?: 'Load', id: string, name?: Types.Maybe<string>, loadNumber: number, isOpen: boolean, maxSlots: number, state: Types.LoadState }> }>>> } }> }> };

export type UpdateLostPasswordMutationVariables = Types.Exact<{
  password: Types.Scalars['String'];
  passwordConfirmation: Types.Scalars['String'];
  token: Types.Scalars['String'];
}>;


export type UpdateLostPasswordMutation = { __typename?: 'Mutation', userUpdatePasswordWithToken?: Types.Maybe<{ __typename?: 'UserUpdatePasswordWithTokenPayload', authenticatable: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> }, credentials?: Types.Maybe<{ __typename?: 'Credential', accessToken: string, client: string, expiry: number, tokenType: string, uid: string }> }> };

export type UpdateRigMutationVariables = Types.Exact<{
  id: Types.Scalars['Int'];
  name?: Types.Maybe<Types.Scalars['String']>;
  make?: Types.Maybe<Types.Scalars['String']>;
  model?: Types.Maybe<Types.Scalars['String']>;
  serial?: Types.Maybe<Types.Scalars['String']>;
  rigType?: Types.Maybe<Types.Scalars['String']>;
  canopySize?: Types.Maybe<Types.Scalars['Int']>;
  packingCard?: Types.Maybe<Types.Scalars['String']>;
  repackExpiresAt?: Types.Maybe<Types.Scalars['Int']>;
  userId?: Types.Maybe<Types.Scalars['Int']>;
  dropzoneId?: Types.Maybe<Types.Scalars['Int']>;
}>;


export type UpdateRigMutation = { __typename?: 'Mutation', updateRig?: Types.Maybe<{ __typename?: 'UpdateRigPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }> };

export type UserSignUpMutationVariables = Types.Exact<{
  email: Types.Scalars['String'];
  password: Types.Scalars['String'];
  passwordConfirmation: Types.Scalars['String'];
  name: Types.Scalars['String'];
  phone: Types.Scalars['String'];
  pushToken?: Types.Maybe<Types.Scalars['String']>;
  exitWeight: Types.Scalars['Float'];
  licenseId?: Types.Maybe<Types.Scalars['Int']>;
}>;


export type UserSignUpMutation = { __typename?: 'Mutation', userSignUp?: Types.Maybe<{ __typename?: 'UserSignUpPayload', errors?: Types.Maybe<Array<string>>, fieldErrors?: Types.Maybe<Array<{ __typename?: 'FieldError', field: string, message: string }>>, authenticatable?: Types.Maybe<{ __typename?: 'User', createdAt: number, email?: Types.Maybe<string>, id: string, name?: Types.Maybe<string>, phone?: Types.Maybe<string> }>, credentials?: Types.Maybe<{ __typename?: 'Credential', accessToken: string, tokenType: string, client: string, expiry: number, uid: string }> }> };

export type QueryDropzoneQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
  earliestTimestamp?: Types.Maybe<Types.Scalars['Int']>;
}>;


export type QueryDropzoneQuery = { __typename?: 'Query', dropzone: { __typename?: 'Dropzone', id: string, lat?: Types.Maybe<number>, lng?: Types.Maybe<number>, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, isPublic: boolean, requestPublication: boolean, banner?: Types.Maybe<string>, isCreditSystemEnabled: boolean, currentUser: { __typename?: 'DropzoneUser', id: string, credits?: Types.Maybe<number>, hasCredits: boolean, hasExitWeight: boolean, hasMembership: boolean, hasReserveInDate: boolean, hasRigInspection: boolean, hasLicense: boolean, permissions?: Types.Maybe<Array<Types.Permission>>, expiresAt?: Types.Maybe<number>, rigInspections?: Types.Maybe<Array<{ __typename?: 'RigInspection', id: string, isOk: boolean, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }>>, orders?: Types.Maybe<{ __typename?: 'OrderConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'OrderEdge', node?: Types.Maybe<{ __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> }> }>>> }>, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', pushToken?: Types.Maybe<string>, id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, jumpTypes?: Types.Maybe<Array<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> }, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, planes: Array<{ __typename?: 'Plane', id: string, minSlots?: Types.Maybe<number>, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string>, registration?: Types.Maybe<string> }>, ticketTypes: Array<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, currentConditions: { __typename?: 'WeatherCondition', id: string, jumpRun?: Types.Maybe<number>, temperature?: Types.Maybe<number>, offsetDirection?: Types.Maybe<number>, offsetMiles?: Types.Maybe<number>, createdAt: number, exitSpotMiles?: Types.Maybe<number>, winds?: Types.Maybe<Array<{ __typename?: 'Wind', temperature?: Types.Maybe<string>, altitude?: Types.Maybe<string>, speed?: Types.Maybe<string>, direction?: Types.Maybe<string> }>> }, loads: { __typename?: 'LoadConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'LoadEdge', node?: Types.Maybe<{ __typename?: 'Load', id: string, name?: Types.Maybe<string>, loadNumber: number, isOpen: boolean, maxSlots: number, state: Types.LoadState }> }>>> } } };

export type DropzoneTransactionsQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
  after?: Types.Maybe<Types.Scalars['String']>;
}>;


export type DropzoneTransactionsQuery = { __typename?: 'Query', dropzone: { __typename?: 'Dropzone', id: string, lat?: Types.Maybe<number>, lng?: Types.Maybe<number>, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, isPublic: boolean, requestPublication: boolean, banner?: Types.Maybe<string>, isCreditSystemEnabled: boolean, orders?: Types.Maybe<{ __typename?: 'OrderConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'OrderEdge', node?: Types.Maybe<{ __typename?: 'Order', id: string }> }>>> }> } };

export type DropzoneUsersQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
  search?: Types.Maybe<Types.Scalars['String']>;
  permissions?: Types.Maybe<Array<Types.Permission> | Types.Permission>;
  first?: Types.Maybe<Types.Scalars['Int']>;
  after?: Types.Maybe<Types.Scalars['String']>;
  licensed?: Types.Maybe<Types.Scalars['Boolean']>;
}>;


export type DropzoneUsersQuery = { __typename?: 'Query', dropzone: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string>, dropzoneUsers: { __typename?: 'DropzoneUserConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'DropzoneUserEdge', cursor: string, node?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }> }>>> } } };

export type QueryDropzoneUserProfileQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
  dropzoneUserId: Types.Scalars['Int'];
}>;


export type QueryDropzoneUserProfileQuery = { __typename?: 'Query', dropzone: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', permissions?: Types.Maybe<Array<Types.Permission>>, credits?: Types.Maybe<number>, id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, rigInspections?: Types.Maybe<Array<{ __typename?: 'RigInspection', id: string, isOk: boolean, inspectedBy: { __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }> }>>, orders?: Types.Maybe<{ __typename?: 'OrderConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'OrderEdge', node?: Types.Maybe<{ __typename?: 'Order', id: string, state: Types.OrderState, amount: number, title?: Types.Maybe<string>, orderNumber: number, createdAt: number, buyer: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, seller: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, item?: Types.Maybe<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, title?: Types.Maybe<string>, cost: number } | { __typename?: 'Slot', id: string, title?: Types.Maybe<string>, cost: number, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, cost: number }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }>> } | { __typename?: 'TicketType', id: string, title?: Types.Maybe<string>, cost: number }>, receipts?: Types.Maybe<Array<{ __typename?: 'Receipt', id: string, amountCents?: Types.Maybe<number>, createdAt: number, updatedAt: number, transactions: Array<{ __typename?: 'Transaction', id: string, transactionType: Types.TransactionType, amount: number, status: Types.TransactionStatus, sender: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }, receiver: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string> } | { __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } } }> }>> }> }>>> }>, slots?: Types.Maybe<{ __typename?: 'SlotConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'SlotEdge', node?: Types.Maybe<{ __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, load: { __typename?: 'Load', id: string, name?: Types.Maybe<string>, createdAt: number, dispatchAt?: Types.Maybe<number>, hasLanded?: Types.Maybe<boolean>, loadNumber: number, isFull: boolean, state: Types.LoadState, isOpen: boolean, weight: number, maxSlots: number, availableSlots: number, occupiedSlots: number }, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> }> }>>> }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string>, federation?: Types.Maybe<{ __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string>, userFederations?: Types.Maybe<Array<{ __typename?: 'UserFederation', id: string, uid?: Types.Maybe<string>, federation: { __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }> }>>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string>, rigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>> }, availableRigs?: Types.Maybe<Array<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>>, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> }> } };

export type QueryDropzonesQueryVariables = Types.Exact<{
  isPublic?: Types.Maybe<Types.Scalars['Boolean']>;
  requestedPublication?: Types.Maybe<Types.Scalars['Boolean']>;
}>;


export type QueryDropzonesQuery = { __typename?: 'Query', dropzones: { __typename?: 'DropzoneConnection', edges?: Types.Maybe<Array<Types.Maybe<{ __typename?: 'DropzoneEdge', node?: Types.Maybe<{ __typename?: 'Dropzone', id: string, lat?: Types.Maybe<number>, lng?: Types.Maybe<number>, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, isPublic: boolean, requestPublication: boolean, banner?: Types.Maybe<string>, isCreditSystemEnabled: boolean }> }>>> } };

export type FederationsQueryVariables = Types.Exact<{ [key: string]: never; }>;


export type FederationsQuery = { __typename?: 'Query', federations: Array<{ __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }> };

export type AddressToLocationQueryVariables = Types.Exact<{
  search: Types.Scalars['String'];
}>;


export type AddressToLocationQuery = { __typename?: 'Query', geocode?: Types.Maybe<{ __typename?: 'GeocodedLocation', formattedString?: Types.Maybe<string>, id: string, lat?: Types.Maybe<number>, lng: number }> };

export type AllowedJumpTypesQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
  userIds: Array<Types.Scalars['Int']> | Types.Scalars['Int'];
}>;


export type AllowedJumpTypesQuery = { __typename?: 'Query', dropzone: { __typename?: 'Dropzone', id: string, allowedJumpTypes: Array<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }> }, jumpTypes: Array<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }> };

export type LicensesQueryVariables = Types.Exact<{
  federationId?: Types.Maybe<Types.Scalars['Int']>;
}>;


export type LicensesQuery = { __typename?: 'Query', licenses: Array<{ __typename?: 'License', id: string, name?: Types.Maybe<string>, federation?: Types.Maybe<{ __typename?: 'Federation', id: string, name?: Types.Maybe<string>, slug?: Types.Maybe<string> }> }> };

export type LoadQueryVariables = Types.Exact<{
  id: Types.Scalars['Int'];
}>;


export type LoadQuery = { __typename?: 'Query', load: { __typename?: 'Load', id: string, name?: Types.Maybe<string>, createdAt: number, dispatchAt?: Types.Maybe<number>, hasLanded?: Types.Maybe<boolean>, loadNumber: number, isFull: boolean, state: Types.LoadState, isOpen: boolean, weight: number, maxSlots: number, availableSlots: number, occupiedSlots: number, plane: { __typename?: 'Plane', id: string, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string> }, gca?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, pilot?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, loadMaster?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, user: { __typename?: 'User', id: string, name?: Types.Maybe<string> } }>, slots?: Types.Maybe<Array<{ __typename?: 'Slot', id: string, createdAt: number, exitWeight: number, passengerName?: Types.Maybe<string>, passengerExitWeight?: Types.Maybe<number>, wingLoading?: Types.Maybe<number>, groupNumber: number, rig?: Types.Maybe<{ __typename?: 'Rig', id: string, name?: Types.Maybe<string>, make?: Types.Maybe<string>, model?: Types.Maybe<string>, serial?: Types.Maybe<string>, canopySize?: Types.Maybe<number>, repackExpiresAt?: Types.Maybe<number>, packValue?: Types.Maybe<number>, maintainedAt?: Types.Maybe<number>, rigType?: Types.Maybe<string>, packingCard?: Types.Maybe<string>, user?: Types.Maybe<{ __typename?: 'User', id: string, name?: Types.Maybe<string> }>, dropzone?: Types.Maybe<{ __typename?: 'Dropzone', id: string }> }>, dropzoneUser?: Types.Maybe<{ __typename?: 'DropzoneUser', id: string, expiresAt?: Types.Maybe<number>, hasCredits: boolean, hasMembership: boolean, hasLicense: boolean, hasExitWeight: boolean, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }>, license?: Types.Maybe<{ __typename?: 'License', id: string, name?: Types.Maybe<string> }>, user: { __typename?: 'User', id: string, name?: Types.Maybe<string>, nickname?: Types.Maybe<string>, phone?: Types.Maybe<string>, email?: Types.Maybe<string>, exitWeight?: Types.Maybe<string>, moderationRole?: Types.Maybe<Types.ModerationRole>, image?: Types.Maybe<string>, apfNumber?: Types.Maybe<string> } }>, ticketType?: Types.Maybe<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string>, cost: number }> }>, jumpType?: Types.Maybe<{ __typename?: 'JumpType', id: string, name?: Types.Maybe<string> }>, extras?: Types.Maybe<Array<{ __typename?: 'Extra', id: string, name?: Types.Maybe<string> }>> }>> } };

export type PlanesQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
}>;


export type PlanesQuery = { __typename?: 'Query', planes: Array<{ __typename?: 'Plane', id: string, minSlots?: Types.Maybe<number>, maxSlots?: Types.Maybe<number>, name?: Types.Maybe<string>, registration?: Types.Maybe<string> }> };

export type CurrentUserPermissionsQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
}>;


export type CurrentUserPermissionsQuery = { __typename?: 'Query', dropzone: { __typename?: 'Dropzone', id: string, name?: Types.Maybe<string>, primaryColor?: Types.Maybe<string>, secondaryColor?: Types.Maybe<string>, currentUser: { __typename?: 'DropzoneUser', id: string, permissions?: Types.Maybe<Array<Types.Permission>>, role?: Types.Maybe<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> } } };

export type RolesQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
  selectable?: Types.Maybe<Types.Scalars['Boolean']>;
}>;


export type RolesQuery = { __typename?: 'Query', dropzone: { __typename?: 'Dropzone', id: string, roles: Array<{ __typename?: 'UserRole', id: string, name?: Types.Maybe<string>, dropzoneId: number }> } };

export type AllowedTicketTypesQueryVariables = Types.Exact<{
  dropzoneId: Types.Scalars['Int'];
  onlyPublicTickets?: Types.Maybe<Types.Scalars['Boolean']>;
}>;


export type AllowedTicketTypesQuery = { __typename?: 'Query', dropzone: { __typename?: 'Dropzone', id: string, ticketTypes: Array<{ __typename?: 'TicketType', id: string, name?: Types.Maybe<string>, altitude?: Types.Maybe<number>, cost: number, isTandem?: Types.Maybe<boolean>, allowManifestingSelf?: Types.Maybe<boolean>, extras: Array<{ __typename?: 'Extra', id: string, cost: number, name?: Types.Maybe<string> }> }> } };
